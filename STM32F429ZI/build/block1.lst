ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccA1DPzA.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"block1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.coap_block1_handler,"ax",%progbits
  18              		.align	1
  19              		.global	coap_block1_handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	coap_block1_handler:
  26              	.LFB3:
  27              		.file 1 "Middlewares/Third_Party/wakaama/block1.c"
   1:Middlewares/Third_Party/wakaama/block1.c **** /*******************************************************************************
   2:Middlewares/Third_Party/wakaama/block1.c ****  *
   3:Middlewares/Third_Party/wakaama/block1.c ****  * Copyright (c) 2016 Intel Corporation and others.
   4:Middlewares/Third_Party/wakaama/block1.c ****  * All rights reserved. This program and the accompanying materials
   5:Middlewares/Third_Party/wakaama/block1.c ****  * are made available under the terms of the Eclipse Public License v1.0
   6:Middlewares/Third_Party/wakaama/block1.c ****  * and Eclipse Distribution License v1.0 which accompany this distribution.
   7:Middlewares/Third_Party/wakaama/block1.c ****  *
   8:Middlewares/Third_Party/wakaama/block1.c ****  * The Eclipse Public License is available at
   9:Middlewares/Third_Party/wakaama/block1.c ****  *    http://www.eclipse.org/legal/epl-v10.html
  10:Middlewares/Third_Party/wakaama/block1.c ****  * The Eclipse Distribution License is available at
  11:Middlewares/Third_Party/wakaama/block1.c ****  *    http://www.eclipse.org/org/documents/edl-v10.php.
  12:Middlewares/Third_Party/wakaama/block1.c ****  *
  13:Middlewares/Third_Party/wakaama/block1.c ****  * Contributors:
  14:Middlewares/Third_Party/wakaama/block1.c ****  *    Simon Bernard - initial API and implementation
  15:Middlewares/Third_Party/wakaama/block1.c ****  *
  16:Middlewares/Third_Party/wakaama/block1.c ****  *******************************************************************************/
  17:Middlewares/Third_Party/wakaama/block1.c **** /*
  18:Middlewares/Third_Party/wakaama/block1.c ****  Copyright (c) 2016 Intel Corporation
  19:Middlewares/Third_Party/wakaama/block1.c **** 
  20:Middlewares/Third_Party/wakaama/block1.c ****  Redistribution and use in source and binary forms, with or without modification,
  21:Middlewares/Third_Party/wakaama/block1.c ****  are permitted provided that the following conditions are met:
  22:Middlewares/Third_Party/wakaama/block1.c **** 
  23:Middlewares/Third_Party/wakaama/block1.c ****      * Redistributions of source code must retain the above copyright notice,
  24:Middlewares/Third_Party/wakaama/block1.c ****        this list of conditions and the following disclaimer.
  25:Middlewares/Third_Party/wakaama/block1.c ****      * Redistributions in binary form must reproduce the above copyright notice,
  26:Middlewares/Third_Party/wakaama/block1.c ****        this list of conditions and the following disclaimer in the documentation
  27:Middlewares/Third_Party/wakaama/block1.c ****        and/or other materials provided with the distribution.
  28:Middlewares/Third_Party/wakaama/block1.c ****      * Neither the name of Intel Corporation nor the names of its contributors
  29:Middlewares/Third_Party/wakaama/block1.c ****        may be used to endorse or promote products derived from this software
  30:Middlewares/Third_Party/wakaama/block1.c ****        without specific prior written permission.
  31:Middlewares/Third_Party/wakaama/block1.c **** 
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccA1DPzA.s 			page 2


  32:Middlewares/Third_Party/wakaama/block1.c ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  33:Middlewares/Third_Party/wakaama/block1.c ****  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  34:Middlewares/Third_Party/wakaama/block1.c ****  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  35:Middlewares/Third_Party/wakaama/block1.c ****  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  36:Middlewares/Third_Party/wakaama/block1.c ****  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  37:Middlewares/Third_Party/wakaama/block1.c ****  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  38:Middlewares/Third_Party/wakaama/block1.c ****  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  39:Middlewares/Third_Party/wakaama/block1.c ****  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
  40:Middlewares/Third_Party/wakaama/block1.c ****  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
  41:Middlewares/Third_Party/wakaama/block1.c ****  THE POSSIBILITY OF SUCH DAMAGE.
  42:Middlewares/Third_Party/wakaama/block1.c **** */
  43:Middlewares/Third_Party/wakaama/block1.c **** #include "internals.h"
  44:Middlewares/Third_Party/wakaama/block1.c **** 
  45:Middlewares/Third_Party/wakaama/block1.c **** #include <stdlib.h>
  46:Middlewares/Third_Party/wakaama/block1.c **** #include <string.h>
  47:Middlewares/Third_Party/wakaama/block1.c **** #include <stdio.h>
  48:Middlewares/Third_Party/wakaama/block1.c **** 
  49:Middlewares/Third_Party/wakaama/block1.c **** // the maximum payload transferred by block1 we accumulate per server
  50:Middlewares/Third_Party/wakaama/block1.c **** #define MAX_BLOCK1_SIZE 4096
  51:Middlewares/Third_Party/wakaama/block1.c **** 
  52:Middlewares/Third_Party/wakaama/block1.c **** uint8_t coap_block1_handler(lwm2m_block1_data_t ** pBlock1Data,
  53:Middlewares/Third_Party/wakaama/block1.c ****                             uint16_t mid,
  54:Middlewares/Third_Party/wakaama/block1.c ****                             uint8_t * buffer,
  55:Middlewares/Third_Party/wakaama/block1.c ****                             size_t length,
  56:Middlewares/Third_Party/wakaama/block1.c ****                             uint16_t blockSize,
  57:Middlewares/Third_Party/wakaama/block1.c ****                             uint32_t blockNum,
  58:Middlewares/Third_Party/wakaama/block1.c ****                             bool blockMore,
  59:Middlewares/Third_Party/wakaama/block1.c ****                             uint8_t ** outputBuffer,
  60:Middlewares/Third_Party/wakaama/block1.c ****                             size_t * outputLength)
  61:Middlewares/Third_Party/wakaama/block1.c **** {
  28              		.loc 1 61 0
  29              		.cfi_startproc
  30              		@ args = 20, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 32
  36              		.cfi_offset 4, -32
  37              		.cfi_offset 5, -28
  38              		.cfi_offset 6, -24
  39              		.cfi_offset 7, -20
  40              		.cfi_offset 8, -16
  41              		.cfi_offset 9, -12
  42              		.cfi_offset 10, -8
  43              		.cfi_offset 14, -4
  44 0004 0E46     		mov	r6, r1
  45 0006 9046     		mov	r8, r2
  46 0008 1D46     		mov	r5, r3
  47 000a 099B     		ldr	r3, [sp, #36]
  48              	.LVL1:
  49 000c 9DF82870 		ldrb	r7, [sp, #40]	@ zero_extendqisi2
  62:Middlewares/Third_Party/wakaama/block1.c ****     lwm2m_block1_data_t * block1Data = *pBlock1Data;;
  50              		.loc 1 62 0
  51 0010 0468     		ldr	r4, [r0]
  52              	.LVL2:
  63:Middlewares/Third_Party/wakaama/block1.c **** 
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccA1DPzA.s 			page 3


  64:Middlewares/Third_Party/wakaama/block1.c ****     // manage new block1 transfer
  65:Middlewares/Third_Party/wakaama/block1.c ****     if (blockNum == 0)
  53              		.loc 1 65 0
  54 0012 1BBB     		cbnz	r3, .L2
  55 0014 8146     		mov	r9, r0
  66:Middlewares/Third_Party/wakaama/block1.c ****     {
  67:Middlewares/Third_Party/wakaama/block1.c ****        // we already have block1 data for this server, clear it
  68:Middlewares/Third_Party/wakaama/block1.c ****        if (block1Data != NULL)
  56              		.loc 1 68 0
  57 0016 BCB1     		cbz	r4, .L3
  69:Middlewares/Third_Party/wakaama/block1.c ****        {
  70:Middlewares/Third_Party/wakaama/block1.c ****            lwm2m_free(block1Data->block1buffer);
  58              		.loc 1 70 0
  59 0018 2068     		ldr	r0, [r4]
  60              	.LVL3:
  61 001a FFF7FEFF 		bl	lwm2m_free
  62              	.LVL4:
  63              	.L4:
  71:Middlewares/Third_Party/wakaama/block1.c ****        }
  72:Middlewares/Third_Party/wakaama/block1.c ****        else
  73:Middlewares/Third_Party/wakaama/block1.c ****        {
  74:Middlewares/Third_Party/wakaama/block1.c ****            block1Data = lwm2m_malloc(sizeof(lwm2m_block1_data_t));
  75:Middlewares/Third_Party/wakaama/block1.c ****            *pBlock1Data = block1Data;
  76:Middlewares/Third_Party/wakaama/block1.c ****            if (NULL == block1Data) return COAP_500_INTERNAL_SERVER_ERROR;
  77:Middlewares/Third_Party/wakaama/block1.c ****        }
  78:Middlewares/Third_Party/wakaama/block1.c **** 
  79:Middlewares/Third_Party/wakaama/block1.c ****        block1Data->block1buffer = lwm2m_malloc(length);
  64              		.loc 1 79 0
  65 001e 2846     		mov	r0, r5
  66 0020 FFF7FEFF 		bl	lwm2m_malloc
  67              	.LVL5:
  68 0024 2060     		str	r0, [r4]
  80:Middlewares/Third_Party/wakaama/block1.c ****        block1Data->block1bufferSize = length;
  69              		.loc 1 80 0
  70 0026 6560     		str	r5, [r4, #4]
  81:Middlewares/Third_Party/wakaama/block1.c **** 
  82:Middlewares/Third_Party/wakaama/block1.c ****        // write new block in buffer
  83:Middlewares/Third_Party/wakaama/block1.c ****        memcpy(block1Data->block1buffer, buffer, length);
  71              		.loc 1 83 0
  72 0028 2A46     		mov	r2, r5
  73 002a 4146     		mov	r1, r8
  74 002c FFF7FEFF 		bl	memcpy
  75              	.LVL6:
  84:Middlewares/Third_Party/wakaama/block1.c ****        block1Data->lastmid = mid;
  76              		.loc 1 84 0
  77 0030 2681     		strh	r6, [r4, #8]	@ movhi
  78              	.LVL7:
  79              	.L6:
  85:Middlewares/Third_Party/wakaama/block1.c ****     }
  86:Middlewares/Third_Party/wakaama/block1.c ****     // manage already started block1 transfer
  87:Middlewares/Third_Party/wakaama/block1.c ****     else
  88:Middlewares/Third_Party/wakaama/block1.c ****     {
  89:Middlewares/Third_Party/wakaama/block1.c ****        if (block1Data == NULL)
  90:Middlewares/Third_Party/wakaama/block1.c ****        {
  91:Middlewares/Third_Party/wakaama/block1.c ****            // we never receive the first block
  92:Middlewares/Third_Party/wakaama/block1.c ****            // TODO should we clean block1 data for this server ?
  93:Middlewares/Third_Party/wakaama/block1.c ****            return COAP_408_REQ_ENTITY_INCOMPLETE;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccA1DPzA.s 			page 4


  94:Middlewares/Third_Party/wakaama/block1.c ****        }
  95:Middlewares/Third_Party/wakaama/block1.c **** 
  96:Middlewares/Third_Party/wakaama/block1.c ****        // If this is a retransmission, we already did that.
  97:Middlewares/Third_Party/wakaama/block1.c ****        if (block1Data->lastmid != mid)
  98:Middlewares/Third_Party/wakaama/block1.c ****        {
  99:Middlewares/Third_Party/wakaama/block1.c ****           uint8_t * oldBuffer = block1Data->block1buffer;
 100:Middlewares/Third_Party/wakaama/block1.c ****           size_t oldSize = block1Data->block1bufferSize;
 101:Middlewares/Third_Party/wakaama/block1.c **** 
 102:Middlewares/Third_Party/wakaama/block1.c ****           if (block1Data->block1bufferSize != blockSize * blockNum)
 103:Middlewares/Third_Party/wakaama/block1.c ****           {
 104:Middlewares/Third_Party/wakaama/block1.c ****               // we don't receive block in right order
 105:Middlewares/Third_Party/wakaama/block1.c ****               // TODO should we clean block1 data for this server ?
 106:Middlewares/Third_Party/wakaama/block1.c ****               return COAP_408_REQ_ENTITY_INCOMPLETE;
 107:Middlewares/Third_Party/wakaama/block1.c ****           }
 108:Middlewares/Third_Party/wakaama/block1.c **** 
 109:Middlewares/Third_Party/wakaama/block1.c ****           // is it too large?
 110:Middlewares/Third_Party/wakaama/block1.c ****           if (block1Data->block1bufferSize + length >= MAX_BLOCK1_SIZE) {
 111:Middlewares/Third_Party/wakaama/block1.c ****               return COAP_413_ENTITY_TOO_LARGE;
 112:Middlewares/Third_Party/wakaama/block1.c ****           }
 113:Middlewares/Third_Party/wakaama/block1.c ****           // re-alloc new buffer
 114:Middlewares/Third_Party/wakaama/block1.c ****           block1Data->block1bufferSize = oldSize+length;
 115:Middlewares/Third_Party/wakaama/block1.c ****           block1Data->block1buffer = lwm2m_malloc(block1Data->block1bufferSize);
 116:Middlewares/Third_Party/wakaama/block1.c ****           if (NULL == block1Data->block1buffer) return COAP_500_INTERNAL_SERVER_ERROR;
 117:Middlewares/Third_Party/wakaama/block1.c ****           memcpy(block1Data->block1buffer, oldBuffer, oldSize);
 118:Middlewares/Third_Party/wakaama/block1.c ****           lwm2m_free(oldBuffer);
 119:Middlewares/Third_Party/wakaama/block1.c **** 
 120:Middlewares/Third_Party/wakaama/block1.c ****           // write new block in buffer
 121:Middlewares/Third_Party/wakaama/block1.c ****           memcpy(block1Data->block1buffer + oldSize, buffer, length);
 122:Middlewares/Third_Party/wakaama/block1.c ****           block1Data->lastmid = mid;
 123:Middlewares/Third_Party/wakaama/block1.c ****        }
 124:Middlewares/Third_Party/wakaama/block1.c ****     }
 125:Middlewares/Third_Party/wakaama/block1.c **** 
 126:Middlewares/Third_Party/wakaama/block1.c ****     if (blockMore)
  80              		.loc 1 126 0
  81 0032 002F     		cmp	r7, #0
  82 0034 39D1     		bne	.L14
 127:Middlewares/Third_Party/wakaama/block1.c ****     {
 128:Middlewares/Third_Party/wakaama/block1.c ****         *outputLength = -1;
 129:Middlewares/Third_Party/wakaama/block1.c ****         return COAP_231_CONTINUE;
 130:Middlewares/Third_Party/wakaama/block1.c ****     }
 131:Middlewares/Third_Party/wakaama/block1.c ****     else
 132:Middlewares/Third_Party/wakaama/block1.c ****     {
 133:Middlewares/Third_Party/wakaama/block1.c ****         // buffer is full, set output parameter
 134:Middlewares/Third_Party/wakaama/block1.c ****         // we don't free it to be able to send retransmission
 135:Middlewares/Third_Party/wakaama/block1.c ****         *outputLength = block1Data->block1bufferSize;
  83              		.loc 1 135 0
  84 0036 6368     		ldr	r3, [r4, #4]
  85 0038 0C9A     		ldr	r2, [sp, #48]
  86 003a 1360     		str	r3, [r2]
 136:Middlewares/Third_Party/wakaama/block1.c ****         *outputBuffer = block1Data->block1buffer;
  87              		.loc 1 136 0
  88 003c 2268     		ldr	r2, [r4]
  89 003e 0B9B     		ldr	r3, [sp, #44]
  90 0040 1A60     		str	r2, [r3]
 137:Middlewares/Third_Party/wakaama/block1.c **** 
 138:Middlewares/Third_Party/wakaama/block1.c ****         return NO_ERROR;
  91              		.loc 1 138 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccA1DPzA.s 			page 5


  92 0042 0020     		movs	r0, #0
  93              	.L5:
 139:Middlewares/Third_Party/wakaama/block1.c ****     }
 140:Middlewares/Third_Party/wakaama/block1.c **** }
  94              		.loc 1 140 0
  95 0044 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
  96              	.LVL8:
  97              	.L3:
  74:Middlewares/Third_Party/wakaama/block1.c ****            *pBlock1Data = block1Data;
  98              		.loc 1 74 0
  99 0048 0C20     		movs	r0, #12
 100              	.LVL9:
 101 004a FFF7FEFF 		bl	lwm2m_malloc
 102              	.LVL10:
 103 004e 0446     		mov	r4, r0
 104              	.LVL11:
  75:Middlewares/Third_Party/wakaama/block1.c ****            if (NULL == block1Data) return COAP_500_INTERNAL_SERVER_ERROR;
 105              		.loc 1 75 0
 106 0050 C9F80000 		str	r0, [r9]
  76:Middlewares/Third_Party/wakaama/block1.c ****        }
 107              		.loc 1 76 0
 108 0054 0028     		cmp	r0, #0
 109 0056 E2D1     		bne	.L4
 110 0058 A020     		movs	r0, #160
 111              	.LVL12:
 112 005a F3E7     		b	.L5
 113              	.LVL13:
 114              	.L2:
  89:Middlewares/Third_Party/wakaama/block1.c ****        {
 115              		.loc 1 89 0
 116 005c 5CB3     		cbz	r4, .L9
  97:Middlewares/Third_Party/wakaama/block1.c ****        {
 117              		.loc 1 97 0
 118 005e 2289     		ldrh	r2, [r4, #8]
 119              	.LVL14:
 120 0060 8A42     		cmp	r2, r1
 121 0062 E6D0     		beq	.L6
 122              	.LBB2:
  99:Middlewares/Third_Party/wakaama/block1.c ****           size_t oldSize = block1Data->block1bufferSize;
 123              		.loc 1 99 0
 124 0064 D4F800A0 		ldr	r10, [r4]
 125              	.LVL15:
 100:Middlewares/Third_Party/wakaama/block1.c **** 
 126              		.loc 1 100 0
 127 0068 D4F80490 		ldr	r9, [r4, #4]
 128              	.LVL16:
 102:Middlewares/Third_Party/wakaama/block1.c ****           {
 129              		.loc 1 102 0
 130 006c BDF82020 		ldrh	r2, [sp, #32]
 131 0070 03FB02F3 		mul	r3, r3, r2
 132 0074 4B45     		cmp	r3, r9
 133 0076 20D1     		bne	.L10
 110:Middlewares/Third_Party/wakaama/block1.c ****               return COAP_413_ENTITY_TOO_LARGE;
 134              		.loc 1 110 0
 135 0078 09EB0500 		add	r0, r9, r5
 136              	.LVL17:
 137 007c B0F5805F 		cmp	r0, #4096
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccA1DPzA.s 			page 6


 138 0080 1DD2     		bcs	.L11
 114:Middlewares/Third_Party/wakaama/block1.c ****           block1Data->block1buffer = lwm2m_malloc(block1Data->block1bufferSize);
 139              		.loc 1 114 0
 140 0082 6060     		str	r0, [r4, #4]
 115:Middlewares/Third_Party/wakaama/block1.c ****           if (NULL == block1Data->block1buffer) return COAP_500_INTERNAL_SERVER_ERROR;
 141              		.loc 1 115 0
 142 0084 FFF7FEFF 		bl	lwm2m_malloc
 143              	.LVL18:
 144 0088 2060     		str	r0, [r4]
 116:Middlewares/Third_Party/wakaama/block1.c ****           memcpy(block1Data->block1buffer, oldBuffer, oldSize);
 145              		.loc 1 116 0
 146 008a D0B1     		cbz	r0, .L12
 117:Middlewares/Third_Party/wakaama/block1.c ****           lwm2m_free(oldBuffer);
 147              		.loc 1 117 0
 148 008c 4A46     		mov	r2, r9
 149 008e 5146     		mov	r1, r10
 150 0090 FFF7FEFF 		bl	memcpy
 151              	.LVL19:
 118:Middlewares/Third_Party/wakaama/block1.c **** 
 152              		.loc 1 118 0
 153 0094 5046     		mov	r0, r10
 154 0096 FFF7FEFF 		bl	lwm2m_free
 155              	.LVL20:
 121:Middlewares/Third_Party/wakaama/block1.c ****           block1Data->lastmid = mid;
 156              		.loc 1 121 0
 157 009a 2068     		ldr	r0, [r4]
 158 009c 2A46     		mov	r2, r5
 159 009e 4146     		mov	r1, r8
 160 00a0 4844     		add	r0, r0, r9
 161 00a2 FFF7FEFF 		bl	memcpy
 162              	.LVL21:
 122:Middlewares/Third_Party/wakaama/block1.c ****        }
 163              		.loc 1 122 0
 164 00a6 2681     		strh	r6, [r4, #8]	@ movhi
 165 00a8 C3E7     		b	.L6
 166              	.LVL22:
 167              	.L14:
 168              	.LBE2:
 128:Middlewares/Third_Party/wakaama/block1.c ****         return COAP_231_CONTINUE;
 169              		.loc 1 128 0
 170 00aa 4FF0FF33 		mov	r3, #-1
 171 00ae 0C9A     		ldr	r2, [sp, #48]
 172 00b0 1360     		str	r3, [r2]
 129:Middlewares/Third_Party/wakaama/block1.c ****     }
 173              		.loc 1 129 0
 174 00b2 5F20     		movs	r0, #95
 175 00b4 C6E7     		b	.L5
 176              	.LVL23:
 177              	.L9:
  93:Middlewares/Third_Party/wakaama/block1.c ****        }
 178              		.loc 1 93 0
 179 00b6 8820     		movs	r0, #136
 180              	.LVL24:
 181 00b8 C4E7     		b	.L5
 182              	.LVL25:
 183              	.L10:
 184              	.LBB3:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccA1DPzA.s 			page 7


 106:Middlewares/Third_Party/wakaama/block1.c ****           }
 185              		.loc 1 106 0
 186 00ba 8820     		movs	r0, #136
 187              	.LVL26:
 188 00bc C2E7     		b	.L5
 189              	.L11:
 111:Middlewares/Third_Party/wakaama/block1.c ****           }
 190              		.loc 1 111 0
 191 00be 8D20     		movs	r0, #141
 192 00c0 C0E7     		b	.L5
 193              	.LVL27:
 194              	.L12:
 116:Middlewares/Third_Party/wakaama/block1.c ****           memcpy(block1Data->block1buffer, oldBuffer, oldSize);
 195              		.loc 1 116 0
 196 00c2 A020     		movs	r0, #160
 197 00c4 BEE7     		b	.L5
 198              	.LBE3:
 199              		.cfi_endproc
 200              	.LFE3:
 202              		.section	.text.free_block1_buffer,"ax",%progbits
 203              		.align	1
 204              		.global	free_block1_buffer
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu fpv4-sp-d16
 210              	free_block1_buffer:
 211              	.LFB4:
 141:Middlewares/Third_Party/wakaama/block1.c **** 
 142:Middlewares/Third_Party/wakaama/block1.c **** void free_block1_buffer(lwm2m_block1_data_t * block1Data)
 143:Middlewares/Third_Party/wakaama/block1.c **** {
 212              		.loc 1 143 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              	.LVL28:
 144:Middlewares/Third_Party/wakaama/block1.c ****     if (block1Data != NULL)
 217              		.loc 1 144 0
 218 0000 50B1     		cbz	r0, .L18
 143:Middlewares/Third_Party/wakaama/block1.c ****     if (block1Data != NULL)
 219              		.loc 1 143 0
 220 0002 10B5     		push	{r4, lr}
 221              	.LCFI1:
 222              		.cfi_def_cfa_offset 8
 223              		.cfi_offset 4, -8
 224              		.cfi_offset 14, -4
 225 0004 0446     		mov	r4, r0
 145:Middlewares/Third_Party/wakaama/block1.c ****     {
 146:Middlewares/Third_Party/wakaama/block1.c ****         // free block1 buffer
 147:Middlewares/Third_Party/wakaama/block1.c ****         lwm2m_free(block1Data->block1buffer);
 226              		.loc 1 147 0
 227 0006 0068     		ldr	r0, [r0]
 228              	.LVL29:
 229 0008 FFF7FEFF 		bl	lwm2m_free
 230              	.LVL30:
 148:Middlewares/Third_Party/wakaama/block1.c ****         block1Data->block1bufferSize = 0 ;
 231              		.loc 1 148 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccA1DPzA.s 			page 8


 232 000c 0023     		movs	r3, #0
 233 000e 6360     		str	r3, [r4, #4]
 149:Middlewares/Third_Party/wakaama/block1.c **** 
 150:Middlewares/Third_Party/wakaama/block1.c ****         // free current element
 151:Middlewares/Third_Party/wakaama/block1.c ****         lwm2m_free(block1Data);
 234              		.loc 1 151 0
 235 0010 2046     		mov	r0, r4
 236 0012 FFF7FEFF 		bl	lwm2m_free
 237              	.LVL31:
 152:Middlewares/Third_Party/wakaama/block1.c ****     }
 153:Middlewares/Third_Party/wakaama/block1.c **** }
 238              		.loc 1 153 0
 239 0016 10BD     		pop	{r4, pc}
 240              	.LVL32:
 241              	.L18:
 242              	.LCFI2:
 243              		.cfi_def_cfa_offset 0
 244              		.cfi_restore 4
 245              		.cfi_restore 14
 246 0018 7047     		bx	lr
 247              		.cfi_endproc
 248              	.LFE4:
 250              		.text
 251              	.Letext0:
 252              		.file 2 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_defau
 253              		.file 3 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 254              		.file 4 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/
 255              		.file 5 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 256              		.file 6 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 257              		.file 7 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 258              		.file 8 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/time.h"
 259              		.file 9 "Middlewares/Third_Party/wakaama/liblwm2m.h"
 260              		.file 10 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/stdlib.h"
 261              		.file 11 "Middlewares/Third_Party/wakaama/er-coap-13/er-coap-13.h"
 262              		.file 12 "<built-in>"
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccA1DPzA.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 block1.c
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccA1DPzA.s:18     .text.coap_block1_handler:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccA1DPzA.s:25     .text.coap_block1_handler:0000000000000000 coap_block1_handler
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccA1DPzA.s:203    .text.free_block1_buffer:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccA1DPzA.s:210    .text.free_block1_buffer:0000000000000000 free_block1_buffer

UNDEFINED SYMBOLS
lwm2m_free
lwm2m_malloc
memcpy

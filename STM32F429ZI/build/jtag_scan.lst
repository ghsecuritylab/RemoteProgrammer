ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"jtag_scan.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.init_tagrets_in_chain,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	init_tagrets_in_chain:
  25              	.LFB128:
  26              		.file 1 "Src/jtag/jtag_scan.c"
   1:Src/jtag/jtag_scan.c **** /*
   2:Src/jtag/jtag_scan.c ****  * Copyright (C) 2011  Black Sphere Technologies Ltd.
   3:Src/jtag/jtag_scan.c ****  * Written by Gareth McMullin <gareth@blacksphere.co.nz>
   4:Src/jtag/jtag_scan.c ****  *
   5:Src/jtag/jtag_scan.c ****  * Copyright (C) 2018  Tomasz Michalec <tomasz.michalec1996@gmail.com>
   6:Src/jtag/jtag_scan.c ****  *
   7:Src/jtag/jtag_scan.c ****  * This program is free software: you can redistribute it and/or modify
   8:Src/jtag/jtag_scan.c ****  * it under the terms of the GNU General Public License as published by
   9:Src/jtag/jtag_scan.c ****  * the Free Software Foundation, either version 3 of the License, or
  10:Src/jtag/jtag_scan.c ****  * (at your option) any later version.
  11:Src/jtag/jtag_scan.c ****  *
  12:Src/jtag/jtag_scan.c ****  * This program is distributed in the hope that it will be useful,
  13:Src/jtag/jtag_scan.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:Src/jtag/jtag_scan.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:Src/jtag/jtag_scan.c ****  * GNU General Public License for more details.
  16:Src/jtag/jtag_scan.c ****  *
  17:Src/jtag/jtag_scan.c ****  * You should have received a copy of the GNU General Public License
  18:Src/jtag/jtag_scan.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  19:Src/jtag/jtag_scan.c ****  */
  20:Src/jtag/jtag_scan.c **** 
  21:Src/jtag/jtag_scan.c **** /*
  22:Src/jtag/jtag_scan.c ****  * What has been modified by Tomasz Michalec:
  23:Src/jtag/jtag_scan.c ****  *   -- Underling API changed to jtag_low_level module implemented in this project (RemoteProgramme
  24:Src/jtag/jtag_scan.c ****  *   -- Delete *post/prescan fields from jtag_dev_t. Now jtag_dev_write_ir
  25:Src/jtag/jtag_scan.c ****  *      and jtag_dev_shift_dr calculate it in runtime.
  26:Src/jtag/jtag_scan.c ****  *   -- jtag_scan is splited into functions and limited to minimal functional part.
  27:Src/jtag/jtag_scan.c ****  *   -- jtag_test added for debuging purpose.
  28:Src/jtag/jtag_scan.c ****  */
  29:Src/jtag/jtag_scan.c **** #include "main.h"
  30:Src/jtag/jtag_scan.c **** #include "stm32f4xx_it.h"
  31:Src/jtag/jtag_scan.c **** #include "jtag/jtag_low_level.h"
  32:Src/jtag/jtag_scan.c **** #include "jtag/jtag_scan.h"
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 2


  33:Src/jtag/jtag_scan.c **** #include "adiv5/adiv5_jtag.h"
  34:Src/jtag/jtag_scan.c **** 
  35:Src/jtag/jtag_scan.c **** static jtag_dev_t devs[JTAG_MAX_DEVS];
  36:Src/jtag/jtag_scan.c **** static int num_of_devs;
  37:Src/jtag/jtag_scan.c **** static int current_dev;
  38:Src/jtag/jtag_scan.c **** 
  39:Src/jtag/jtag_scan.c **** static struct jtag_dev_descr_s {
  40:Src/jtag/jtag_scan.c ****   uint32_t idcode;
  41:Src/jtag/jtag_scan.c ****   uint32_t idmask;
  42:Src/jtag/jtag_scan.c ****   char *descr;
  43:Src/jtag/jtag_scan.c ****   int (*handler)(int dev_num);
  44:Src/jtag/jtag_scan.c **** } dev_descr[] = {
  45:Src/jtag/jtag_scan.c ****   {.idcode = 0x0BA00477, .idmask = 0x0FFF0FFF,
  46:Src/jtag/jtag_scan.c ****     .descr = "ARM Limited: ADIv5 JTAG-DP port.",
  47:Src/jtag/jtag_scan.c ****     .handler = adiv5_jtag_handler},
  48:Src/jtag/jtag_scan.c ****     /* Just for fun, unsupported */
  49:Src/jtag/jtag_scan.c ****   {.idcode = 0x3F0F0F0F, .idmask = 0xFFFFFFFF,
  50:Src/jtag/jtag_scan.c ****     .descr = "ST Microelectronics: STR730"},
  51:Src/jtag/jtag_scan.c ****   {.idcode = 0x06410041, .idmask = 0x0FFFFFFF,
  52:Src/jtag/jtag_scan.c ****     .descr = "ST Microelectronics: STM32, Medium density."},
  53:Src/jtag/jtag_scan.c ****   {.idcode = 0x06412041, .idmask = 0x0FFFFFFF,
  54:Src/jtag/jtag_scan.c ****     .descr = "ST Microelectronics: STM32, Low density."},
  55:Src/jtag/jtag_scan.c ****   {.idcode = 0x06414041, .idmask = 0x0FFFFFFF,
  56:Src/jtag/jtag_scan.c ****     .descr = "ST Microelectronics: STM32, High density."},
  57:Src/jtag/jtag_scan.c ****   {.idcode = 0x06416041, .idmask = 0x0FFFFFFF,
  58:Src/jtag/jtag_scan.c ****     .descr = "ST Microelectronics: STM32L."},
  59:Src/jtag/jtag_scan.c ****   {.idcode = 0x06418041, .idmask = 0x0FFFFFFF,
  60:Src/jtag/jtag_scan.c ****     .descr = "ST Microelectronics: STM32, Connectivity Line."},
  61:Src/jtag/jtag_scan.c ****   {.idcode = 0x06420041, .idmask = 0x0FFFFFFF,
  62:Src/jtag/jtag_scan.c ****     .descr = "ST Microelectronics: STM32, Value Line."},
  63:Src/jtag/jtag_scan.c ****   {.idcode = 0x06428041, .idmask = 0x0FFFFFFF,
  64:Src/jtag/jtag_scan.c ****     .descr = "ST Microelectronics: STM32, Value Line, High density."},
  65:Src/jtag/jtag_scan.c ****   {.idcode = 0x06411041, .idmask = 0xFFFFFFFF,
  66:Src/jtag/jtag_scan.c ****     .descr = "ST Microelectronics: STM32F2xx."},
  67:Src/jtag/jtag_scan.c ****   {.idcode = 0x06413041 , .idmask = 0xFFFFFFFF,
  68:Src/jtag/jtag_scan.c ****     .descr = "ST Microelectronics: STM32F4xx."},
  69:Src/jtag/jtag_scan.c ****   {.idcode = 0x0BB11477 , .idmask = 0xFFFFFFFF,
  70:Src/jtag/jtag_scan.c ****     .descr = "NPX: LPC11C24."},
  71:Src/jtag/jtag_scan.c ****   {.idcode = 0x8940303F, .idmask = 0xFFFFFFFF, .descr = "ATMEL: ATMega16."},
  72:Src/jtag/jtag_scan.c ****   {.idcode = 0x0792603F, .idmask = 0xFFFFFFFF, .descr = "ATMEL: AT91SAM9261."},
  73:Src/jtag/jtag_scan.c ****   {.idcode = 0x20270013, .idmask = 0xFFFFFFFF, .descr = "Intel: i80386ex."},
  74:Src/jtag/jtag_scan.c ****   {.idcode = 0, .idmask = 0, .descr = "Unknown"},
  75:Src/jtag/jtag_scan.c **** };
  76:Src/jtag/jtag_scan.c **** 
  77:Src/jtag/jtag_scan.c **** static int get_ir_len_in_chain(jtag_dev_t *devs_table, int max_number_of_devs)
  78:Src/jtag/jtag_scan.c **** {
  79:Src/jtag/jtag_scan.c ****   int ir_len, num_of_devs = 0;
  80:Src/jtag/jtag_scan.c **** 
  81:Src/jtag/jtag_scan.c ****   jtag_go_to_idle();
  82:Src/jtag/jtag_scan.c ****   jtag_from_idle_to_shift_ir();
  83:Src/jtag/jtag_scan.c ****   // after reset, devices in chain should have 0b00...01 in IR
  84:Src/jtag/jtag_scan.c **** 
  85:Src/jtag/jtag_scan.c ****   if(!jtag_tdi(GPIO_PIN_SET, GPIO_PIN_RESET)) {
  86:Src/jtag/jtag_scan.c ****     // No device detected
  87:Src/jtag/jtag_scan.c ****     return num_of_devs;
  88:Src/jtag/jtag_scan.c ****   }
  89:Src/jtag/jtag_scan.c ****   // already one bit is readed form ir.
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 3


  90:Src/jtag/jtag_scan.c ****   ir_len = 1;
  91:Src/jtag/jtag_scan.c ****   do {
  92:Src/jtag/jtag_scan.c ****     num_of_devs++;
  93:Src/jtag/jtag_scan.c ****     if(num_of_devs > max_number_of_devs) {
  94:Src/jtag/jtag_scan.c ****       printf("ERROR: More devices in JTAG chain than supported\n");
  95:Src/jtag/jtag_scan.c ****       return -1;
  96:Src/jtag/jtag_scan.c ****     }
  97:Src/jtag/jtag_scan.c ****     // read zeros that are from current device ir
  98:Src/jtag/jtag_scan.c ****     while(!jtag_tdi(GPIO_PIN_SET, GPIO_PIN_RESET)) {
  99:Src/jtag/jtag_scan.c ****       ir_len++;
 100:Src/jtag/jtag_scan.c ****     }
 101:Src/jtag/jtag_scan.c ****     // we have one, this is begining of next device IR or end of chain
 102:Src/jtag/jtag_scan.c ****     devs_table->ir_len = ir_len;
 103:Src/jtag/jtag_scan.c ****     devs_table++;
 104:Src/jtag/jtag_scan.c ****     printf("dev %d: ir_len: %d\n", num_of_devs - 1, ir_len);
 105:Src/jtag/jtag_scan.c ****     // we have one bit, and if it is next device, we will read 0 from while condition.
 106:Src/jtag/jtag_scan.c ****     // so reading next device ir len start with 2 already readed bits.
 107:Src/jtag/jtag_scan.c ****     ir_len = 2;
 108:Src/jtag/jtag_scan.c ****   } while(!jtag_tdi(GPIO_PIN_SET, GPIO_PIN_RESET));
 109:Src/jtag/jtag_scan.c **** 
 110:Src/jtag/jtag_scan.c ****   //TODO: We pushed ones to IR, so all devices are in BYPASS mode. 
 111:Src/jtag/jtag_scan.c ****   //      We can check if we have num_of_devs * one bit register filed with 0.
 112:Src/jtag/jtag_scan.c ****   jtag_tms(GPIO_PIN_SET);    // from shift to exit
 113:Src/jtag/jtag_scan.c ****   jtag_from_exit_to_idle();
 114:Src/jtag/jtag_scan.c **** 
 115:Src/jtag/jtag_scan.c ****   return num_of_devs;
 116:Src/jtag/jtag_scan.c **** }
 117:Src/jtag/jtag_scan.c **** 
 118:Src/jtag/jtag_scan.c **** static int get_idcodes(jtag_dev_t *devs_table, int num_of_devs)
 119:Src/jtag/jtag_scan.c **** {
 120:Src/jtag/jtag_scan.c ****   int i;
 121:Src/jtag/jtag_scan.c **** 
 122:Src/jtag/jtag_scan.c ****   jtag_go_to_idle();
 123:Src/jtag/jtag_scan.c ****   jtag_from_idle_to_shift_dr();
 124:Src/jtag/jtag_scan.c ****   // after reset, devices in chain should have selected IDCODE DR
 125:Src/jtag/jtag_scan.c ****   // devices without IDCODE should have selected BYPASS DR
 126:Src/jtag/jtag_scan.c ****   
 127:Src/jtag/jtag_scan.c ****   for(i = 0; i < num_of_devs; i++) {
 128:Src/jtag/jtag_scan.c ****     if(!jtag_tdi(GPIO_PIN_SET, GPIO_PIN_RESET)){
 129:Src/jtag/jtag_scan.c ****       // 0 means BYPASS DR, skip this device
 130:Src/jtag/jtag_scan.c ****       devs_table->idcode = 0;
 131:Src/jtag/jtag_scan.c ****     } else {
 132:Src/jtag/jtag_scan.c ****       // IDCODE allways start with one and has 32 bits
 133:Src/jtag/jtag_scan.c ****       devs_table->idcode = jtag_tdin(31, UINT32_MAX, GPIO_PIN_RESET);
 134:Src/jtag/jtag_scan.c ****       devs_table->idcode <<= 1;
 135:Src/jtag/jtag_scan.c ****       devs_table->idcode += 1;    // one that was read at begin of for-loop
 136:Src/jtag/jtag_scan.c ****     }
 137:Src/jtag/jtag_scan.c ****     printf("dev %d: IDCODE: 0x%lx\n", i, devs_table->idcode);
 138:Src/jtag/jtag_scan.c ****     devs_table++;
 139:Src/jtag/jtag_scan.c ****   }
 140:Src/jtag/jtag_scan.c ****   jtag_tms(GPIO_PIN_SET);    // from shift to exit
 141:Src/jtag/jtag_scan.c ****   jtag_from_exit_to_idle();
 142:Src/jtag/jtag_scan.c **** 
 143:Src/jtag/jtag_scan.c ****   return 0;
 144:Src/jtag/jtag_scan.c **** }
 145:Src/jtag/jtag_scan.c **** 
 146:Src/jtag/jtag_scan.c **** static int init_tagrets_in_chain(jtag_dev_t *devs_table, int num_of_devs)
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 4


 147:Src/jtag/jtag_scan.c **** {
  27              		.loc 1 147 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 3, -24
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 0546     		mov	r5, r0
  42 0004 0F46     		mov	r7, r1
  43              	.LVL1:
 148:Src/jtag/jtag_scan.c ****   int i, j;
 149:Src/jtag/jtag_scan.c **** 
 150:Src/jtag/jtag_scan.c ****   for(i = 0; i < num_of_devs; i++) {
  44              		.loc 1 150 0
  45 0006 0026     		movs	r6, #0
  46 0008 25E0     		b	.L2
  47              	.LVL2:
  48              	.L4:
 151:Src/jtag/jtag_scan.c ****     for(j = 0; dev_descr[j].idcode; j++) {
 152:Src/jtag/jtag_scan.c ****       if((devs_table->idcode & dev_descr[j].idmask) == dev_descr[j].idcode) {
 153:Src/jtag/jtag_scan.c ****         devs_table->descr = dev_descr[j].descr;
 154:Src/jtag/jtag_scan.c ****         if(dev_descr[j].handler) {
 155:Src/jtag/jtag_scan.c ****           printf("Start dev %d handler\n", i);
 156:Src/jtag/jtag_scan.c ****           dev_descr[j].handler(i);
 157:Src/jtag/jtag_scan.c ****         } else {
 158:Src/jtag/jtag_scan.c ****           printf("dev %d has no handler\n", i);
  49              		.loc 1 158 0
  50 000a 3146     		mov	r1, r6
  51 000c 1548     		ldr	r0, .L11
  52 000e FFF7FEFF 		bl	printf
  53              	.LVL3:
  54              	.L3:
 151:Src/jtag/jtag_scan.c ****     for(j = 0; dev_descr[j].idcode; j++) {
  55              		.loc 1 151 0 discriminator 2
  56 0012 0134     		adds	r4, r4, #1
  57              	.LVL4:
  58              	.L6:
 151:Src/jtag/jtag_scan.c ****     for(j = 0; dev_descr[j].idcode; j++) {
  59              		.loc 1 151 0 is_stmt 0 discriminator 1
  60 0014 2301     		lsls	r3, r4, #4
  61 0016 144A     		ldr	r2, .L11+4
  62 0018 D158     		ldr	r1, [r2, r3]
  63 001a D1B1     		cbz	r1, .L9
 152:Src/jtag/jtag_scan.c ****         devs_table->descr = dev_descr[j].descr;
  64              		.loc 1 152 0 is_stmt 1
  65 001c 6B68     		ldr	r3, [r5, #4]
  66 001e 124A     		ldr	r2, .L11+4
  67 0020 02EB0412 		add	r2, r2, r4, lsl #4
  68 0024 5268     		ldr	r2, [r2, #4]
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 5


  69 0026 1340     		ands	r3, r3, r2
  70 0028 8B42     		cmp	r3, r1
  71 002a F2D1     		bne	.L3
 153:Src/jtag/jtag_scan.c ****         if(dev_descr[j].handler) {
  72              		.loc 1 153 0
  73 002c 0E4B     		ldr	r3, .L11+4
  74 002e 03EB0413 		add	r3, r3, r4, lsl #4
  75 0032 9A68     		ldr	r2, [r3, #8]
  76 0034 AA60     		str	r2, [r5, #8]
 154:Src/jtag/jtag_scan.c ****           printf("Start dev %d handler\n", i);
  77              		.loc 1 154 0
  78 0036 DB68     		ldr	r3, [r3, #12]
  79 0038 002B     		cmp	r3, #0
  80 003a E6D0     		beq	.L4
 155:Src/jtag/jtag_scan.c ****           dev_descr[j].handler(i);
  81              		.loc 1 155 0
  82 003c 3146     		mov	r1, r6
  83 003e 0B48     		ldr	r0, .L11+8
  84 0040 FFF7FEFF 		bl	printf
  85              	.LVL5:
 156:Src/jtag/jtag_scan.c ****         } else {
  86              		.loc 1 156 0
  87 0044 084B     		ldr	r3, .L11+4
  88 0046 03EB0413 		add	r3, r3, r4, lsl #4
  89 004a DB68     		ldr	r3, [r3, #12]
  90 004c 3046     		mov	r0, r6
  91 004e 9847     		blx	r3
  92              	.LVL6:
  93 0050 DFE7     		b	.L3
  94              	.L9:
 159:Src/jtag/jtag_scan.c ****         }
 160:Src/jtag/jtag_scan.c ****       }
 161:Src/jtag/jtag_scan.c ****     }
 162:Src/jtag/jtag_scan.c ****     devs_table++;
  95              		.loc 1 162 0 discriminator 2
  96 0052 1035     		adds	r5, r5, #16
  97              	.LVL7:
 150:Src/jtag/jtag_scan.c ****     for(j = 0; dev_descr[j].idcode; j++) {
  98              		.loc 1 150 0 discriminator 2
  99 0054 0136     		adds	r6, r6, #1
 100              	.LVL8:
 101              	.L2:
 150:Src/jtag/jtag_scan.c ****     for(j = 0; dev_descr[j].idcode; j++) {
 102              		.loc 1 150 0 is_stmt 0 discriminator 1
 103 0056 BE42     		cmp	r6, r7
 104 0058 01DA     		bge	.L10
 151:Src/jtag/jtag_scan.c ****       if((devs_table->idcode & dev_descr[j].idmask) == dev_descr[j].idcode) {
 105              		.loc 1 151 0 is_stmt 1
 106 005a 0024     		movs	r4, #0
 107 005c DAE7     		b	.L6
 108              	.L10:
 163:Src/jtag/jtag_scan.c ****   }
 164:Src/jtag/jtag_scan.c ****   return 0;
 165:Src/jtag/jtag_scan.c **** }
 109              		.loc 1 165 0
 110 005e 0020     		movs	r0, #0
 111 0060 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 6


 112              	.LVL9:
 113              	.L12:
 114 0062 00BF     		.align	2
 115              	.L11:
 116 0064 18000000 		.word	.LC1
 117 0068 00000000 		.word	.LANCHOR0
 118 006c 00000000 		.word	.LC0
 119              		.cfi_endproc
 120              	.LFE128:
 122              		.section	.text.get_ir_len_in_chain,"ax",%progbits
 123              		.align	1
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv4-sp-d16
 129              	get_ir_len_in_chain:
 130              	.LFB126:
  78:Src/jtag/jtag_scan.c ****   int ir_len, num_of_devs = 0;
 131              		.loc 1 78 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              	.LVL10:
 136 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 137              	.LCFI1:
 138              		.cfi_def_cfa_offset 24
 139              		.cfi_offset 4, -24
 140              		.cfi_offset 5, -20
 141              		.cfi_offset 6, -16
 142              		.cfi_offset 7, -12
 143              		.cfi_offset 8, -8
 144              		.cfi_offset 14, -4
 145 0004 0746     		mov	r7, r0
 146 0006 8846     		mov	r8, r1
 147              	.LVL11:
  81:Src/jtag/jtag_scan.c ****   jtag_from_idle_to_shift_ir();
 148              		.loc 1 81 0
 149 0008 FFF7FEFF 		bl	jtag_go_to_idle
 150              	.LVL12:
  82:Src/jtag/jtag_scan.c ****   // after reset, devices in chain should have 0b00...01 in IR
 151              		.loc 1 82 0
 152 000c FFF7FEFF 		bl	jtag_from_idle_to_shift_ir
 153              	.LVL13:
  85:Src/jtag/jtag_scan.c ****     // No device detected
 154              		.loc 1 85 0
 155 0010 0021     		movs	r1, #0
 156 0012 0120     		movs	r0, #1
 157 0014 FFF7FEFF 		bl	jtag_tdi
 158              	.LVL14:
 159 0018 0546     		mov	r5, r0
 160 001a F8B1     		cbz	r0, .L13
  79:Src/jtag/jtag_scan.c **** 
 161              		.loc 1 79 0
 162 001c 0026     		movs	r6, #0
  90:Src/jtag/jtag_scan.c ****   do {
 163              		.loc 1 90 0
 164 001e 0124     		movs	r4, #1
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 7


 165 0020 14E0     		b	.L17
 166              	.LVL15:
 167              	.L16:
  99:Src/jtag/jtag_scan.c ****     }
 168              		.loc 1 99 0
 169 0022 0134     		adds	r4, r4, #1
 170              	.LVL16:
 171              	.L15:
  98:Src/jtag/jtag_scan.c ****       ir_len++;
 172              		.loc 1 98 0
 173 0024 0021     		movs	r1, #0
 174 0026 0120     		movs	r0, #1
 175 0028 FFF7FEFF 		bl	jtag_tdi
 176              	.LVL17:
 177 002c 0028     		cmp	r0, #0
 178 002e F8D0     		beq	.L16
 102:Src/jtag/jtag_scan.c ****     devs_table++;
 179              		.loc 1 102 0
 180 0030 07F8104B 		strb	r4, [r7], #16
 181              	.LVL18:
 104:Src/jtag/jtag_scan.c ****     // we have one bit, and if it is next device, we will read 0 from while condition.
 182              		.loc 1 104 0
 183 0034 2246     		mov	r2, r4
 184 0036 3146     		mov	r1, r6
 185 0038 0D48     		ldr	r0, .L20
 186 003a FFF7FEFF 		bl	printf
 187              	.LVL19:
 108:Src/jtag/jtag_scan.c **** 
 188              		.loc 1 108 0
 189 003e 0021     		movs	r1, #0
 190 0040 0120     		movs	r0, #1
 191 0042 FFF7FEFF 		bl	jtag_tdi
 192              	.LVL20:
 107:Src/jtag/jtag_scan.c ****   } while(!jtag_tdi(GPIO_PIN_SET, GPIO_PIN_RESET));
 193              		.loc 1 107 0
 194 0046 0224     		movs	r4, #2
  92:Src/jtag/jtag_scan.c ****     if(num_of_devs > max_number_of_devs) {
 195              		.loc 1 92 0
 196 0048 2E46     		mov	r6, r5
 108:Src/jtag/jtag_scan.c **** 
 197              		.loc 1 108 0
 198 004a 50B9     		cbnz	r0, .L19
 199              	.LVL21:
 200              	.L17:
  92:Src/jtag/jtag_scan.c ****     if(num_of_devs > max_number_of_devs) {
 201              		.loc 1 92 0
 202 004c 751C     		adds	r5, r6, #1
 203              	.LVL22:
  93:Src/jtag/jtag_scan.c ****       printf("ERROR: More devices in JTAG chain than supported\n");
 204              		.loc 1 93 0
 205 004e 4545     		cmp	r5, r8
 206 0050 E8DD     		ble	.L15
  94:Src/jtag/jtag_scan.c ****       return -1;
 207              		.loc 1 94 0
 208 0052 0848     		ldr	r0, .L20+4
 209 0054 FFF7FEFF 		bl	puts
 210              	.LVL23:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 8


  95:Src/jtag/jtag_scan.c ****     }
 211              		.loc 1 95 0
 212 0058 4FF0FF35 		mov	r5, #-1
 213              	.LVL24:
 214              	.L13:
 116:Src/jtag/jtag_scan.c **** 
 215              		.loc 1 116 0
 216 005c 2846     		mov	r0, r5
 217 005e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 218              	.LVL25:
 219              	.L19:
 112:Src/jtag/jtag_scan.c ****   jtag_from_exit_to_idle();
 220              		.loc 1 112 0
 221 0062 0120     		movs	r0, #1
 222 0064 FFF7FEFF 		bl	jtag_tms
 223              	.LVL26:
 113:Src/jtag/jtag_scan.c **** 
 224              		.loc 1 113 0
 225 0068 FFF7FEFF 		bl	jtag_from_exit_to_idle
 226              	.LVL27:
 115:Src/jtag/jtag_scan.c **** }
 227              		.loc 1 115 0
 228 006c F6E7     		b	.L13
 229              	.L21:
 230 006e 00BF     		.align	2
 231              	.L20:
 232 0070 34000000 		.word	.LC3
 233 0074 00000000 		.word	.LC2
 234              		.cfi_endproc
 235              	.LFE126:
 237              		.section	.text.get_idcodes,"ax",%progbits
 238              		.align	1
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 242              		.fpu fpv4-sp-d16
 244              	get_idcodes:
 245              	.LFB127:
 119:Src/jtag/jtag_scan.c ****   int i;
 246              		.loc 1 119 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250              	.LVL28:
 251 0000 70B5     		push	{r4, r5, r6, lr}
 252              	.LCFI2:
 253              		.cfi_def_cfa_offset 16
 254              		.cfi_offset 4, -16
 255              		.cfi_offset 5, -12
 256              		.cfi_offset 6, -8
 257              		.cfi_offset 14, -4
 258 0002 0546     		mov	r5, r0
 259 0004 0E46     		mov	r6, r1
 122:Src/jtag/jtag_scan.c ****   jtag_from_idle_to_shift_dr();
 260              		.loc 1 122 0
 261 0006 FFF7FEFF 		bl	jtag_go_to_idle
 262              	.LVL29:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 9


 123:Src/jtag/jtag_scan.c ****   // after reset, devices in chain should have selected IDCODE DR
 263              		.loc 1 123 0
 264 000a FFF7FEFF 		bl	jtag_from_idle_to_shift_dr
 265              	.LVL30:
 127:Src/jtag/jtag_scan.c ****     if(!jtag_tdi(GPIO_PIN_SET, GPIO_PIN_RESET)){
 266              		.loc 1 127 0
 267 000e 0024     		movs	r4, #0
 268 0010 0FE0     		b	.L23
 269              	.LVL31:
 270              	.L24:
 133:Src/jtag/jtag_scan.c ****       devs_table->idcode <<= 1;
 271              		.loc 1 133 0
 272 0012 0022     		movs	r2, #0
 273 0014 4FF0FF31 		mov	r1, #-1
 274 0018 1F20     		movs	r0, #31
 275 001a FFF7FEFF 		bl	jtag_tdin
 276              	.LVL32:
 134:Src/jtag/jtag_scan.c ****       devs_table->idcode += 1;    // one that was read at begin of for-loop
 277              		.loc 1 134 0
 278 001e 4000     		lsls	r0, r0, #1
 135:Src/jtag/jtag_scan.c ****     }
 279              		.loc 1 135 0
 280 0020 0130     		adds	r0, r0, #1
 281 0022 6860     		str	r0, [r5, #4]
 282              	.L25:
 137:Src/jtag/jtag_scan.c ****     devs_table++;
 283              		.loc 1 137 0 discriminator 2
 284 0024 6A68     		ldr	r2, [r5, #4]
 285 0026 2146     		mov	r1, r4
 286 0028 0B48     		ldr	r0, .L29
 287 002a FFF7FEFF 		bl	printf
 288              	.LVL33:
 138:Src/jtag/jtag_scan.c ****   }
 289              		.loc 1 138 0 discriminator 2
 290 002e 1035     		adds	r5, r5, #16
 291              	.LVL34:
 127:Src/jtag/jtag_scan.c ****     if(!jtag_tdi(GPIO_PIN_SET, GPIO_PIN_RESET)){
 292              		.loc 1 127 0 discriminator 2
 293 0030 0134     		adds	r4, r4, #1
 294              	.LVL35:
 295              	.L23:
 127:Src/jtag/jtag_scan.c ****     if(!jtag_tdi(GPIO_PIN_SET, GPIO_PIN_RESET)){
 296              		.loc 1 127 0 is_stmt 0 discriminator 1
 297 0032 B442     		cmp	r4, r6
 298 0034 08DA     		bge	.L28
 128:Src/jtag/jtag_scan.c ****       // 0 means BYPASS DR, skip this device
 299              		.loc 1 128 0 is_stmt 1
 300 0036 0021     		movs	r1, #0
 301 0038 0120     		movs	r0, #1
 302 003a FFF7FEFF 		bl	jtag_tdi
 303              	.LVL36:
 304 003e 0028     		cmp	r0, #0
 305 0040 E7D1     		bne	.L24
 130:Src/jtag/jtag_scan.c ****     } else {
 306              		.loc 1 130 0
 307 0042 0023     		movs	r3, #0
 308 0044 6B60     		str	r3, [r5, #4]
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 10


 309 0046 EDE7     		b	.L25
 310              	.L28:
 140:Src/jtag/jtag_scan.c ****   jtag_from_exit_to_idle();
 311              		.loc 1 140 0
 312 0048 0120     		movs	r0, #1
 313 004a FFF7FEFF 		bl	jtag_tms
 314              	.LVL37:
 141:Src/jtag/jtag_scan.c **** 
 315              		.loc 1 141 0
 316 004e FFF7FEFF 		bl	jtag_from_exit_to_idle
 317              	.LVL38:
 144:Src/jtag/jtag_scan.c **** 
 318              		.loc 1 144 0
 319 0052 0020     		movs	r0, #0
 320 0054 70BD     		pop	{r4, r5, r6, pc}
 321              	.LVL39:
 322              	.L30:
 323 0056 00BF     		.align	2
 324              	.L29:
 325 0058 00000000 		.word	.LC4
 326              		.cfi_endproc
 327              	.LFE127:
 329              		.section	.text.jtag_scan,"ax",%progbits
 330              		.align	1
 331              		.global	jtag_scan
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 335              		.fpu fpv4-sp-d16
 337              	jtag_scan:
 338              	.LFB129:
 166:Src/jtag/jtag_scan.c **** 
 167:Src/jtag/jtag_scan.c **** /* Scan JTAG chain for devices, store IR length and IDCODE (if present).
 168:Src/jtag/jtag_scan.c ****  * Reset TAP state machine.
 169:Src/jtag/jtag_scan.c ****  * Select Shift-IR state.
 170:Src/jtag/jtag_scan.c ****  * Each device is assumed to shift out IR at 0x01. (this may not always be true)
 171:Src/jtag/jtag_scan.c ****  * Shift in ones until we read two consecutive ones, then we have shifted out the
 172:Src/jtag/jtag_scan.c ****  * 	IRs of all devices.
 173:Src/jtag/jtag_scan.c ****  *
 174:Src/jtag/jtag_scan.c ****  * After this process all the IRs are loaded with the BYPASS command.
 175:Src/jtag/jtag_scan.c ****  * Select Shift-DR state.
 176:Src/jtag/jtag_scan.c ****  * Shift in ones and count zeros shifted out. Should be one for each device.
 177:Src/jtag/jtag_scan.c ****  * Check this against device count obtained by IR scan above.
 178:Src/jtag/jtag_scan.c ****  *
 179:Src/jtag/jtag_scan.c ****  * Reset the TAP state machine again. This should load all IRs with IDCODE.
 180:Src/jtag/jtag_scan.c ****  * For each device, shift out one bit. If this is zero IDCODE isn't present,
 181:Src/jtag/jtag_scan.c ****  *	continue to next device. If this is one shift out the remaining 31 bits
 182:Src/jtag/jtag_scan.c ****  *	of the IDCODE register.
 183:Src/jtag/jtag_scan.c ****  */
 184:Src/jtag/jtag_scan.c **** 
 185:Src/jtag/jtag_scan.c **** void jtag_scan()
 186:Src/jtag/jtag_scan.c **** {
 339              		.loc 1 186 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 11


 344              	.LCFI3:
 345              		.cfi_def_cfa_offset 16
 346              		.cfi_offset 3, -16
 347              		.cfi_offset 4, -12
 348              		.cfi_offset 5, -8
 349              		.cfi_offset 14, -4
 187:Src/jtag/jtag_scan.c ****   // TODO: Preform JTAG reset sequence (50 clk with tms 1 ore something like that)
 188:Src/jtag/jtag_scan.c ****   //       Run throught the SWD to JTAG sequence for the case where an attached
 189:Src/jtag/jtag_scan.c ****   //       SWJ-DP is in SW-DP mode. 
 190:Src/jtag/jtag_scan.c ****   num_of_devs = get_ir_len_in_chain(devs, JTAG_MAX_DEVS);
 350              		.loc 1 190 0
 351 0002 084C     		ldr	r4, .L33
 352 0004 0521     		movs	r1, #5
 353 0006 2046     		mov	r0, r4
 354 0008 FFF7FEFF 		bl	get_ir_len_in_chain
 355              	.LVL40:
 356 000c 0146     		mov	r1, r0
 357 000e 064D     		ldr	r5, .L33+4
 358 0010 2860     		str	r0, [r5]
 191:Src/jtag/jtag_scan.c ****   get_idcodes(devs, num_of_devs);
 359              		.loc 1 191 0
 360 0012 2046     		mov	r0, r4
 361 0014 FFF7FEFF 		bl	get_idcodes
 362              	.LVL41:
 192:Src/jtag/jtag_scan.c ****   init_tagrets_in_chain(devs, num_of_devs);
 363              		.loc 1 192 0
 364 0018 2968     		ldr	r1, [r5]
 365 001a 2046     		mov	r0, r4
 366 001c FFF7FEFF 		bl	init_tagrets_in_chain
 367              	.LVL42:
 193:Src/jtag/jtag_scan.c **** }
 368              		.loc 1 193 0
 369 0020 38BD     		pop	{r3, r4, r5, pc}
 370              	.L34:
 371 0022 00BF     		.align	2
 372              	.L33:
 373 0024 00000000 		.word	.LANCHOR1
 374 0028 00000000 		.word	.LANCHOR2
 375              		.cfi_endproc
 376              	.LFE129:
 378              		.section	.text.jtag_test,"ax",%progbits
 379              		.align	1
 380              		.global	jtag_test
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
 384              		.fpu fpv4-sp-d16
 386              	jtag_test:
 387              	.LFB130:
 194:Src/jtag/jtag_scan.c **** 
 195:Src/jtag/jtag_scan.c **** 
 196:Src/jtag/jtag_scan.c **** /*
 197:Src/jtag/jtag_scan.c ****  * Debug JTAG connection.
 198:Src/jtag/jtag_scan.c ****  * This function forever in loop shifts out 32 bits throught register and print
 199:Src/jtag/jtag_scan.c ****  * it out. TDI is set on 1. After 32 bits it is changed to 0, and so on.
 200:Src/jtag/jtag_scan.c ****  */
 201:Src/jtag/jtag_scan.c **** void jtag_test()
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 12


 202:Src/jtag/jtag_scan.c **** {
 388              		.loc 1 202 0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392 0000 70B5     		push	{r4, r5, r6, lr}
 393              	.LCFI4:
 394              		.cfi_def_cfa_offset 16
 395              		.cfi_offset 4, -16
 396              		.cfi_offset 5, -12
 397              		.cfi_offset 6, -8
 398              		.cfi_offset 14, -4
 399              	.LVL43:
 203:Src/jtag/jtag_scan.c ****   uint32_t tdo;
 204:Src/jtag/jtag_scan.c ****   GPIO_PinState tdi = GPIO_PIN_RESET;
 205:Src/jtag/jtag_scan.c **** 
 206:Src/jtag/jtag_scan.c ****   jtag_go_to_idle();
 400              		.loc 1 206 0
 401 0002 FFF7FEFF 		bl	jtag_go_to_idle
 402              	.LVL44:
 207:Src/jtag/jtag_scan.c ****   jtag_from_idle_to_shift_dr();
 403              		.loc 1 207 0
 404 0006 FFF7FEFF 		bl	jtag_from_idle_to_shift_dr
 405              	.LVL45:
 204:Src/jtag/jtag_scan.c **** 
 406              		.loc 1 204 0
 407 000a 0026     		movs	r6, #0
 408 000c 12E0     		b	.L39
 409              	.LVL46:
 410              	.L40:
 411              	.LBB2:
 412              	.LBB3:
 208:Src/jtag/jtag_scan.c ****   while(1){
 209:Src/jtag/jtag_scan.c ****     tdo = 0;
 210:Src/jtag/jtag_scan.c ****     tdi = tdi == GPIO_PIN_SET ? GPIO_PIN_RESET : GPIO_PIN_SET;
 211:Src/jtag/jtag_scan.c ****     uint32_t add = 1 << 31;
 212:Src/jtag/jtag_scan.c ****     for (int i = 0; i < 32; i++) {
 213:Src/jtag/jtag_scan.c ****       tdo >>= 1;
 214:Src/jtag/jtag_scan.c ****       tdo += jtag_tdi(tdi, GPIO_PIN_RESET) ? add : 0;
 413              		.loc 1 214 0
 414 000e 0021     		movs	r1, #0
 415              	.L37:
 416              		.loc 1 214 0 is_stmt 0 discriminator 4
 417 0010 0C44     		add	r4, r4, r1
 418              	.LVL47:
 212:Src/jtag/jtag_scan.c ****       tdo >>= 1;
 419              		.loc 1 212 0 is_stmt 1 discriminator 4
 420 0012 0135     		adds	r5, r5, #1
 421              	.LVL48:
 422              	.L36:
 212:Src/jtag/jtag_scan.c ****       tdo >>= 1;
 423              		.loc 1 212 0 is_stmt 0 discriminator 2
 424 0014 1F2D     		cmp	r5, #31
 425 0016 09DC     		bgt	.L42
 213:Src/jtag/jtag_scan.c ****       tdo += jtag_tdi(tdi, GPIO_PIN_RESET) ? add : 0;
 426              		.loc 1 213 0 is_stmt 1
 427 0018 6408     		lsrs	r4, r4, #1
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 13


 428              	.LVL49:
 429              		.loc 1 214 0
 430 001a 0021     		movs	r1, #0
 431 001c 3046     		mov	r0, r6
 432 001e FFF7FEFF 		bl	jtag_tdi
 433              	.LVL50:
 434 0022 0028     		cmp	r0, #0
 435 0024 F3D0     		beq	.L40
 436 0026 4FF00041 		mov	r1, #-2147483648
 437 002a F1E7     		b	.L37
 438              	.L42:
 439              	.LBE3:
 215:Src/jtag/jtag_scan.c ****     }
 216:Src/jtag/jtag_scan.c ****     printf("0x%lx\n", tdo);
 440              		.loc 1 216 0
 441 002c 2146     		mov	r1, r4
 442 002e 0448     		ldr	r0, .L43
 443 0030 FFF7FEFF 		bl	printf
 444              	.LVL51:
 445              	.L39:
 210:Src/jtag/jtag_scan.c ****     uint32_t add = 1 << 31;
 446              		.loc 1 210 0
 447 0034 86F00106 		eor	r6, r6, #1
 448              	.LVL52:
 449              	.LBB4:
 212:Src/jtag/jtag_scan.c ****       tdo >>= 1;
 450              		.loc 1 212 0
 451 0038 0025     		movs	r5, #0
 452              	.LBE4:
 209:Src/jtag/jtag_scan.c ****     tdi = tdi == GPIO_PIN_SET ? GPIO_PIN_RESET : GPIO_PIN_SET;
 453              		.loc 1 209 0
 454 003a 2C46     		mov	r4, r5
 455              	.LBB5:
 212:Src/jtag/jtag_scan.c ****       tdo >>= 1;
 456              		.loc 1 212 0
 457 003c EAE7     		b	.L36
 458              	.L44:
 459 003e 00BF     		.align	2
 460              	.L43:
 461 0040 00000000 		.word	.LC5
 462              	.LBE5:
 463              	.LBE2:
 464              		.cfi_endproc
 465              	.LFE130:
 467              		.section	.text.jtag_select_dev,"ax",%progbits
 468              		.align	1
 469              		.global	jtag_select_dev
 470              		.syntax unified
 471              		.thumb
 472              		.thumb_func
 473              		.fpu fpv4-sp-d16
 475              	jtag_select_dev:
 476              	.LFB131:
 217:Src/jtag/jtag_scan.c ****   }
 218:Src/jtag/jtag_scan.c ****   jtag_tdi(tdo, GPIO_PIN_RESET);
 219:Src/jtag/jtag_scan.c **** }
 220:Src/jtag/jtag_scan.c **** 
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 14


 221:Src/jtag/jtag_scan.c **** void jtag_select_dev(int dev)
 222:Src/jtag/jtag_scan.c **** {
 477              		.loc 1 222 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              		@ link register save eliminated.
 482              	.LVL53:
 223:Src/jtag/jtag_scan.c ****   current_dev = dev;
 483              		.loc 1 223 0
 484 0000 014B     		ldr	r3, .L46
 485 0002 1860     		str	r0, [r3]
 224:Src/jtag/jtag_scan.c **** }
 486              		.loc 1 224 0
 487 0004 7047     		bx	lr
 488              	.L47:
 489 0006 00BF     		.align	2
 490              	.L46:
 491 0008 00000000 		.word	.LANCHOR3
 492              		.cfi_endproc
 493              	.LFE131:
 495              		.section	.text.jtag_dev_write_ir,"ax",%progbits
 496              		.align	1
 497              		.global	jtag_dev_write_ir
 498              		.syntax unified
 499              		.thumb
 500              		.thumb_func
 501              		.fpu fpv4-sp-d16
 503              	jtag_dev_write_ir:
 504              	.LFB132:
 225:Src/jtag/jtag_scan.c **** 
 226:Src/jtag/jtag_scan.c **** void jtag_dev_write_ir(uint32_t ir)
 227:Src/jtag/jtag_scan.c **** {
 505              		.loc 1 227 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              	.LVL54:
 510 0000 38B5     		push	{r3, r4, r5, lr}
 511              	.LCFI5:
 512              		.cfi_def_cfa_offset 16
 513              		.cfi_offset 3, -16
 514              		.cfi_offset 4, -12
 515              		.cfi_offset 5, -8
 516              		.cfi_offset 14, -4
 517 0002 0546     		mov	r5, r0
 228:Src/jtag/jtag_scan.c ****   int i;
 229:Src/jtag/jtag_scan.c **** 
 230:Src/jtag/jtag_scan.c ****   jtag_from_idle_to_shift_ir();
 518              		.loc 1 230 0
 519 0004 FFF7FEFF 		bl	jtag_from_idle_to_shift_ir
 520              	.LVL55:
 231:Src/jtag/jtag_scan.c ****   for(i = 0; i < current_dev; i++) {
 521              		.loc 1 231 0
 522 0008 0024     		movs	r4, #0
 523 000a 08E0     		b	.L49
 524              	.LVL56:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 15


 525              	.L50:
 232:Src/jtag/jtag_scan.c ****     jtag_tdin(devs[i].ir_len, BYPASS_IR, GPIO_PIN_RESET);
 526              		.loc 1 232 0 discriminator 3
 527 000c 2301     		lsls	r3, r4, #4
 528 000e 0022     		movs	r2, #0
 529 0010 4FF0FF31 		mov	r1, #-1
 530 0014 1648     		ldr	r0, .L54
 531 0016 C05C     		ldrb	r0, [r0, r3]	@ zero_extendqisi2
 532 0018 FFF7FEFF 		bl	jtag_tdin
 533              	.LVL57:
 231:Src/jtag/jtag_scan.c ****   for(i = 0; i < current_dev; i++) {
 534              		.loc 1 231 0 discriminator 3
 535 001c 0134     		adds	r4, r4, #1
 536              	.LVL58:
 537              	.L49:
 231:Src/jtag/jtag_scan.c ****   for(i = 0; i < current_dev; i++) {
 538              		.loc 1 231 0 is_stmt 0 discriminator 1
 539 001e 154B     		ldr	r3, .L54+4
 540 0020 1B68     		ldr	r3, [r3]
 541 0022 A342     		cmp	r3, r4
 542 0024 F2DC     		bgt	.L50
 233:Src/jtag/jtag_scan.c ****   }
 234:Src/jtag/jtag_scan.c ****   jtag_tdin(devs[current_dev].ir_len, ir, ((current_dev == num_of_devs - 1) ? GPIO_PIN_SET : GPIO_P
 543              		.loc 1 234 0 is_stmt 1
 544 0026 144A     		ldr	r2, .L54+8
 545 0028 1268     		ldr	r2, [r2]
 546 002a 013A     		subs	r2, r2, #1
 547 002c 1801     		lsls	r0, r3, #4
 548 002e 9342     		cmp	r3, r2
 549 0030 14BF     		ite	ne
 550 0032 0022     		movne	r2, #0
 551 0034 0122     		moveq	r2, #1
 552 0036 2946     		mov	r1, r5
 553 0038 0D4B     		ldr	r3, .L54
 554 003a 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 555 003c FFF7FEFF 		bl	jtag_tdin
 556              	.LVL59:
 235:Src/jtag/jtag_scan.c ****   for(i = current_dev + 1; i < num_of_devs; i++) {
 557              		.loc 1 235 0
 558 0040 0C4B     		ldr	r3, .L54+4
 559 0042 1C68     		ldr	r4, [r3]
 560              	.LVL60:
 561 0044 0134     		adds	r4, r4, #1
 562              	.LVL61:
 563 0046 0CE0     		b	.L51
 564              	.L52:
 236:Src/jtag/jtag_scan.c ****     jtag_tdin(devs[i].ir_len, BYPASS_IR, ((i == num_of_devs - 1) ? GPIO_PIN_SET : GPIO_PIN_RESET));
 565              		.loc 1 236 0 discriminator 3
 566 0048 013A     		subs	r2, r2, #1
 567 004a 2301     		lsls	r3, r4, #4
 568 004c A242     		cmp	r2, r4
 569 004e 14BF     		ite	ne
 570 0050 0022     		movne	r2, #0
 571 0052 0122     		moveq	r2, #1
 572 0054 4FF0FF31 		mov	r1, #-1
 573 0058 0548     		ldr	r0, .L54
 574 005a C05C     		ldrb	r0, [r0, r3]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 16


 575 005c FFF7FEFF 		bl	jtag_tdin
 576              	.LVL62:
 235:Src/jtag/jtag_scan.c ****   for(i = current_dev + 1; i < num_of_devs; i++) {
 577              		.loc 1 235 0 discriminator 3
 578 0060 0134     		adds	r4, r4, #1
 579              	.LVL63:
 580              	.L51:
 235:Src/jtag/jtag_scan.c ****   for(i = current_dev + 1; i < num_of_devs; i++) {
 581              		.loc 1 235 0 is_stmt 0 discriminator 1
 582 0062 054B     		ldr	r3, .L54+8
 583 0064 1A68     		ldr	r2, [r3]
 584 0066 A242     		cmp	r2, r4
 585 0068 EEDC     		bgt	.L52
 237:Src/jtag/jtag_scan.c ****   }
 238:Src/jtag/jtag_scan.c ****   jtag_from_exit_to_idle();
 586              		.loc 1 238 0 is_stmt 1
 587 006a FFF7FEFF 		bl	jtag_from_exit_to_idle
 588              	.LVL64:
 239:Src/jtag/jtag_scan.c **** }
 589              		.loc 1 239 0
 590 006e 38BD     		pop	{r3, r4, r5, pc}
 591              	.LVL65:
 592              	.L55:
 593              		.align	2
 594              	.L54:
 595 0070 00000000 		.word	.LANCHOR1
 596 0074 00000000 		.word	.LANCHOR3
 597 0078 00000000 		.word	.LANCHOR2
 598              		.cfi_endproc
 599              	.LFE132:
 601              		.section	.text.jtag_dev_shift_dr,"ax",%progbits
 602              		.align	1
 603              		.global	jtag_dev_shift_dr
 604              		.syntax unified
 605              		.thumb
 606              		.thumb_func
 607              		.fpu fpv4-sp-d16
 609              	jtag_dev_shift_dr:
 610              	.LFB133:
 240:Src/jtag/jtag_scan.c **** 
 241:Src/jtag/jtag_scan.c **** void jtag_dev_shift_dr(uint_jtag_transfer_t *din, uint_jtag_transfer_t *dout, int n)
 242:Src/jtag/jtag_scan.c **** {
 611              		.loc 1 242 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              	.LVL66:
 616 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 617              	.LCFI6:
 618              		.cfi_def_cfa_offset 24
 619              		.cfi_offset 3, -24
 620              		.cfi_offset 4, -20
 621              		.cfi_offset 5, -16
 622              		.cfi_offset 6, -12
 623              		.cfi_offset 7, -8
 624              		.cfi_offset 14, -4
 625 0002 0646     		mov	r6, r0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 17


 626 0004 0F46     		mov	r7, r1
 627 0006 1446     		mov	r4, r2
 243:Src/jtag/jtag_scan.c ****   int i, read_size;
 244:Src/jtag/jtag_scan.c **** 
 245:Src/jtag/jtag_scan.c ****   jtag_from_idle_to_shift_dr();
 628              		.loc 1 245 0
 629 0008 FFF7FEFF 		bl	jtag_from_idle_to_shift_dr
 630              	.LVL67:
 246:Src/jtag/jtag_scan.c ****   for(i = 0; i < current_dev; i++) {
 631              		.loc 1 246 0
 632 000c 0025     		movs	r5, #0
 633 000e 04E0     		b	.L57
 634              	.LVL68:
 635              	.L58:
 247:Src/jtag/jtag_scan.c ****     jtag_tdi(GPIO_PIN_SET, GPIO_PIN_RESET);
 636              		.loc 1 247 0 discriminator 3
 637 0010 0021     		movs	r1, #0
 638 0012 0120     		movs	r0, #1
 639 0014 FFF7FEFF 		bl	jtag_tdi
 640              	.LVL69:
 246:Src/jtag/jtag_scan.c ****   for(i = 0; i < current_dev; i++) {
 641              		.loc 1 246 0 discriminator 3
 642 0018 0135     		adds	r5, r5, #1
 643              	.LVL70:
 644              	.L57:
 246:Src/jtag/jtag_scan.c ****   for(i = 0; i < current_dev; i++) {
 645              		.loc 1 246 0 is_stmt 0 discriminator 1
 646 001a 1A4B     		ldr	r3, .L71
 647 001c 1B68     		ldr	r3, [r3]
 648 001e AB42     		cmp	r3, r5
 649 0020 F6DC     		bgt	.L58
 650 0022 10E0     		b	.L59
 651              	.L65:
 248:Src/jtag/jtag_scan.c ****   }
 249:Src/jtag/jtag_scan.c **** 
 250:Src/jtag/jtag_scan.c ****   // TODO: check if we do correct operation for tables.
 251:Src/jtag/jtag_scan.c ****   //       This code works when uint64_t is passed like that: ((uint_jtag_transfer_t*)&uint64_t_var
 252:Src/jtag/jtag_scan.c ****   while(n){
 253:Src/jtag/jtag_scan.c ****     if(n > SIZEOF_IN_BITS(uint_jtag_transfer_t)) {
 254:Src/jtag/jtag_scan.c ****       read_size = SIZEOF_IN_BITS(uint_jtag_transfer_t);
 255:Src/jtag/jtag_scan.c ****     } else {
 256:Src/jtag/jtag_scan.c ****       read_size = n;
 652              		.loc 1 256 0 is_stmt 1
 653 0024 2046     		mov	r0, r4
 654              	.L60:
 655              	.LVL71:
 257:Src/jtag/jtag_scan.c ****     }
 258:Src/jtag/jtag_scan.c ****     n -= read_size;
 656              		.loc 1 258 0
 657 0026 241A     		subs	r4, r4, r0
 658              	.LVL72:
 259:Src/jtag/jtag_scan.c ****     *dout = jtag_tdin(read_size, *din, (((current_dev == num_of_devs - 1) && !n) ? GPIO_PIN_SET : G
 659              		.loc 1 259 0
 660 0028 C0B2     		uxtb	r0, r0
 661              	.LVL73:
 662 002a 3168     		ldr	r1, [r6]
 663 002c 164B     		ldr	r3, .L71+4
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 18


 664 002e 1B68     		ldr	r3, [r3]
 665 0030 013B     		subs	r3, r3, #1
 666 0032 144A     		ldr	r2, .L71
 667 0034 1268     		ldr	r2, [r2]
 668 0036 9342     		cmp	r3, r2
 669 0038 0AD0     		beq	.L69
 670 003a 0022     		movs	r2, #0
 671              	.L61:
 672              		.loc 1 259 0 is_stmt 0 discriminator 6
 673 003c FFF7FEFF 		bl	jtag_tdin
 674              	.LVL74:
 675 0040 47F8040B 		str	r0, [r7], #4
 676              	.LVL75:
 260:Src/jtag/jtag_scan.c ****     dout++;
 261:Src/jtag/jtag_scan.c ****     din++;
 677              		.loc 1 261 0 is_stmt 1 discriminator 6
 678 0044 0436     		adds	r6, r6, #4
 679              	.LVL76:
 680              	.L59:
 252:Src/jtag/jtag_scan.c ****     if(n > SIZEOF_IN_BITS(uint_jtag_transfer_t)) {
 681              		.loc 1 252 0
 682 0046 44B1     		cbz	r4, .L70
 253:Src/jtag/jtag_scan.c ****       read_size = SIZEOF_IN_BITS(uint_jtag_transfer_t);
 683              		.loc 1 253 0
 684 0048 202C     		cmp	r4, #32
 685 004a EBD9     		bls	.L65
 254:Src/jtag/jtag_scan.c ****     } else {
 686              		.loc 1 254 0
 687 004c 2020     		movs	r0, #32
 688 004e EAE7     		b	.L60
 689              	.L69:
 259:Src/jtag/jtag_scan.c ****     dout++;
 690              		.loc 1 259 0 discriminator 1
 691 0050 0CB1     		cbz	r4, .L67
 259:Src/jtag/jtag_scan.c ****     dout++;
 692              		.loc 1 259 0 is_stmt 0
 693 0052 0022     		movs	r2, #0
 694 0054 F2E7     		b	.L61
 695              	.L67:
 696 0056 0122     		movs	r2, #1
 697 0058 F0E7     		b	.L61
 698              	.L70:
 262:Src/jtag/jtag_scan.c ****   }
 263:Src/jtag/jtag_scan.c **** 
 264:Src/jtag/jtag_scan.c ****   for(i = current_dev + 1; i < num_of_devs; i++) {
 699              		.loc 1 264 0 is_stmt 1
 700 005a 0A4B     		ldr	r3, .L71
 701 005c 1C68     		ldr	r4, [r3]
 702              	.LVL77:
 703 005e 0134     		adds	r4, r4, #1
 704              	.LVL78:
 705 0060 08E0     		b	.L63
 706              	.L64:
 265:Src/jtag/jtag_scan.c ****     jtag_tdi(GPIO_PIN_SET, ((i == num_of_devs - 1) ? GPIO_PIN_SET : GPIO_PIN_RESET));
 707              		.loc 1 265 0 discriminator 3
 708 0062 0139     		subs	r1, r1, #1
 709 0064 A142     		cmp	r1, r4
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 19


 710 0066 14BF     		ite	ne
 711 0068 0021     		movne	r1, #0
 712 006a 0121     		moveq	r1, #1
 713 006c 0120     		movs	r0, #1
 714 006e FFF7FEFF 		bl	jtag_tdi
 715              	.LVL79:
 264:Src/jtag/jtag_scan.c ****     jtag_tdi(GPIO_PIN_SET, ((i == num_of_devs - 1) ? GPIO_PIN_SET : GPIO_PIN_RESET));
 716              		.loc 1 264 0 discriminator 3
 717 0072 0134     		adds	r4, r4, #1
 718              	.LVL80:
 719              	.L63:
 264:Src/jtag/jtag_scan.c ****     jtag_tdi(GPIO_PIN_SET, ((i == num_of_devs - 1) ? GPIO_PIN_SET : GPIO_PIN_RESET));
 720              		.loc 1 264 0 is_stmt 0 discriminator 1
 721 0074 044B     		ldr	r3, .L71+4
 722 0076 1968     		ldr	r1, [r3]
 723 0078 A142     		cmp	r1, r4
 724 007a F2DC     		bgt	.L64
 266:Src/jtag/jtag_scan.c ****   }
 267:Src/jtag/jtag_scan.c ****   jtag_from_exit_to_idle();
 725              		.loc 1 267 0 is_stmt 1
 726 007c FFF7FEFF 		bl	jtag_from_exit_to_idle
 727              	.LVL81:
 268:Src/jtag/jtag_scan.c **** }
 728              		.loc 1 268 0
 729 0080 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 730              	.LVL82:
 731              	.L72:
 732 0082 00BF     		.align	2
 733              	.L71:
 734 0084 00000000 		.word	.LANCHOR3
 735 0088 00000000 		.word	.LANCHOR2
 736              		.cfi_endproc
 737              	.LFE133:
 739              		.section	.bss.current_dev,"aw",%nobits
 740              		.align	2
 741              		.set	.LANCHOR3,. + 0
 744              	current_dev:
 745 0000 00000000 		.space	4
 746              		.section	.bss.devs,"aw",%nobits
 747              		.align	2
 748              		.set	.LANCHOR1,. + 0
 751              	devs:
 752 0000 00000000 		.space	80
 752      00000000 
 752      00000000 
 752      00000000 
 752      00000000 
 753              		.section	.bss.num_of_devs,"aw",%nobits
 754              		.align	2
 755              		.set	.LANCHOR2,. + 0
 758              	num_of_devs:
 759 0000 00000000 		.space	4
 760              		.section	.rodata.dev_descr,"a",%progbits
 761              		.align	2
 762              		.set	.LANCHOR0,. + 0
 765              	dev_descr:
 766 0000 7704A00B 		.word	195036279
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 20


 767 0004 FF0FFF0F 		.word	268374015
 768 0008 00000000 		.word	.LC6
 769 000c 00000000 		.word	adiv5_jtag_handler
 770 0010 0F0F0F3F 		.word	1057951503
 771 0014 FFFFFFFF 		.word	-1
 772 0018 24000000 		.word	.LC7
 773 001c 00000000 		.space	4
 774 0020 41004106 		.word	104923201
 775 0024 FFFFFF0F 		.word	268435455
 776 0028 40000000 		.word	.LC8
 777 002c 00000000 		.space	4
 778 0030 41204106 		.word	104931393
 779 0034 FFFFFF0F 		.word	268435455
 780 0038 6C000000 		.word	.LC9
 781 003c 00000000 		.space	4
 782 0040 41404106 		.word	104939585
 783 0044 FFFFFF0F 		.word	268435455
 784 0048 98000000 		.word	.LC10
 785 004c 00000000 		.space	4
 786 0050 41604106 		.word	104947777
 787 0054 FFFFFF0F 		.word	268435455
 788 0058 C4000000 		.word	.LC11
 789 005c 00000000 		.space	4
 790 0060 41804106 		.word	104955969
 791 0064 FFFFFF0F 		.word	268435455
 792 0068 E4000000 		.word	.LC12
 793 006c 00000000 		.space	4
 794 0070 41004206 		.word	104988737
 795 0074 FFFFFF0F 		.word	268435455
 796 0078 14010000 		.word	.LC13
 797 007c 00000000 		.space	4
 798 0080 41804206 		.word	105021505
 799 0084 FFFFFF0F 		.word	268435455
 800 0088 3C010000 		.word	.LC14
 801 008c 00000000 		.space	4
 802 0090 41104106 		.word	104927297
 803 0094 FFFFFFFF 		.word	-1
 804 0098 74010000 		.word	.LC15
 805 009c 00000000 		.space	4
 806 00a0 41304106 		.word	104935489
 807 00a4 FFFFFFFF 		.word	-1
 808 00a8 94010000 		.word	.LC16
 809 00ac 00000000 		.space	4
 810 00b0 7714B10B 		.word	196154487
 811 00b4 FFFFFFFF 		.word	-1
 812 00b8 B4010000 		.word	.LC17
 813 00bc 00000000 		.space	4
 814 00c0 3F304089 		.word	-1992282049
 815 00c4 FFFFFFFF 		.word	-1
 816 00c8 C4010000 		.word	.LC18
 817 00cc 00000000 		.space	4
 818 00d0 3F609207 		.word	127033407
 819 00d4 FFFFFFFF 		.word	-1
 820 00d8 D8010000 		.word	.LC19
 821 00dc 00000000 		.space	4
 822 00e0 13002720 		.word	539426835
 823 00e4 FFFFFFFF 		.word	-1
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 21


 824 00e8 EC010000 		.word	.LC20
 825 00ec 00000000 		.space	4
 826 00f0 00000000 		.word	0
 827 00f4 00000000 		.word	0
 828 00f8 00020000 		.word	.LC21
 829 00fc 00000000 		.space	4
 830              		.section	.rodata.get_idcodes.str1.4,"aMS",%progbits,1
 831              		.align	2
 832              	.LC4:
 833 0000 64657620 		.ascii	"dev %d: IDCODE: 0x%lx\012\000"
 833      25643A20 
 833      4944434F 
 833      44453A20 
 833      3078256C 
 834              		.section	.rodata.get_ir_len_in_chain.str1.4,"aMS",%progbits,1
 835              		.align	2
 836              	.LC2:
 837 0000 4552524F 		.ascii	"ERROR: More devices in JTAG chain than supported\000"
 837      523A204D 
 837      6F726520 
 837      64657669 
 837      63657320 
 838 0031 000000   		.space	3
 839              	.LC3:
 840 0034 64657620 		.ascii	"dev %d: ir_len: %d\012\000"
 840      25643A20 
 840      69725F6C 
 840      656E3A20 
 840      25640A00 
 841              		.section	.rodata.init_tagrets_in_chain.str1.4,"aMS",%progbits,1
 842              		.align	2
 843              	.LC0:
 844 0000 53746172 		.ascii	"Start dev %d handler\012\000"
 844      74206465 
 844      76202564 
 844      2068616E 
 844      646C6572 
 845 0016 0000     		.space	2
 846              	.LC1:
 847 0018 64657620 		.ascii	"dev %d has no handler\012\000"
 847      25642068 
 847      6173206E 
 847      6F206861 
 847      6E646C65 
 848              		.section	.rodata.jtag_test.str1.4,"aMS",%progbits,1
 849              		.align	2
 850              	.LC5:
 851 0000 3078256C 		.ascii	"0x%lx\012\000"
 851      780A00
 852              		.section	.rodata.str1.4,"aMS",%progbits,1
 853              		.align	2
 854              	.LC6:
 855 0000 41524D20 		.ascii	"ARM Limited: ADIv5 JTAG-DP port.\000"
 855      4C696D69 
 855      7465643A 
 855      20414449 
 855      7635204A 
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 22


 856 0021 000000   		.space	3
 857              	.LC7:
 858 0024 5354204D 		.ascii	"ST Microelectronics: STR730\000"
 858      6963726F 
 858      656C6563 
 858      74726F6E 
 858      6963733A 
 859              	.LC8:
 860 0040 5354204D 		.ascii	"ST Microelectronics: STM32, Medium density.\000"
 860      6963726F 
 860      656C6563 
 860      74726F6E 
 860      6963733A 
 861              	.LC9:
 862 006c 5354204D 		.ascii	"ST Microelectronics: STM32, Low density.\000"
 862      6963726F 
 862      656C6563 
 862      74726F6E 
 862      6963733A 
 863 0095 000000   		.space	3
 864              	.LC10:
 865 0098 5354204D 		.ascii	"ST Microelectronics: STM32, High density.\000"
 865      6963726F 
 865      656C6563 
 865      74726F6E 
 865      6963733A 
 866 00c2 0000     		.space	2
 867              	.LC11:
 868 00c4 5354204D 		.ascii	"ST Microelectronics: STM32L.\000"
 868      6963726F 
 868      656C6563 
 868      74726F6E 
 868      6963733A 
 869 00e1 000000   		.space	3
 870              	.LC12:
 871 00e4 5354204D 		.ascii	"ST Microelectronics: STM32, Connectivity Line.\000"
 871      6963726F 
 871      656C6563 
 871      74726F6E 
 871      6963733A 
 872 0113 00       		.space	1
 873              	.LC13:
 874 0114 5354204D 		.ascii	"ST Microelectronics: STM32, Value Line.\000"
 874      6963726F 
 874      656C6563 
 874      74726F6E 
 874      6963733A 
 875              	.LC14:
 876 013c 5354204D 		.ascii	"ST Microelectronics: STM32, Value Line, High densit"
 876      6963726F 
 876      656C6563 
 876      74726F6E 
 876      6963733A 
 877 016f 792E00   		.ascii	"y.\000"
 878 0172 0000     		.space	2
 879              	.LC15:
 880 0174 5354204D 		.ascii	"ST Microelectronics: STM32F2xx.\000"
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 23


 880      6963726F 
 880      656C6563 
 880      74726F6E 
 880      6963733A 
 881              	.LC16:
 882 0194 5354204D 		.ascii	"ST Microelectronics: STM32F4xx.\000"
 882      6963726F 
 882      656C6563 
 882      74726F6E 
 882      6963733A 
 883              	.LC17:
 884 01b4 4E50583A 		.ascii	"NPX: LPC11C24.\000"
 884      204C5043 
 884      31314332 
 884      342E00
 885 01c3 00       		.space	1
 886              	.LC18:
 887 01c4 41544D45 		.ascii	"ATMEL: ATMega16.\000"
 887      4C3A2041 
 887      544D6567 
 887      6131362E 
 887      00
 888 01d5 000000   		.space	3
 889              	.LC19:
 890 01d8 41544D45 		.ascii	"ATMEL: AT91SAM9261.\000"
 890      4C3A2041 
 890      54393153 
 890      414D3932 
 890      36312E00 
 891              	.LC20:
 892 01ec 496E7465 		.ascii	"Intel: i80386ex.\000"
 892      6C3A2069 
 892      38303338 
 892      3665782E 
 892      00
 893 01fd 000000   		.space	3
 894              	.LC21:
 895 0200 556E6B6E 		.ascii	"Unknown\000"
 895      6F776E00 
 896              		.text
 897              	.Letext0:
 898              		.file 2 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_defau
 899              		.file 3 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 900              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 901              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 902              		.file 6 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 903              		.file 7 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 904              		.file 8 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/
 905              		.file 9 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 906              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 907              		.file 11 "Inc/jtag/jtag_low_level.h"
 908              		.file 12 "Inc/jtag/jtag_scan.h"
 909              		.file 13 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/stdio.h"
 910              		.file 14 "<built-in>"
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 jtag_scan.c
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:18     .text.init_tagrets_in_chain:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:24     .text.init_tagrets_in_chain:0000000000000000 init_tagrets_in_chain
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:116    .text.init_tagrets_in_chain:0000000000000064 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:123    .text.get_ir_len_in_chain:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:129    .text.get_ir_len_in_chain:0000000000000000 get_ir_len_in_chain
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:232    .text.get_ir_len_in_chain:0000000000000070 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:238    .text.get_idcodes:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:244    .text.get_idcodes:0000000000000000 get_idcodes
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:325    .text.get_idcodes:0000000000000058 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:330    .text.jtag_scan:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:337    .text.jtag_scan:0000000000000000 jtag_scan
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:373    .text.jtag_scan:0000000000000024 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:379    .text.jtag_test:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:386    .text.jtag_test:0000000000000000 jtag_test
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:461    .text.jtag_test:0000000000000040 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:468    .text.jtag_select_dev:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:475    .text.jtag_select_dev:0000000000000000 jtag_select_dev
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:491    .text.jtag_select_dev:0000000000000008 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:496    .text.jtag_dev_write_ir:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:503    .text.jtag_dev_write_ir:0000000000000000 jtag_dev_write_ir
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:595    .text.jtag_dev_write_ir:0000000000000070 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:602    .text.jtag_dev_shift_dr:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:609    .text.jtag_dev_shift_dr:0000000000000000 jtag_dev_shift_dr
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:734    .text.jtag_dev_shift_dr:0000000000000084 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:740    .bss.current_dev:0000000000000000 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:744    .bss.current_dev:0000000000000000 current_dev
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:747    .bss.devs:0000000000000000 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:751    .bss.devs:0000000000000000 devs
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:754    .bss.num_of_devs:0000000000000000 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:758    .bss.num_of_devs:0000000000000000 num_of_devs
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:761    .rodata.dev_descr:0000000000000000 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:765    .rodata.dev_descr:0000000000000000 dev_descr
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:831    .rodata.get_idcodes.str1.4:0000000000000000 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:835    .rodata.get_ir_len_in_chain.str1.4:0000000000000000 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:842    .rodata.init_tagrets_in_chain.str1.4:0000000000000000 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:849    .rodata.jtag_test.str1.4:0000000000000000 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccDuwKmB.s:853    .rodata.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
printf
jtag_go_to_idle
jtag_from_idle_to_shift_ir
jtag_tdi
puts
jtag_tms
jtag_from_exit_to_idle
jtag_from_idle_to_shift_dr
jtag_tdin
adiv5_jtag_handler

ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB153:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * @file           : main.c
   4:Src/main.c    ****   * @brief          : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   * This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  13:Src/main.c    ****   * All rights reserved.
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  20:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/main.c    ****   *    and/or other materials provided with the distribution.
  23:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/main.c    ****   *    derived from this software without specific written permission.
  26:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  31:Src/main.c    ****   *    this license. 
  32:Src/main.c    ****   *
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 2


  33:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/main.c    ****   *
  46:Src/main.c    ****   ******************************************************************************
  47:Src/main.c    ****   */
  48:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  49:Src/main.c    **** #include "main.h"
  50:Src/main.c    **** #include "stm32f4xx_hal.h"
  51:Src/main.c    **** #include "cmsis_os.h"
  52:Src/main.c    **** #include "fatfs.h"
  53:Src/main.c    **** #include "lwip.h"
  54:Src/main.c    **** #include "usb_host.h"
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE BEGIN Includes */
  57:Src/main.c    **** #include "debug_leds.h"
  58:Src/main.c    **** #include "wakaama.h"
  59:Src/main.c    **** #include "jtag/jtag_scan.h"
  60:Src/main.c    **** #include "binary_download.h"
  61:Src/main.c    **** #include "target.h"
  62:Src/main.c    **** #include "config_parser.h"
  63:Src/main.c    **** /* USER CODE END Includes */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  66:Src/main.c    **** UART_HandleTypeDef huart3;
  67:Src/main.c    **** 
  68:Src/main.c    **** osThreadId defaultTaskHandle;
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE BEGIN PV */
  71:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE END PV */
  74:Src/main.c    **** 
  75:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  76:Src/main.c    **** void SystemClock_Config(void);
  77:Src/main.c    **** static void MX_GPIO_Init(void);
  78:Src/main.c    **** static void MX_USART3_UART_Init(void);
  79:Src/main.c    **** void StartDefaultTask(void const * argument);
  80:Src/main.c    **** 
  81:Src/main.c    **** /* USER CODE BEGIN PFP */
  82:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  83:Src/main.c    **** 
  84:Src/main.c    **** /* USER CODE END PFP */
  85:Src/main.c    **** 
  86:Src/main.c    **** /* USER CODE BEGIN 0 */
  87:Src/main.c    **** 
  88:Src/main.c    **** /* USER CODE END 0 */
  89:Src/main.c    **** 
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 3


  90:Src/main.c    **** /**
  91:Src/main.c    ****   * @brief  The application entry point.
  92:Src/main.c    ****   *
  93:Src/main.c    ****   * @retval None
  94:Src/main.c    ****   */
  95:Src/main.c    **** int main(void)
  96:Src/main.c    **** {
  97:Src/main.c    ****   /* USER CODE BEGIN 1 */
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* USER CODE END 1 */
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 104:Src/main.c    ****   HAL_Init();
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* USER CODE BEGIN Init */
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* USER CODE END Init */
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* Configure the system clock */
 111:Src/main.c    ****   SystemClock_Config();
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* USER CODE END SysInit */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* Initialize all configured peripherals */
 118:Src/main.c    ****   MX_GPIO_Init();
 119:Src/main.c    ****   MX_USART3_UART_Init();
 120:Src/main.c    ****   /* USER CODE BEGIN 2 */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* USER CODE END 2 */
 123:Src/main.c    **** 
 124:Src/main.c    ****   /* USER CODE BEGIN RTOS_MUTEX */
 125:Src/main.c    ****   /* add mutexes, ... */
 126:Src/main.c    ****   /* USER CODE END RTOS_MUTEX */
 127:Src/main.c    **** 
 128:Src/main.c    ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 129:Src/main.c    ****   /* add semaphores, ... */
 130:Src/main.c    ****   /* USER CODE END RTOS_SEMAPHORES */
 131:Src/main.c    **** 
 132:Src/main.c    ****   /* USER CODE BEGIN RTOS_TIMERS */
 133:Src/main.c    ****   /* start timers, add new ones, ... */
 134:Src/main.c    ****   /* USER CODE END RTOS_TIMERS */
 135:Src/main.c    **** 
 136:Src/main.c    ****   /* Create the thread(s) */
 137:Src/main.c    ****   /* definition and creation of defaultTask */
 138:Src/main.c    ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 1024);
 139:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 140:Src/main.c    **** 
 141:Src/main.c    ****   /* USER CODE BEGIN RTOS_THREADS */
 142:Src/main.c    ****   /* add threads, ... */
 143:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 144:Src/main.c    **** 
 145:Src/main.c    ****   /* USER CODE BEGIN RTOS_QUEUES */
 146:Src/main.c    ****   /* add queues, ... */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 4


 147:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 148:Src/main.c    ****  
 149:Src/main.c    **** 
 150:Src/main.c    ****   /* Start scheduler */
 151:Src/main.c    ****   osKernelStart();
 152:Src/main.c    ****   
 153:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 154:Src/main.c    **** 
 155:Src/main.c    ****   /* Infinite loop */
 156:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 157:Src/main.c    ****   while (1)
 158:Src/main.c    ****   {
 159:Src/main.c    **** 
 160:Src/main.c    ****   /* USER CODE END WHILE */
 161:Src/main.c    **** 
 162:Src/main.c    ****   /* USER CODE BEGIN 3 */
 163:Src/main.c    **** 
 164:Src/main.c    ****   }
 165:Src/main.c    ****   /* USER CODE END 3 */
 166:Src/main.c    **** 
 167:Src/main.c    **** }
 168:Src/main.c    **** 
 169:Src/main.c    **** /**
 170:Src/main.c    ****   * @brief System Clock Configuration
 171:Src/main.c    ****   * @retval None
 172:Src/main.c    ****   */
 173:Src/main.c    **** void SystemClock_Config(void)
 174:Src/main.c    **** {
 175:Src/main.c    **** 
 176:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 177:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 178:Src/main.c    **** 
 179:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 180:Src/main.c    ****     */
 181:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 182:Src/main.c    **** 
 183:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 184:Src/main.c    **** 
 185:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 186:Src/main.c    ****     */
 187:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 188:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 189:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 190:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 191:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 192:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 120;
 193:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 194:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 5;
 195:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 196:Src/main.c    ****   {
 197:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 198:Src/main.c    ****   }
 199:Src/main.c    **** 
 200:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 201:Src/main.c    ****     */
 202:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 203:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 5


 204:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 205:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 206:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 207:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 208:Src/main.c    **** 
 209:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 210:Src/main.c    ****   {
 211:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 212:Src/main.c    ****   }
 213:Src/main.c    **** 
 214:Src/main.c    ****     /**Configure the Systick interrupt time 
 215:Src/main.c    ****     */
 216:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 217:Src/main.c    **** 
 218:Src/main.c    ****     /**Configure the Systick 
 219:Src/main.c    ****     */
 220:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 221:Src/main.c    **** 
 222:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 223:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 224:Src/main.c    **** }
 225:Src/main.c    **** 
 226:Src/main.c    **** /* USART3 init function */
 227:Src/main.c    **** static void MX_USART3_UART_Init(void)
 228:Src/main.c    **** {
 229:Src/main.c    **** 
 230:Src/main.c    ****   huart3.Instance = USART3;
 231:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 232:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 233:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 234:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 235:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 236:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 237:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 238:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 239:Src/main.c    ****   {
 240:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 241:Src/main.c    ****   }
 242:Src/main.c    **** 
 243:Src/main.c    **** }
 244:Src/main.c    **** 
 245:Src/main.c    **** /** Configure pins as 
 246:Src/main.c    ****         * Analog 
 247:Src/main.c    ****         * Input 
 248:Src/main.c    ****         * Output
 249:Src/main.c    ****         * EVENT_OUT
 250:Src/main.c    ****         * EXTI
 251:Src/main.c    **** */
 252:Src/main.c    **** static void MX_GPIO_Init(void)
 253:Src/main.c    **** {
  27              		.loc 1 253 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 48
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 24
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 6


  34              		.cfi_offset 4, -24
  35              		.cfi_offset 5, -20
  36              		.cfi_offset 6, -16
  37              		.cfi_offset 7, -12
  38              		.cfi_offset 8, -8
  39              		.cfi_offset 14, -4
  40 0004 8CB0     		sub	sp, sp, #48
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 72
  43              	.LBB2:
 254:Src/main.c    **** 
 255:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 256:Src/main.c    **** 
 257:Src/main.c    ****   /* GPIO Ports Clock Enable */
 258:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  44              		.loc 1 258 0
  45 0006 0024     		movs	r4, #0
  46 0008 0194     		str	r4, [sp, #4]
  47 000a 414B     		ldr	r3, .L3
  48 000c 1A6B     		ldr	r2, [r3, #48]
  49 000e 42F08002 		orr	r2, r2, #128
  50 0012 1A63     		str	r2, [r3, #48]
  51 0014 1A6B     		ldr	r2, [r3, #48]
  52 0016 02F08002 		and	r2, r2, #128
  53 001a 0192     		str	r2, [sp, #4]
  54 001c 019A     		ldr	r2, [sp, #4]
  55              	.LBE2:
  56              	.LBB3:
 259:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  57              		.loc 1 259 0
  58 001e 0294     		str	r4, [sp, #8]
  59 0020 1A6B     		ldr	r2, [r3, #48]
  60 0022 42F00402 		orr	r2, r2, #4
  61 0026 1A63     		str	r2, [r3, #48]
  62 0028 1A6B     		ldr	r2, [r3, #48]
  63 002a 02F00402 		and	r2, r2, #4
  64 002e 0292     		str	r2, [sp, #8]
  65 0030 029A     		ldr	r2, [sp, #8]
  66              	.LBE3:
  67              	.LBB4:
 260:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  68              		.loc 1 260 0
  69 0032 0394     		str	r4, [sp, #12]
  70 0034 1A6B     		ldr	r2, [r3, #48]
  71 0036 42F00102 		orr	r2, r2, #1
  72 003a 1A63     		str	r2, [r3, #48]
  73 003c 1A6B     		ldr	r2, [r3, #48]
  74 003e 02F00102 		and	r2, r2, #1
  75 0042 0392     		str	r2, [sp, #12]
  76 0044 039A     		ldr	r2, [sp, #12]
  77              	.LBE4:
  78              	.LBB5:
 261:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  79              		.loc 1 261 0
  80 0046 0494     		str	r4, [sp, #16]
  81 0048 1A6B     		ldr	r2, [r3, #48]
  82 004a 42F00202 		orr	r2, r2, #2
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 7


  83 004e 1A63     		str	r2, [r3, #48]
  84 0050 1A6B     		ldr	r2, [r3, #48]
  85 0052 02F00202 		and	r2, r2, #2
  86 0056 0492     		str	r2, [sp, #16]
  87 0058 049A     		ldr	r2, [sp, #16]
  88              	.LBE5:
  89              	.LBB6:
 262:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  90              		.loc 1 262 0
  91 005a 0594     		str	r4, [sp, #20]
  92 005c 1A6B     		ldr	r2, [r3, #48]
  93 005e 42F00802 		orr	r2, r2, #8
  94 0062 1A63     		str	r2, [r3, #48]
  95 0064 1A6B     		ldr	r2, [r3, #48]
  96 0066 02F00802 		and	r2, r2, #8
  97 006a 0592     		str	r2, [sp, #20]
  98 006c 059A     		ldr	r2, [sp, #20]
  99              	.LBE6:
 100              	.LBB7:
 263:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 101              		.loc 1 263 0
 102 006e 0694     		str	r4, [sp, #24]
 103 0070 1A6B     		ldr	r2, [r3, #48]
 104 0072 42F04002 		orr	r2, r2, #64
 105 0076 1A63     		str	r2, [r3, #48]
 106 0078 1B6B     		ldr	r3, [r3, #48]
 107 007a 03F04003 		and	r3, r3, #64
 108 007e 0693     		str	r3, [sp, #24]
 109 0080 069B     		ldr	r3, [sp, #24]
 110              	.LBE7:
 264:Src/main.c    **** 
 265:Src/main.c    ****   /*Configure GPIO pin Output Level */
 266:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, LED_G_Pin|LED_R_Pin|LED_B_Pin, GPIO_PIN_RESET);
 111              		.loc 1 266 0
 112 0082 DFF89880 		ldr	r8, .L3+12
 113 0086 2246     		mov	r2, r4
 114 0088 44F28101 		movw	r1, #16513
 115 008c 4046     		mov	r0, r8
 116 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 117              	.LVL0:
 267:Src/main.c    **** 
 268:Src/main.c    ****   /*Configure GPIO pin Output Level */
 269:Src/main.c    ****   HAL_GPIO_WritePin(USB_GPIO_OUT_GPIO_Port, USB_GPIO_OUT_Pin, GPIO_PIN_RESET);
 118              		.loc 1 269 0
 119 0092 204F     		ldr	r7, .L3+4
 120 0094 2246     		mov	r2, r4
 121 0096 4021     		movs	r1, #64
 122 0098 3846     		mov	r0, r7
 123 009a FFF7FEFF 		bl	HAL_GPIO_WritePin
 124              	.LVL1:
 270:Src/main.c    **** 
 271:Src/main.c    ****   /*Configure GPIO pin Output Level */
 272:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, JTAG_TRST_Pin|JTAG_TDO_Pin|JTAG_TMS_Pin|JTAG_TCLK_Pin, GPIO_PIN_RESET);
 125              		.loc 1 272 0
 126 009e 1E4E     		ldr	r6, .L3+8
 127 00a0 2246     		mov	r2, r4
 128 00a2 4FF4E851 		mov	r1, #7424
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 8


 129 00a6 3046     		mov	r0, r6
 130 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 131              	.LVL2:
 273:Src/main.c    **** 
 274:Src/main.c    ****   /*Configure GPIO pins : LED_G_Pin LED_R_Pin LED_B_Pin */
 275:Src/main.c    ****   GPIO_InitStruct.Pin = LED_G_Pin|LED_R_Pin|LED_B_Pin;
 132              		.loc 1 275 0
 133 00ac 44F28103 		movw	r3, #16513
 134 00b0 0793     		str	r3, [sp, #28]
 276:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 135              		.loc 1 276 0
 136 00b2 0125     		movs	r5, #1
 137 00b4 0895     		str	r5, [sp, #32]
 277:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 138              		.loc 1 277 0
 139 00b6 0994     		str	r4, [sp, #36]
 278:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 140              		.loc 1 278 0
 141 00b8 0A94     		str	r4, [sp, #40]
 279:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 142              		.loc 1 279 0
 143 00ba 07A9     		add	r1, sp, #28
 144 00bc 4046     		mov	r0, r8
 145 00be FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL3:
 280:Src/main.c    **** 
 281:Src/main.c    ****   /*Configure GPIO pin : USB_GPIO_OUT_Pin */
 282:Src/main.c    ****   GPIO_InitStruct.Pin = USB_GPIO_OUT_Pin;
 147              		.loc 1 282 0
 148 00c2 4023     		movs	r3, #64
 149 00c4 0793     		str	r3, [sp, #28]
 283:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 150              		.loc 1 283 0
 151 00c6 0895     		str	r5, [sp, #32]
 284:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 152              		.loc 1 284 0
 153 00c8 0994     		str	r4, [sp, #36]
 285:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 154              		.loc 1 285 0
 155 00ca 0A94     		str	r4, [sp, #40]
 286:Src/main.c    ****   HAL_GPIO_Init(USB_GPIO_OUT_GPIO_Port, &GPIO_InitStruct);
 156              		.loc 1 286 0
 157 00cc 07A9     		add	r1, sp, #28
 158 00ce 3846     		mov	r0, r7
 159 00d0 FFF7FEFF 		bl	HAL_GPIO_Init
 160              	.LVL4:
 287:Src/main.c    **** 
 288:Src/main.c    ****   /*Configure GPIO pin : USB_GPIO_IN_Pin */
 289:Src/main.c    ****   GPIO_InitStruct.Pin = USB_GPIO_IN_Pin;
 161              		.loc 1 289 0
 162 00d4 8023     		movs	r3, #128
 163 00d6 0793     		str	r3, [sp, #28]
 290:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 164              		.loc 1 290 0
 165 00d8 0894     		str	r4, [sp, #32]
 291:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 166              		.loc 1 291 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 9


 167 00da 0994     		str	r4, [sp, #36]
 292:Src/main.c    ****   HAL_GPIO_Init(USB_GPIO_IN_GPIO_Port, &GPIO_InitStruct);
 168              		.loc 1 292 0
 169 00dc 07A9     		add	r1, sp, #28
 170 00de 3846     		mov	r0, r7
 171 00e0 FFF7FEFF 		bl	HAL_GPIO_Init
 172              	.LVL5:
 293:Src/main.c    **** 
 294:Src/main.c    ****   /*Configure GPIO pins : JTAG_TRST_Pin JTAG_TDI_Pin JTAG_TMS_Pin JTAG_TCLK_Pin */
 295:Src/main.c    ****   GPIO_InitStruct.Pin = JTAG_TRST_Pin|JTAG_TDI_Pin|JTAG_TMS_Pin|JTAG_TCLK_Pin;
 173              		.loc 1 295 0
 174 00e4 4FF4D853 		mov	r3, #6912
 175 00e8 0793     		str	r3, [sp, #28]
 296:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 176              		.loc 1 296 0
 177 00ea 0895     		str	r5, [sp, #32]
 297:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 178              		.loc 1 297 0
 179 00ec 0995     		str	r5, [sp, #36]
 298:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 180              		.loc 1 298 0
 181 00ee 0A94     		str	r4, [sp, #40]
 299:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 182              		.loc 1 299 0
 183 00f0 07A9     		add	r1, sp, #28
 184 00f2 3046     		mov	r0, r6
 185 00f4 FFF7FEFF 		bl	HAL_GPIO_Init
 186              	.LVL6:
 300:Src/main.c    **** 
 301:Src/main.c    ****   /*Configure GPIO pin : JTAG_TDO_Pin */
 302:Src/main.c    ****   GPIO_InitStruct.Pin = JTAG_TDO_Pin;
 187              		.loc 1 302 0
 188 00f8 4FF48063 		mov	r3, #1024
 189 00fc 0793     		str	r3, [sp, #28]
 303:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 190              		.loc 1 303 0
 191 00fe 0894     		str	r4, [sp, #32]
 304:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 192              		.loc 1 304 0
 193 0100 0995     		str	r5, [sp, #36]
 305:Src/main.c    ****   HAL_GPIO_Init(JTAG_TDO_GPIO_Port, &GPIO_InitStruct);
 194              		.loc 1 305 0
 195 0102 07A9     		add	r1, sp, #28
 196 0104 3046     		mov	r0, r6
 197 0106 FFF7FEFF 		bl	HAL_GPIO_Init
 198              	.LVL7:
 306:Src/main.c    **** 
 307:Src/main.c    **** }
 199              		.loc 1 307 0
 200 010a 0CB0     		add	sp, sp, #48
 201              	.LCFI2:
 202              		.cfi_def_cfa_offset 24
 203              		@ sp needed
 204 010c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 205              	.L4:
 206              		.align	2
 207              	.L3:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 10


 208 0110 00380240 		.word	1073887232
 209 0114 00180240 		.word	1073879040
 210 0118 00080240 		.word	1073874944
 211 011c 00040240 		.word	1073873920
 212              		.cfi_endproc
 213              	.LFE153:
 215              		.section	.text.BlinkGreen,"ax",%progbits
 216              		.align	1
 217              		.global	BlinkGreen
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 221              		.fpu fpv4-sp-d16
 223              	BlinkGreen:
 224              	.LFB147:
 225              		.file 2 "Inc/communication/debug_leds.h"
   1:Inc/communication/debug_leds.h **** /* Copyright 2018 Maksymilian Wojczuk and Tomasz Michalec
   2:Inc/communication/debug_leds.h ****  *
   3:Inc/communication/debug_leds.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Inc/communication/debug_leds.h ****  * of this software and associated documentation files (the "Software"), to deal
   5:Inc/communication/debug_leds.h ****  * in the Software without restriction, including without limitation the rights
   6:Inc/communication/debug_leds.h ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Inc/communication/debug_leds.h ****  * copies of the Software, and to permit persons to whom the Software is
   8:Inc/communication/debug_leds.h ****  * furnished to do so, subject to the following conditions:
   9:Inc/communication/debug_leds.h ****  *
  10:Inc/communication/debug_leds.h ****  * The above copyright notice and this permission notice shall be included in
  11:Inc/communication/debug_leds.h ****  * all copies or substantial portions of the Software.
  12:Inc/communication/debug_leds.h ****  *
  13:Inc/communication/debug_leds.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Inc/communication/debug_leds.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Inc/communication/debug_leds.h ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Inc/communication/debug_leds.h ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Inc/communication/debug_leds.h ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Inc/communication/debug_leds.h ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  19:Inc/communication/debug_leds.h ****  * SOFTWARE.
  20:Inc/communication/debug_leds.h ****  */
  21:Inc/communication/debug_leds.h **** 
  22:Inc/communication/debug_leds.h **** #ifndef __debugLed_H
  23:Inc/communication/debug_leds.h **** #define __debugLed_H
  24:Inc/communication/debug_leds.h **** 
  25:Inc/communication/debug_leds.h **** void BlinkGreen() {
 226              		.loc 2 25 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230 0000 10B5     		push	{r4, lr}
 231              	.LCFI3:
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 4, -8
 234              		.cfi_offset 14, -4
  26:Inc/communication/debug_leds.h ****   HAL_GPIO_WritePin(LED_G_GPIO_Port, LED_G_Pin, GPIO_PIN_SET);
 235              		.loc 2 26 0
 236 0002 0A4C     		ldr	r4, .L7
 237 0004 0122     		movs	r2, #1
 238 0006 1146     		mov	r1, r2
 239 0008 2046     		mov	r0, r4
 240 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 11


 241              	.LVL8:
  27:Inc/communication/debug_leds.h ****   osDelay(500);
 242              		.loc 2 27 0
 243 000e 4FF4FA70 		mov	r0, #500
 244 0012 FFF7FEFF 		bl	osDelay
 245              	.LVL9:
  28:Inc/communication/debug_leds.h ****   HAL_GPIO_WritePin(LED_G_GPIO_Port, LED_G_Pin, GPIO_PIN_RESET);
 246              		.loc 2 28 0
 247 0016 0022     		movs	r2, #0
 248 0018 0121     		movs	r1, #1
 249 001a 2046     		mov	r0, r4
 250 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 251              	.LVL10:
  29:Inc/communication/debug_leds.h ****   osDelay(500);
 252              		.loc 2 29 0
 253 0020 4FF4FA70 		mov	r0, #500
 254 0024 FFF7FEFF 		bl	osDelay
 255              	.LVL11:
  30:Inc/communication/debug_leds.h **** }
 256              		.loc 2 30 0
 257 0028 10BD     		pop	{r4, pc}
 258              	.L8:
 259 002a 00BF     		.align	2
 260              	.L7:
 261 002c 00040240 		.word	1073873920
 262              		.cfi_endproc
 263              	.LFE147:
 265              		.section	.text.BlinkRed,"ax",%progbits
 266              		.align	1
 267              		.global	BlinkRed
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 271              		.fpu fpv4-sp-d16
 273              	BlinkRed:
 274              	.LFB148:
  31:Inc/communication/debug_leds.h **** 
  32:Inc/communication/debug_leds.h **** void BlinkRed() {
 275              		.loc 2 32 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279 0000 10B5     		push	{r4, lr}
 280              	.LCFI4:
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 4, -8
 283              		.cfi_offset 14, -4
  33:Inc/communication/debug_leds.h ****   HAL_GPIO_WritePin(LED_R_GPIO_Port, LED_R_Pin, GPIO_PIN_SET);
 284              		.loc 2 33 0
 285 0002 0B4C     		ldr	r4, .L11
 286 0004 0122     		movs	r2, #1
 287 0006 4FF48041 		mov	r1, #16384
 288 000a 2046     		mov	r0, r4
 289 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 290              	.LVL12:
  34:Inc/communication/debug_leds.h ****   osDelay(500);
 291              		.loc 2 34 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 12


 292 0010 4FF4FA70 		mov	r0, #500
 293 0014 FFF7FEFF 		bl	osDelay
 294              	.LVL13:
  35:Inc/communication/debug_leds.h ****   HAL_GPIO_WritePin(LED_R_GPIO_Port, LED_R_Pin, GPIO_PIN_RESET);
 295              		.loc 2 35 0
 296 0018 0022     		movs	r2, #0
 297 001a 4FF48041 		mov	r1, #16384
 298 001e 2046     		mov	r0, r4
 299 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 300              	.LVL14:
  36:Inc/communication/debug_leds.h ****   osDelay(500);
 301              		.loc 2 36 0
 302 0024 4FF4FA70 		mov	r0, #500
 303 0028 FFF7FEFF 		bl	osDelay
 304              	.LVL15:
  37:Inc/communication/debug_leds.h **** }
 305              		.loc 2 37 0
 306 002c 10BD     		pop	{r4, pc}
 307              	.L12:
 308 002e 00BF     		.align	2
 309              	.L11:
 310 0030 00040240 		.word	1073873920
 311              		.cfi_endproc
 312              	.LFE148:
 314              		.section	.text.BlinkBlue,"ax",%progbits
 315              		.align	1
 316              		.global	BlinkBlue
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 320              		.fpu fpv4-sp-d16
 322              	BlinkBlue:
 323              	.LFB149:
  38:Inc/communication/debug_leds.h **** 
  39:Inc/communication/debug_leds.h **** void BlinkBlue() {
 324              		.loc 2 39 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328 0000 10B5     		push	{r4, lr}
 329              	.LCFI5:
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 4, -8
 332              		.cfi_offset 14, -4
  40:Inc/communication/debug_leds.h ****   HAL_GPIO_WritePin(LED_B_GPIO_Port, LED_B_Pin, GPIO_PIN_SET);
 333              		.loc 2 40 0
 334 0002 0A4C     		ldr	r4, .L15
 335 0004 0122     		movs	r2, #1
 336 0006 8021     		movs	r1, #128
 337 0008 2046     		mov	r0, r4
 338 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 339              	.LVL16:
  41:Inc/communication/debug_leds.h ****   osDelay(500);
 340              		.loc 2 41 0
 341 000e 4FF4FA70 		mov	r0, #500
 342 0012 FFF7FEFF 		bl	osDelay
 343              	.LVL17:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 13


  42:Inc/communication/debug_leds.h ****   HAL_GPIO_WritePin(LED_B_GPIO_Port, LED_B_Pin, GPIO_PIN_RESET);
 344              		.loc 2 42 0
 345 0016 0022     		movs	r2, #0
 346 0018 8021     		movs	r1, #128
 347 001a 2046     		mov	r0, r4
 348 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 349              	.LVL18:
  43:Inc/communication/debug_leds.h ****   osDelay(500);
 350              		.loc 2 43 0
 351 0020 4FF4FA70 		mov	r0, #500
 352 0024 FFF7FEFF 		bl	osDelay
 353              	.LVL19:
  44:Inc/communication/debug_leds.h **** }
 354              		.loc 2 44 0
 355 0028 10BD     		pop	{r4, pc}
 356              	.L16:
 357 002a 00BF     		.align	2
 358              	.L15:
 359 002c 00040240 		.word	1073873920
 360              		.cfi_endproc
 361              	.LFE149:
 363              		.section	.text.StartDefaultTask,"ax",%progbits
 364              		.align	1
 365              		.global	StartDefaultTask
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	StartDefaultTask:
 372              	.LFB155:
 308:Src/main.c    **** 
 309:Src/main.c    **** /* USER CODE BEGIN 4 */
 310:Src/main.c    **** 
 311:Src/main.c    **** int __io_putchar(int ch)
 312:Src/main.c    **** {
 313:Src/main.c    ****  uint8_t c[1];
 314:Src/main.c    ****  c[1] = '\0';
 315:Src/main.c    ****  c[0] = ch & 0x00FF;
 316:Src/main.c    ****  if(c[0] == '\n') {
 317:Src/main.c    ****    __io_putchar('\r');
 318:Src/main.c    ****  }
 319:Src/main.c    ****  HAL_UART_Transmit(&huart3, &*c, 1, 10);
 320:Src/main.c    ****  return ch;
 321:Src/main.c    **** }
 322:Src/main.c    **** 
 323:Src/main.c    **** /* USER CODE END 4 */
 324:Src/main.c    **** 
 325:Src/main.c    **** /* USER CODE BEGIN Header_StartDefaultTask */
 326:Src/main.c    **** /**
 327:Src/main.c    ****   * @brief  Function implementing the defaultTask thread.
 328:Src/main.c    ****   * @param  argument: Not used
 329:Src/main.c    ****   * @retval None
 330:Src/main.c    ****   */
 331:Src/main.c    **** /* USER CODE END Header_StartDefaultTask */
 332:Src/main.c    **** void StartDefaultTask(void const * argument)
 333:Src/main.c    **** {
 373              		.loc 1 333 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 14


 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 568
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              	.LVL20:
 378 0000 30B5     		push	{r4, r5, lr}
 379              	.LCFI6:
 380              		.cfi_def_cfa_offset 12
 381              		.cfi_offset 4, -12
 382              		.cfi_offset 5, -8
 383              		.cfi_offset 14, -4
 384 0002 ADF5117D 		sub	sp, sp, #580
 385              	.LCFI7:
 386              		.cfi_def_cfa_offset 592
 334:Src/main.c    ****   /* init code for LWIP */
 335:Src/main.c    ****   MX_LWIP_Init();
 387              		.loc 1 335 0
 388 0006 FFF7FEFF 		bl	MX_LWIP_Init
 389              	.LVL21:
 336:Src/main.c    **** 
 337:Src/main.c    ****   /* init code for USB_HOST */
 338:Src/main.c    ****   MX_USB_HOST_Init();
 390              		.loc 1 338 0
 391 000a FFF7FEFF 		bl	MX_USB_HOST_Init
 392              	.LVL22:
 339:Src/main.c    **** 
 340:Src/main.c    ****   /* init code for FATFS */
 341:Src/main.c    ****   MX_FATFS_Init();
 393              		.loc 1 341 0
 394 000e FFF7FEFF 		bl	MX_FATFS_Init
 395              	.LVL23:
 342:Src/main.c    **** 
 343:Src/main.c    ****   /* USER CODE BEGIN 5 */
 344:Src/main.c    ****   printf("\n\n\n-----------------------START-------------------------\n\n");
 396              		.loc 1 344 0
 397 0012 6648     		ldr	r0, .L29
 398 0014 FFF7FEFF 		bl	puts
 399              	.LVL24:
 345:Src/main.c    ****   printf("\n\n\n---------------------JTAG-SCAN-----------------------\n\n");
 400              		.loc 1 345 0
 401 0018 6548     		ldr	r0, .L29+4
 402 001a FFF7FEFF 		bl	puts
 403              	.LVL25:
 346:Src/main.c    ****   jtag_scan();
 404              		.loc 1 346 0
 405 001e FFF7FEFF 		bl	jtag_scan
 406              	.LVL26:
 347:Src/main.c    ****   printf("\n\n\n---------------------START-USB-----------------------\n\n");
 407              		.loc 1 347 0
 408 0022 6448     		ldr	r0, .L29+8
 409 0024 FFF7FEFF 		bl	puts
 410              	.LVL27:
 348:Src/main.c    ****   osDelay(500);
 411              		.loc 1 348 0
 412 0028 4FF4FA70 		mov	r0, #500
 413 002c FFF7FEFF 		bl	osDelay
 414              	.LVL28:
 349:Src/main.c    ****   HAL_GPIO_WritePin(USB_GPIO_OUT_GPIO_Port, USB_GPIO_OUT_Pin, GPIO_PIN_SET);
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 15


 415              		.loc 1 349 0
 416 0030 0122     		movs	r2, #1
 417 0032 4021     		movs	r1, #64
 418 0034 6048     		ldr	r0, .L29+12
 419 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 420              	.LVL29:
 350:Src/main.c    ****   printf("\n\n\n-------------------PARSE--CONFIG---------------------\n\n");
 421              		.loc 1 350 0
 422 003a 6048     		ldr	r0, .L29+16
 423 003c FFF7FEFF 		bl	puts
 424              	.LVL30:
 351:Src/main.c    ****   osDelay(3000); // wait for DHCP initialisation
 425              		.loc 1 351 0
 426 0040 40F6B830 		movw	r0, #3000
 427 0044 FFF7FEFF 		bl	osDelay
 428              	.LVL31:
 352:Src/main.c    ****   lwip_socket_init();
 353:Src/main.c    ****   parse_config();
 429              		.loc 1 353 0
 430 0048 FFF7FEFF 		bl	parse_config
 431              	.LVL32:
 354:Src/main.c    ****   printf("\n\n\n----------------------WAKAAMA------------------------\n\n");
 432              		.loc 1 354 0
 433 004c 5C48     		ldr	r0, .L29+20
 434 004e FFF7FEFF 		bl	puts
 435              	.LVL33:
 355:Src/main.c    **** 
 356:Src/main.c    **** // Initialize Wakaama LWM2M Client
 357:Src/main.c    ****   int socket = createUDPSocket(configuration.local_port, AF_INET);
 436              		.loc 1 357 0
 437 0052 0221     		movs	r1, #2
 438 0054 5B4B     		ldr	r3, .L29+24
 439 0056 9868     		ldr	r0, [r3, #8]
 440 0058 FFF7FEFF 		bl	createUDPSocket
 441              	.LVL34:
 442 005c 0446     		mov	r4, r0
 443              	.LVL35:
 358:Src/main.c    ****   if(socket != -1){ 
 444              		.loc 1 358 0
 445 005e B0F1FF3F 		cmp	r0, #-1
 446 0062 1BD0     		beq	.L18
 447              	.LBB8:
 359:Src/main.c    ****     printf("Start wakaama task\r\n");
 448              		.loc 1 359 0
 449 0064 5848     		ldr	r0, .L29+28
 450              	.LVL36:
 451 0066 FFF7FEFF 		bl	puts
 452              	.LVL37:
 360:Src/main.c    ****     int res = xTaskCreate(taskWakaama, "wakaama", 3000, (void *) socket, 3, NULL);
 453              		.loc 1 360 0
 454 006a 0023     		movs	r3, #0
 455 006c 0193     		str	r3, [sp, #4]
 456 006e 0323     		movs	r3, #3
 457 0070 0093     		str	r3, [sp]
 458 0072 2346     		mov	r3, r4
 459 0074 40F6B832 		movw	r2, #3000
 460 0078 5449     		ldr	r1, .L29+32
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 16


 461 007a 5548     		ldr	r0, .L29+36
 462 007c FFF7FEFF 		bl	xTaskCreate
 463              	.LVL38:
 464 0080 0146     		mov	r1, r0
 465              	.LVL39:
 361:Src/main.c    ****     if (res != pdPASS) {
 466              		.loc 1 361 0
 467 0082 0128     		cmp	r0, #1
 468 0084 06D1     		bne	.L28
 469              	.LVL40:
 470              	.L19:
 471              	.LBE8:
 362:Src/main.c    ****       printf("\r\nerror creating taskWakaama: %d\n", res);  
 363:Src/main.c    ****     }
 364:Src/main.c    ****   } else {
 365:Src/main.c    ****     printf("Error creating socket: %d", socket);
 366:Src/main.c    ****   }
 367:Src/main.c    **** 
 368:Src/main.c    ****   int x = 0;
 369:Src/main.c    ****   BlinkBlue();
 472              		.loc 1 369 0
 473 0086 FFF7FEFF 		bl	BlinkBlue
 474              	.LVL41:
 370:Src/main.c    ****   char usrInput[2];
 371:Src/main.c    ****   FIL file;
 372:Src/main.c    ****   int result;
 373:Src/main.c    ****   int progress;
 374:Src/main.c    ****   /* Infinite loop */
 375:Src/main.c    ****   debug_init(&huart3);
 475              		.loc 1 375 0
 476 008a 5248     		ldr	r0, .L29+40
 477 008c FFF7FEFF 		bl	debug_init
 478              	.LVL42:
 368:Src/main.c    ****   BlinkBlue();
 479              		.loc 1 368 0
 480 0090 0024     		movs	r4, #0
 481              	.LVL43:
 482 0092 2AE0     		b	.L20
 483              	.LVL44:
 484              	.L28:
 485              	.LBB9:
 362:Src/main.c    ****       printf("\r\nerror creating taskWakaama: %d\n", res);  
 486              		.loc 1 362 0
 487 0094 5048     		ldr	r0, .L29+44
 488              	.LVL45:
 489 0096 FFF7FEFF 		bl	printf
 490              	.LVL46:
 491 009a F4E7     		b	.L19
 492              	.LVL47:
 493              	.L18:
 494              	.LBE9:
 365:Src/main.c    ****   }
 495              		.loc 1 365 0
 496 009c 0146     		mov	r1, r0
 497 009e 4F48     		ldr	r0, .L29+48
 498              	.LVL48:
 499 00a0 FFF7FEFF 		bl	printf
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 17


 500              	.LVL49:
 501 00a4 EFE7     		b	.L19
 502              	.LVL50:
 503              	.L24:
 504              	.LBB10:
 376:Src/main.c    ****   for(;;)
 377:Src/main.c    ****   {
 378:Src/main.c    ****     osDelay(5);
 379:Src/main.c    ****     printf("in loop %d\n\r", x);
 380:Src/main.c    ****     x++;
 381:Src/main.c    ****     printf("$ ");
 382:Src/main.c    ****     fflush(stdout);
 383:Src/main.c    ****     get_line(usrInput, 2);
 384:Src/main.c    ****     printf("%s\n", usrInput);
 385:Src/main.c    ****     switch(usrInput[0]) {
 386:Src/main.c    ****       case 'l':
 387:Src/main.c    ****         if (get_usb_ready()) {
 505              		.loc 1 387 0
 506 00a6 FFF7FEFF 		bl	get_usb_ready
 507              	.LVL51:
 508 00aa F0B1     		cbz	r0, .L20
 388:Src/main.c    ****           usb_ls();
 509              		.loc 1 388 0
 510 00ac FFF7FEFF 		bl	usb_ls
 511              	.LVL52:
 512 00b0 1BE0     		b	.L20
 513              	.L26:
 389:Src/main.c    ****         }
 390:Src/main.c    ****         break;
 391:Src/main.c    ****       case 'w':
 392:Src/main.c    ****         if (get_usb_ready()) {
 514              		.loc 1 392 0
 515 00b2 FFF7FEFF 		bl	get_usb_ready
 516              	.LVL53:
 517 00b6 C0B1     		cbz	r0, .L20
 393:Src/main.c    ****           usb_write("asd", "temp", 3);
 518              		.loc 1 393 0
 519 00b8 0322     		movs	r2, #3
 520 00ba 4949     		ldr	r1, .L29+52
 521 00bc 4948     		ldr	r0, .L29+56
 522 00be FFF7FEFF 		bl	usb_write
 523              	.LVL54:
 524 00c2 12E0     		b	.L20
 525              	.L25:
 394:Src/main.c    ****         }
 395:Src/main.c    ****         break;
 396:Src/main.c    ****       case 'r':
 397:Src/main.c    ****         progress = 0;
 526              		.loc 1 397 0
 527 00c4 0023     		movs	r3, #0
 528 00c6 0293     		str	r3, [sp, #8]
 398:Src/main.c    ****         if (usb_open_file("red.bin", &file, FA_READ) != 0) {
 529              		.loc 1 398 0
 530 00c8 0122     		movs	r2, #1
 531 00ca 03A9     		add	r1, sp, #12
 532 00cc 4648     		ldr	r0, .L29+60
 533 00ce FFF7FEFF 		bl	usb_open_file
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 18


 534              	.LVL55:
 535 00d2 50B9     		cbnz	r0, .L20
 399:Src/main.c    ****           break;
 400:Src/main.c    ****         }
 401:Src/main.c    ****         target_list.next->ops->flash_target(target_list.next->priv, &file, &progress);
 536              		.loc 1 401 0
 537 00d4 454B     		ldr	r3, .L29+64
 538 00d6 DB68     		ldr	r3, [r3, #12]
 539 00d8 1A68     		ldr	r2, [r3]
 540 00da 1568     		ldr	r5, [r2]
 541 00dc 02AA     		add	r2, sp, #8
 542 00de 03A9     		add	r1, sp, #12
 543 00e0 5868     		ldr	r0, [r3, #4]
 544 00e2 A847     		blx	r5
 545              	.LVL56:
 402:Src/main.c    ****         usb_close_file(&file);
 546              		.loc 1 402 0
 547 00e4 03A8     		add	r0, sp, #12
 548 00e6 FFF7FEFF 		bl	usb_close_file
 549              	.LVL57:
 550              	.L20:
 378:Src/main.c    ****     printf("in loop %d\n\r", x);
 551              		.loc 1 378 0
 552 00ea 0520     		movs	r0, #5
 553 00ec FFF7FEFF 		bl	osDelay
 554              	.LVL58:
 379:Src/main.c    ****     x++;
 555              		.loc 1 379 0
 556 00f0 2146     		mov	r1, r4
 557 00f2 3F48     		ldr	r0, .L29+68
 558 00f4 FFF7FEFF 		bl	printf
 559              	.LVL59:
 380:Src/main.c    ****     printf("$ ");
 560              		.loc 1 380 0
 561 00f8 0134     		adds	r4, r4, #1
 562              	.LVL60:
 381:Src/main.c    ****     fflush(stdout);
 563              		.loc 1 381 0
 564 00fa 3E48     		ldr	r0, .L29+72
 565 00fc FFF7FEFF 		bl	printf
 566              	.LVL61:
 382:Src/main.c    ****     get_line(usrInput, 2);
 567              		.loc 1 382 0
 568 0100 3D4B     		ldr	r3, .L29+76
 569 0102 1B68     		ldr	r3, [r3]
 570 0104 9868     		ldr	r0, [r3, #8]
 571 0106 FFF7FEFF 		bl	fflush
 572              	.LVL62:
 383:Src/main.c    ****     printf("%s\n", usrInput);
 573              		.loc 1 383 0
 574 010a 0221     		movs	r1, #2
 575 010c 8FA8     		add	r0, sp, #572
 576 010e FFF7FEFF 		bl	get_line
 577              	.LVL63:
 384:Src/main.c    ****     switch(usrInput[0]) {
 578              		.loc 1 384 0
 579 0112 8FA8     		add	r0, sp, #572
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 19


 580 0114 FFF7FEFF 		bl	puts
 581              	.LVL64:
 385:Src/main.c    ****       case 'l':
 582              		.loc 1 385 0
 583 0118 9DF83C32 		ldrb	r3, [sp, #572]	@ zero_extendqisi2
 584 011c 623B     		subs	r3, r3, #98
 585 011e 152B     		cmp	r3, #21
 586 0120 E3D8     		bhi	.L20
 587 0122 01A2     		adr	r2, .L23
 588 0124 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 589              		.p2align 2
 590              	.L23:
 591 0128 81010000 		.word	.L22+1
 592 012c EB000000 		.word	.L20+1
 593 0130 EB000000 		.word	.L20+1
 594 0134 EB000000 		.word	.L20+1
 595 0138 EB000000 		.word	.L20+1
 596 013c EB000000 		.word	.L20+1
 597 0140 EB000000 		.word	.L20+1
 598 0144 EB000000 		.word	.L20+1
 599 0148 EB000000 		.word	.L20+1
 600 014c EB000000 		.word	.L20+1
 601 0150 A7000000 		.word	.L24+1
 602 0154 EB000000 		.word	.L20+1
 603 0158 EB000000 		.word	.L20+1
 604 015c EB000000 		.word	.L20+1
 605 0160 EB000000 		.word	.L20+1
 606 0164 EB000000 		.word	.L20+1
 607 0168 C5000000 		.word	.L25+1
 608 016c EB000000 		.word	.L20+1
 609 0170 EB000000 		.word	.L20+1
 610 0174 EB000000 		.word	.L20+1
 611 0178 EB000000 		.word	.L20+1
 612 017c B3000000 		.word	.L26+1
 613              		.p2align 1
 614              	.L22:
 403:Src/main.c    ****         break;
 404:Src/main.c    ****       case 'b':
 405:Src/main.c    ****         progress = 0;
 615              		.loc 1 405 0
 616 0180 0023     		movs	r3, #0
 617 0182 0293     		str	r3, [sp, #8]
 406:Src/main.c    ****         if (usb_open_file("blue.bin", &file, FA_READ) != 0) {
 618              		.loc 1 406 0
 619 0184 0122     		movs	r2, #1
 620 0186 03A9     		add	r1, sp, #12
 621 0188 1C48     		ldr	r0, .L29+80
 622 018a FFF7FEFF 		bl	usb_open_file
 623              	.LVL65:
 624 018e 0028     		cmp	r0, #0
 625 0190 ABD1     		bne	.L20
 407:Src/main.c    ****           break;
 408:Src/main.c    ****         }
 409:Src/main.c    ****         target_list.next->ops->flash_target(target_list.next->priv, &file, &progress);
 626              		.loc 1 409 0
 627 0192 164B     		ldr	r3, .L29+64
 628 0194 DB68     		ldr	r3, [r3, #12]
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 20


 629 0196 1A68     		ldr	r2, [r3]
 630 0198 1568     		ldr	r5, [r2]
 631 019a 02AA     		add	r2, sp, #8
 632 019c 03A9     		add	r1, sp, #12
 633 019e 5868     		ldr	r0, [r3, #4]
 634 01a0 A847     		blx	r5
 635              	.LVL66:
 410:Src/main.c    ****         usb_close_file(&file);
 636              		.loc 1 410 0
 637 01a2 03A8     		add	r0, sp, #12
 638 01a4 FFF7FEFF 		bl	usb_close_file
 639              	.LVL67:
 411:Src/main.c    ****         break;
 640              		.loc 1 411 0
 641 01a8 9FE7     		b	.L20
 642              	.L30:
 643 01aa 00BF     		.align	2
 644              	.L29:
 645 01ac 00000000 		.word	.LC2
 646 01b0 3C000000 		.word	.LC3
 647 01b4 78000000 		.word	.LC4
 648 01b8 00180240 		.word	1073879040
 649 01bc B4000000 		.word	.LC5
 650 01c0 F0000000 		.word	.LC6
 651 01c4 00000000 		.word	configuration
 652 01c8 2C010000 		.word	.LC7
 653 01cc 40010000 		.word	.LC8
 654 01d0 00000000 		.word	taskWakaama
 655 01d4 00000000 		.word	huart3
 656 01d8 48010000 		.word	.LC9
 657 01dc 6C010000 		.word	.LC10
 658 01e0 9C010000 		.word	.LC13
 659 01e4 A4010000 		.word	.LC14
 660 01e8 A8010000 		.word	.LC15
 661 01ec 00000000 		.word	target_list
 662 01f0 88010000 		.word	.LC11
 663 01f4 98010000 		.word	.LC12
 664 01f8 00000000 		.word	_impure_ptr
 665 01fc B0010000 		.word	.LC16
 666              	.LBE10:
 667              		.cfi_endproc
 668              	.LFE155:
 670              		.section	.text.__io_putchar,"ax",%progbits
 671              		.align	1
 672              		.global	__io_putchar
 673              		.syntax unified
 674              		.thumb
 675              		.thumb_func
 676              		.fpu fpv4-sp-d16
 678              	__io_putchar:
 679              	.LFB154:
 312:Src/main.c    ****  uint8_t c[1];
 680              		.loc 1 312 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 8
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684              	.LVL68:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 21


 685 0000 10B5     		push	{r4, lr}
 686              	.LCFI8:
 687              		.cfi_def_cfa_offset 8
 688              		.cfi_offset 4, -8
 689              		.cfi_offset 14, -4
 690 0002 82B0     		sub	sp, sp, #8
 691              	.LCFI9:
 692              		.cfi_def_cfa_offset 16
 693 0004 0446     		mov	r4, r0
 314:Src/main.c    ****  c[0] = ch & 0x00FF;
 694              		.loc 1 314 0
 695 0006 0023     		movs	r3, #0
 696 0008 8DF80530 		strb	r3, [sp, #5]
 315:Src/main.c    ****  if(c[0] == '\n') {
 697              		.loc 1 315 0
 698 000c C3B2     		uxtb	r3, r0
 699 000e 8DF80430 		strb	r3, [sp, #4]
 316:Src/main.c    ****    __io_putchar('\r');
 700              		.loc 1 316 0
 701 0012 0A2B     		cmp	r3, #10
 702 0014 08D0     		beq	.L34
 703              	.LVL69:
 704              	.L32:
 319:Src/main.c    ****  return ch;
 705              		.loc 1 319 0
 706 0016 0A23     		movs	r3, #10
 707 0018 0122     		movs	r2, #1
 708 001a 01A9     		add	r1, sp, #4
 709 001c 0448     		ldr	r0, .L35
 710 001e FFF7FEFF 		bl	HAL_UART_Transmit
 711              	.LVL70:
 321:Src/main.c    **** 
 712              		.loc 1 321 0
 713 0022 2046     		mov	r0, r4
 714 0024 02B0     		add	sp, sp, #8
 715              	.LCFI10:
 716              		.cfi_remember_state
 717              		.cfi_def_cfa_offset 8
 718              		@ sp needed
 719 0026 10BD     		pop	{r4, pc}
 720              	.LVL71:
 721              	.L34:
 722              	.LCFI11:
 723              		.cfi_restore_state
 317:Src/main.c    ****  }
 724              		.loc 1 317 0
 725 0028 0D20     		movs	r0, #13
 726              	.LVL72:
 727 002a FFF7FEFF 		bl	__io_putchar
 728              	.LVL73:
 729 002e F2E7     		b	.L32
 730              	.L36:
 731              		.align	2
 732              	.L35:
 733 0030 00000000 		.word	huart3
 734              		.cfi_endproc
 735              	.LFE154:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 22


 737              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 738              		.align	1
 739              		.global	HAL_TIM_PeriodElapsedCallback
 740              		.syntax unified
 741              		.thumb
 742              		.thumb_func
 743              		.fpu fpv4-sp-d16
 745              	HAL_TIM_PeriodElapsedCallback:
 746              	.LFB156:
 412:Src/main.c    ****     }
 413:Src/main.c    ****   }
 414:Src/main.c    ****   /* USER CODE END 5 */ 
 415:Src/main.c    **** }
 416:Src/main.c    **** 
 417:Src/main.c    **** /**
 418:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 419:Src/main.c    ****   * @note   This function is called  when TIM6 interrupt took place, inside
 420:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 421:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 422:Src/main.c    ****   * @param  htim : TIM handle
 423:Src/main.c    ****   * @retval None
 424:Src/main.c    ****   */
 425:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 426:Src/main.c    **** {
 747              		.loc 1 426 0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751              	.LVL74:
 752 0000 08B5     		push	{r3, lr}
 753              	.LCFI12:
 754              		.cfi_def_cfa_offset 8
 755              		.cfi_offset 3, -8
 756              		.cfi_offset 14, -4
 427:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
 428:Src/main.c    **** 
 429:Src/main.c    ****   /* USER CODE END Callback 0 */
 430:Src/main.c    ****   if (htim->Instance == TIM6) {
 757              		.loc 1 430 0
 758 0002 0268     		ldr	r2, [r0]
 759 0004 034B     		ldr	r3, .L41
 760 0006 9A42     		cmp	r2, r3
 761 0008 00D0     		beq	.L40
 762              	.LVL75:
 763              	.L37:
 431:Src/main.c    ****     HAL_IncTick();
 432:Src/main.c    ****   }
 433:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
 434:Src/main.c    **** 
 435:Src/main.c    ****   /* USER CODE END Callback 1 */
 436:Src/main.c    **** }
 764              		.loc 1 436 0
 765 000a 08BD     		pop	{r3, pc}
 766              	.LVL76:
 767              	.L40:
 431:Src/main.c    ****     HAL_IncTick();
 768              		.loc 1 431 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 23


 769 000c FFF7FEFF 		bl	HAL_IncTick
 770              	.LVL77:
 771              		.loc 1 436 0
 772 0010 FBE7     		b	.L37
 773              	.L42:
 774 0012 00BF     		.align	2
 775              	.L41:
 776 0014 00100040 		.word	1073745920
 777              		.cfi_endproc
 778              	.LFE156:
 780              		.section	.text._Error_Handler,"ax",%progbits
 781              		.align	1
 782              		.global	_Error_Handler
 783              		.syntax unified
 784              		.thumb
 785              		.thumb_func
 786              		.fpu fpv4-sp-d16
 788              	_Error_Handler:
 789              	.LFB157:
 437:Src/main.c    **** 
 438:Src/main.c    **** /**
 439:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 440:Src/main.c    ****   * @param  file: The file name as string.
 441:Src/main.c    ****   * @param  line: The line in file as a number.
 442:Src/main.c    ****   * @retval None
 443:Src/main.c    ****   */
 444:Src/main.c    **** void _Error_Handler(char *file, int line)
 445:Src/main.c    **** {
 790              		.loc 1 445 0
 791              		.cfi_startproc
 792              		@ Volatile: function does not return.
 793              		@ args = 0, pretend = 0, frame = 0
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 795              		@ link register save eliminated.
 796              	.LVL78:
 797              	.L44:
 798 0000 FEE7     		b	.L44
 799              		.cfi_endproc
 800              	.LFE157:
 802              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 803              		.align	1
 804              		.syntax unified
 805              		.thumb
 806              		.thumb_func
 807              		.fpu fpv4-sp-d16
 809              	MX_USART3_UART_Init:
 810              	.LFB152:
 228:Src/main.c    **** 
 811              		.loc 1 228 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 0
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 228:Src/main.c    **** 
 815              		.loc 1 228 0
 816 0000 08B5     		push	{r3, lr}
 817              	.LCFI13:
 818              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 24


 819              		.cfi_offset 3, -8
 820              		.cfi_offset 14, -4
 230:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 821              		.loc 1 230 0
 822 0002 0B48     		ldr	r0, .L49
 823 0004 0B4B     		ldr	r3, .L49+4
 824 0006 0360     		str	r3, [r0]
 231:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 825              		.loc 1 231 0
 826 0008 4FF4E133 		mov	r3, #115200
 827 000c 4360     		str	r3, [r0, #4]
 232:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 828              		.loc 1 232 0
 829 000e 0023     		movs	r3, #0
 830 0010 8360     		str	r3, [r0, #8]
 233:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 831              		.loc 1 233 0
 832 0012 C360     		str	r3, [r0, #12]
 234:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 833              		.loc 1 234 0
 834 0014 0361     		str	r3, [r0, #16]
 235:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 835              		.loc 1 235 0
 836 0016 0C22     		movs	r2, #12
 837 0018 4261     		str	r2, [r0, #20]
 236:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 838              		.loc 1 236 0
 839 001a 8361     		str	r3, [r0, #24]
 237:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 840              		.loc 1 237 0
 841 001c C361     		str	r3, [r0, #28]
 238:Src/main.c    ****   {
 842              		.loc 1 238 0
 843 001e FFF7FEFF 		bl	HAL_UART_Init
 844              	.LVL79:
 845 0022 00B9     		cbnz	r0, .L48
 243:Src/main.c    **** 
 846              		.loc 1 243 0
 847 0024 08BD     		pop	{r3, pc}
 848              	.L48:
 240:Src/main.c    ****   }
 849              		.loc 1 240 0
 850 0026 F021     		movs	r1, #240
 851 0028 0348     		ldr	r0, .L49+8
 852 002a FFF7FEFF 		bl	_Error_Handler
 853              	.LVL80:
 854              	.L50:
 855 002e 00BF     		.align	2
 856              	.L49:
 857 0030 00000000 		.word	huart3
 858 0034 00480040 		.word	1073760256
 859 0038 00000000 		.word	.LC17
 860              		.cfi_endproc
 861              	.LFE152:
 863              		.section	.text.SystemClock_Config,"ax",%progbits
 864              		.align	1
 865              		.global	SystemClock_Config
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 25


 866              		.syntax unified
 867              		.thumb
 868              		.thumb_func
 869              		.fpu fpv4-sp-d16
 871              	SystemClock_Config:
 872              	.LFB151:
 174:Src/main.c    **** 
 873              		.loc 1 174 0
 874              		.cfi_startproc
 875              		@ args = 0, pretend = 0, frame = 80
 876              		@ frame_needed = 0, uses_anonymous_args = 0
 877 0000 00B5     		push	{lr}
 878              	.LCFI14:
 879              		.cfi_def_cfa_offset 4
 880              		.cfi_offset 14, -4
 881 0002 95B0     		sub	sp, sp, #84
 882              	.LCFI15:
 883              		.cfi_def_cfa_offset 88
 884              	.LBB11:
 181:Src/main.c    **** 
 885              		.loc 1 181 0
 886 0004 0021     		movs	r1, #0
 887 0006 0191     		str	r1, [sp, #4]
 888 0008 2C4B     		ldr	r3, .L57
 889 000a 1A6C     		ldr	r2, [r3, #64]
 890 000c 42F08052 		orr	r2, r2, #268435456
 891 0010 1A64     		str	r2, [r3, #64]
 892 0012 1B6C     		ldr	r3, [r3, #64]
 893 0014 03F08053 		and	r3, r3, #268435456
 894 0018 0193     		str	r3, [sp, #4]
 895 001a 019B     		ldr	r3, [sp, #4]
 896              	.LBE11:
 897              	.LBB12:
 183:Src/main.c    **** 
 898              		.loc 1 183 0
 899 001c 0291     		str	r1, [sp, #8]
 900 001e 284A     		ldr	r2, .L57+4
 901 0020 1368     		ldr	r3, [r2]
 902 0022 23F44043 		bic	r3, r3, #49152
 903 0026 43F48043 		orr	r3, r3, #16384
 904 002a 1360     		str	r3, [r2]
 905 002c 1368     		ldr	r3, [r2]
 906 002e 03F44043 		and	r3, r3, #49152
 907 0032 0293     		str	r3, [sp, #8]
 908 0034 029B     		ldr	r3, [sp, #8]
 909              	.LBE12:
 187:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 910              		.loc 1 187 0
 911 0036 0123     		movs	r3, #1
 912 0038 0893     		str	r3, [sp, #32]
 188:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 913              		.loc 1 188 0
 914 003a 4FF48033 		mov	r3, #65536
 915 003e 0993     		str	r3, [sp, #36]
 189:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 916              		.loc 1 189 0
 917 0040 0223     		movs	r3, #2
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 26


 918 0042 0E93     		str	r3, [sp, #56]
 190:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 919              		.loc 1 190 0
 920 0044 4FF48002 		mov	r2, #4194304
 921 0048 0F92     		str	r2, [sp, #60]
 191:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 120;
 922              		.loc 1 191 0
 923 004a 0422     		movs	r2, #4
 924 004c 1092     		str	r2, [sp, #64]
 192:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 925              		.loc 1 192 0
 926 004e 7822     		movs	r2, #120
 927 0050 1192     		str	r2, [sp, #68]
 193:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 5;
 928              		.loc 1 193 0
 929 0052 1293     		str	r3, [sp, #72]
 194:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 930              		.loc 1 194 0
 931 0054 0523     		movs	r3, #5
 932 0056 1393     		str	r3, [sp, #76]
 195:Src/main.c    ****   {
 933              		.loc 1 195 0
 934 0058 08A8     		add	r0, sp, #32
 935 005a FFF7FEFF 		bl	HAL_RCC_OscConfig
 936              	.LVL81:
 937 005e 20BB     		cbnz	r0, .L55
 202:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 938              		.loc 1 202 0
 939 0060 0F23     		movs	r3, #15
 940 0062 0393     		str	r3, [sp, #12]
 204:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 941              		.loc 1 204 0
 942 0064 0223     		movs	r3, #2
 943 0066 0493     		str	r3, [sp, #16]
 205:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 944              		.loc 1 205 0
 945 0068 0023     		movs	r3, #0
 946 006a 0593     		str	r3, [sp, #20]
 206:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 947              		.loc 1 206 0
 948 006c 4FF4A053 		mov	r3, #5120
 949 0070 0693     		str	r3, [sp, #24]
 207:Src/main.c    **** 
 950              		.loc 1 207 0
 951 0072 4FF48053 		mov	r3, #4096
 952 0076 0793     		str	r3, [sp, #28]
 209:Src/main.c    ****   {
 953              		.loc 1 209 0
 954 0078 0321     		movs	r1, #3
 955 007a 03A8     		add	r0, sp, #12
 956 007c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 957              	.LVL82:
 958 0080 B8B9     		cbnz	r0, .L56
 216:Src/main.c    **** 
 959              		.loc 1 216 0
 960 0082 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 961              	.LVL83:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 27


 962 0086 0F4B     		ldr	r3, .L57+8
 963 0088 A3FB0030 		umull	r3, r0, r3, r0
 964 008c 8009     		lsrs	r0, r0, #6
 965 008e FFF7FEFF 		bl	HAL_SYSTICK_Config
 966              	.LVL84:
 220:Src/main.c    **** 
 967              		.loc 1 220 0
 968 0092 0420     		movs	r0, #4
 969 0094 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 970              	.LVL85:
 223:Src/main.c    **** }
 971              		.loc 1 223 0
 972 0098 0022     		movs	r2, #0
 973 009a 0F21     		movs	r1, #15
 974 009c 4FF0FF30 		mov	r0, #-1
 975 00a0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 976              	.LVL86:
 224:Src/main.c    **** 
 977              		.loc 1 224 0
 978 00a4 15B0     		add	sp, sp, #84
 979              	.LCFI16:
 980              		.cfi_remember_state
 981              		.cfi_def_cfa_offset 4
 982              		@ sp needed
 983 00a6 5DF804FB 		ldr	pc, [sp], #4
 984              	.L55:
 985              	.LCFI17:
 986              		.cfi_restore_state
 197:Src/main.c    ****   }
 987              		.loc 1 197 0
 988 00aa C521     		movs	r1, #197
 989 00ac 0648     		ldr	r0, .L57+12
 990 00ae FFF7FEFF 		bl	_Error_Handler
 991              	.LVL87:
 992              	.L56:
 211:Src/main.c    ****   }
 993              		.loc 1 211 0
 994 00b2 D321     		movs	r1, #211
 995 00b4 0448     		ldr	r0, .L57+12
 996 00b6 FFF7FEFF 		bl	_Error_Handler
 997              	.LVL88:
 998              	.L58:
 999 00ba 00BF     		.align	2
 1000              	.L57:
 1001 00bc 00380240 		.word	1073887232
 1002 00c0 00700040 		.word	1073770496
 1003 00c4 D34D6210 		.word	274877907
 1004 00c8 00000000 		.word	.LC17
 1005              		.cfi_endproc
 1006              	.LFE151:
 1008              		.section	.text.main,"ax",%progbits
 1009              		.align	1
 1010              		.global	main
 1011              		.syntax unified
 1012              		.thumb
 1013              		.thumb_func
 1014              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 28


 1016              	main:
 1017              	.LFB150:
  96:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1018              		.loc 1 96 0
 1019              		.cfi_startproc
 1020              		@ Volatile: function does not return.
 1021              		@ args = 0, pretend = 0, frame = 24
 1022              		@ frame_needed = 0, uses_anonymous_args = 0
 1023 0000 00B5     		push	{lr}
 1024              	.LCFI18:
 1025              		.cfi_def_cfa_offset 4
 1026              		.cfi_offset 14, -4
 1027 0002 87B0     		sub	sp, sp, #28
 1028              	.LCFI19:
 1029              		.cfi_def_cfa_offset 32
 104:Src/main.c    **** 
 1030              		.loc 1 104 0
 1031 0004 FFF7FEFF 		bl	HAL_Init
 1032              	.LVL89:
 111:Src/main.c    **** 
 1033              		.loc 1 111 0
 1034 0008 FFF7FEFF 		bl	SystemClock_Config
 1035              	.LVL90:
 118:Src/main.c    ****   MX_USART3_UART_Init();
 1036              		.loc 1 118 0
 1037 000c FFF7FEFF 		bl	MX_GPIO_Init
 1038              	.LVL91:
 119:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1039              		.loc 1 119 0
 1040 0010 FFF7FEFF 		bl	MX_USART3_UART_Init
 1041              	.LVL92:
 138:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 1042              		.loc 1 138 0
 1043 0014 01AC     		add	r4, sp, #4
 1044 0016 074D     		ldr	r5, .L62
 1045 0018 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1046 001a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1047 001c 2B68     		ldr	r3, [r5]
 1048 001e 2360     		str	r3, [r4]
 139:Src/main.c    **** 
 1049              		.loc 1 139 0
 1050 0020 0021     		movs	r1, #0
 1051 0022 01A8     		add	r0, sp, #4
 1052 0024 FFF7FEFF 		bl	osThreadCreate
 1053              	.LVL93:
 1054 0028 034B     		ldr	r3, .L62+4
 1055 002a 1860     		str	r0, [r3]
 151:Src/main.c    ****   
 1056              		.loc 1 151 0
 1057 002c FFF7FEFF 		bl	osKernelStart
 1058              	.LVL94:
 1059              	.L60:
 1060 0030 FEE7     		b	.L60
 1061              	.L63:
 1062 0032 00BF     		.align	2
 1063              	.L62:
 1064 0034 00000000 		.word	.LANCHOR0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 29


 1065 0038 00000000 		.word	defaultTaskHandle
 1066              		.cfi_endproc
 1067              	.LFE150:
 1069              		.comm	defaultTaskHandle,4,4
 1070              		.comm	huart3,64,4
 1071              		.section	.rodata
 1072              		.align	2
 1073              		.set	.LANCHOR0,. + 0
 1074              	.LC18:
 1075 0000 00000000 		.word	.LC0
 1076 0004 00000000 		.word	StartDefaultTask
 1077 0008 0000     		.short	0
 1078 000a 0000     		.space	2
 1079 000c 00000000 		.word	0
 1080 0010 00040000 		.word	1024
 1081              		.section	.rodata.MX_USART3_UART_Init.str1.4,"aMS",%progbits,1
 1082              		.align	2
 1083              	.LC17:
 1084 0000 5372632F 		.ascii	"Src/main.c\000"
 1084      6D61696E 
 1084      2E6300
 1085              		.section	.rodata.StartDefaultTask.str1.4,"aMS",%progbits,1
 1086              		.align	2
 1087              	.LC2:
 1088 0000 0A0A0A2D 		.ascii	"\012\012\012-----------------------START-----------"
 1088      2D2D2D2D 
 1088      2D2D2D2D 
 1088      2D2D2D2D 
 1088      2D2D2D2D 
 1089 002a 2D2D2D2D 		.ascii	"--------------\012\000"
 1089      2D2D2D2D 
 1089      2D2D2D2D 
 1089      2D2D0A00 
 1090 003a 0000     		.space	2
 1091              	.LC3:
 1092 003c 0A0A0A2D 		.ascii	"\012\012\012---------------------JTAG-SCAN---------"
 1092      2D2D2D2D 
 1092      2D2D2D2D 
 1092      2D2D2D2D 
 1092      2D2D2D2D 
 1093 0066 2D2D2D2D 		.ascii	"--------------\012\000"
 1093      2D2D2D2D 
 1093      2D2D2D2D 
 1093      2D2D0A00 
 1094 0076 0000     		.space	2
 1095              	.LC4:
 1096 0078 0A0A0A2D 		.ascii	"\012\012\012---------------------START-USB---------"
 1096      2D2D2D2D 
 1096      2D2D2D2D 
 1096      2D2D2D2D 
 1096      2D2D2D2D 
 1097 00a2 2D2D2D2D 		.ascii	"--------------\012\000"
 1097      2D2D2D2D 
 1097      2D2D2D2D 
 1097      2D2D0A00 
 1098 00b2 0000     		.space	2
 1099              	.LC5:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 30


 1100 00b4 0A0A0A2D 		.ascii	"\012\012\012-------------------PARSE--CONFIG-------"
 1100      2D2D2D2D 
 1100      2D2D2D2D 
 1100      2D2D2D2D 
 1100      2D2D2D2D 
 1101 00de 2D2D2D2D 		.ascii	"--------------\012\000"
 1101      2D2D2D2D 
 1101      2D2D2D2D 
 1101      2D2D0A00 
 1102 00ee 0000     		.space	2
 1103              	.LC6:
 1104 00f0 0A0A0A2D 		.ascii	"\012\012\012----------------------WAKAAMA----------"
 1104      2D2D2D2D 
 1104      2D2D2D2D 
 1104      2D2D2D2D 
 1104      2D2D2D2D 
 1105 011a 2D2D2D2D 		.ascii	"--------------\012\000"
 1105      2D2D2D2D 
 1105      2D2D2D2D 
 1105      2D2D0A00 
 1106 012a 0000     		.space	2
 1107              	.LC7:
 1108 012c 53746172 		.ascii	"Start wakaama task\015\000"
 1108      74207761 
 1108      6B61616D 
 1108      61207461 
 1108      736B0D00 
 1109              	.LC8:
 1110 0140 77616B61 		.ascii	"wakaama\000"
 1110      616D6100 
 1111              	.LC9:
 1112 0148 0D0A6572 		.ascii	"\015\012error creating taskWakaama: %d\012\000"
 1112      726F7220 
 1112      63726561 
 1112      74696E67 
 1112      20746173 
 1113 016a 0000     		.space	2
 1114              	.LC10:
 1115 016c 4572726F 		.ascii	"Error creating socket: %d\000"
 1115      72206372 
 1115      65617469 
 1115      6E672073 
 1115      6F636B65 
 1116 0186 0000     		.space	2
 1117              	.LC11:
 1118 0188 696E206C 		.ascii	"in loop %d\012\015\000"
 1118      6F6F7020 
 1118      25640A0D 
 1118      00
 1119 0195 000000   		.space	3
 1120              	.LC12:
 1121 0198 242000   		.ascii	"$ \000"
 1122 019b 00       		.space	1
 1123              	.LC13:
 1124 019c 74656D70 		.ascii	"temp\000"
 1124      00
 1125 01a1 000000   		.space	3
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 31


 1126              	.LC14:
 1127 01a4 61736400 		.ascii	"asd\000"
 1128              	.LC15:
 1129 01a8 7265642E 		.ascii	"red.bin\000"
 1129      62696E00 
 1130              	.LC16:
 1131 01b0 626C7565 		.ascii	"blue.bin\000"
 1131      2E62696E 
 1131      00
 1132              		.section	.rodata.str1.4,"aMS",%progbits,1
 1133              		.align	2
 1134              	.LC0:
 1135 0000 64656661 		.ascii	"defaultTask\000"
 1135      756C7454 
 1135      61736B00 
 1136              		.text
 1137              	.Letext0:
 1138              		.file 3 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_defau
 1139              		.file 4 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1140              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 1141              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1142              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 1143              		.file 8 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/
 1144              		.file 9 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 1145              		.file 10 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 1146              		.file 11 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 1147              		.file 12 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_timeval.
 1148              		.file 13 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/types.h"
 1149              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1150              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1151              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1152              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1153              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1154              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_eth.h"
 1155              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1156              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1157              		.file 22 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 1158              		.file 23 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1159              		.file 24 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1160              		.file 25 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 1161              		.file 26 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1162              		.file 27 "Middlewares/Third_Party/FatFs/src/integer.h"
 1163              		.file 28 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/stdlib.h"
 1164              		.file 29 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 1165              		.file 30 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 1166              		.file 31 "Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc/usbh_msc.h"
 1167              		.file 32 "Middlewares/Third_Party/FatFs/src/ff.h"
 1168              		.file 33 "Middlewares/Third_Party/FatFs/src/diskio.h"
 1169              		.file 34 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 1170              		.file 35 "Inc/usbh_diskio.h"
 1171              		.file 36 "Inc/fatfs.h"
 1172              		.file 37 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/time.h"
 1173              		.file 38 "Middlewares/Third_Party/LwIP/src/include/lwip/arch.h"
 1174              		.file 39 "Middlewares/Third_Party/LwIP/src/include/lwip/priv/memp_priv.h"
 1175              		.file 40 "Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
 1176              		.file 41 "Middlewares/Third_Party/LwIP/src/include/lwip/err.h"
 1177              		.file 42 "Middlewares/Third_Party/LwIP/src/include/lwip/pbuf.h"
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 32


 1178              		.file 43 "Middlewares/Third_Party/LwIP/src/include/lwip/ip4_addr.h"
 1179              		.file 44 "Middlewares/Third_Party/LwIP/src/include/lwip/ip_addr.h"
 1180              		.file 45 "Middlewares/Third_Party/LwIP/src/include/lwip/netif.h"
 1181              		.file 46 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ip4.h"
 1182              		.file 47 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ethernet.h"
 1183              		.file 48 "Middlewares/Third_Party/LwIP/src/include/netif/ethernet.h"
 1184              		.file 49 "Middlewares/Third_Party/LwIP/src/include/lwip/ip.h"
 1185              		.file 50 "Middlewares/Third_Party/LwIP/src/include/lwip/udp.h"
 1186              		.file 51 "Middlewares/Third_Party/LwIP/system/arch/sys_arch.h"
 1187              		.file 52 "Middlewares/Third_Party/LwIP/src/include/lwip/timeouts.h"
 1188              		.file 53 "Middlewares/Third_Party/LwIP/src/include/lwip/tcpip.h"
 1189              		.file 54 "Inc/lwip.h"
 1190              		.file 55 "Middlewares/Third_Party/LwIP/src/include/lwip/inet.h"
 1191              		.file 56 "Middlewares/Third_Party/LwIP/src/include/lwip/errno.h"
 1192              		.file 57 "Middlewares/Third_Party/LwIP/src/include/lwip/sockets.h"
 1193              		.file 58 "Middlewares/Third_Party/LwIP/src/include/lwip/netdb.h"
 1194              		.file 59 "Middlewares/Third_Party/wakaama/liblwm2m.h"
 1195              		.file 60 "Inc/communication/wakaama_client/connection.h"
 1196              		.file 61 "Inc/communication/wakaama_client/wakaama.h"
 1197              		.file 62 "Inc/target.h"
 1198              		.file 63 "Inc/communication/wakaama_client/objects/object_target.h"
 1199              		.file 64 "Inc/config_parser.h"
 1200              		.file 65 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1201              		.file 66 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/stdio.h"
 1202              		.file 67 "Inc/usb_host.h"
 1203              		.file 68 "Inc/jtag/jtag_scan.h"
 1204              		.file 69 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1205              		.file 70 "<built-in>"
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:18     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:208    .text.MX_GPIO_Init:0000000000000110 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:216    .text.BlinkGreen:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:223    .text.BlinkGreen:0000000000000000 BlinkGreen
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:261    .text.BlinkGreen:000000000000002c $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:266    .text.BlinkRed:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:273    .text.BlinkRed:0000000000000000 BlinkRed
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:310    .text.BlinkRed:0000000000000030 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:315    .text.BlinkBlue:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:322    .text.BlinkBlue:0000000000000000 BlinkBlue
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:359    .text.BlinkBlue:000000000000002c $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:364    .text.StartDefaultTask:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:371    .text.StartDefaultTask:0000000000000000 StartDefaultTask
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:591    .text.StartDefaultTask:0000000000000128 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:613    .text.StartDefaultTask:0000000000000180 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:645    .text.StartDefaultTask:00000000000001ac $d
                            *COM*:0000000000000040 huart3
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:671    .text.__io_putchar:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:678    .text.__io_putchar:0000000000000000 __io_putchar
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:733    .text.__io_putchar:0000000000000030 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:738    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:745    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:776    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:781    .text._Error_Handler:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:788    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:803    .text.MX_USART3_UART_Init:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:809    .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:857    .text.MX_USART3_UART_Init:0000000000000030 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:864    .text.SystemClock_Config:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:871    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:1001   .text.SystemClock_Config:00000000000000bc $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:1009   .text.main:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:1016   .text.main:0000000000000000 main
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:1064   .text.main:0000000000000034 $d
                            *COM*:0000000000000004 defaultTaskHandle
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:1072   .rodata:0000000000000000 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:1082   .rodata.MX_USART3_UART_Init.str1.4:0000000000000000 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:1086   .rodata.StartDefaultTask.str1.4:0000000000000000 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s:1133   .rodata.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
osDelay
MX_LWIP_Init
MX_USB_HOST_Init
MX_FATFS_Init
puts
jtag_scan
parse_config
createUDPSocket
xTaskCreate
debug_init
printf
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccFqlE7Z.s 			page 34


get_usb_ready
usb_ls
usb_write
usb_open_file
usb_close_file
fflush
get_line
configuration
taskWakaama
target_list
_impure_ptr
HAL_UART_Transmit
HAL_IncTick
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
osThreadCreate
osKernelStart

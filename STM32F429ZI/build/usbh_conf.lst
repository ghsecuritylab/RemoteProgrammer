ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbh_conf.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_HCD_MspInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_HCD_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_HCD_MspInit:
  26              	.LFB131:
  27              		.file 1 "Src/usbh_conf.c"
   1:Src/usbh_conf.c **** /**
   2:Src/usbh_conf.c ****   ******************************************************************************
   3:Src/usbh_conf.c ****   * @file           : usbh_conf.c
   4:Src/usbh_conf.c ****   * @version        : v1.0_Cube
   5:Src/usbh_conf.c ****   * @brief          : This file implements the board support package for the USB host library
   6:Src/usbh_conf.c ****   ******************************************************************************
   7:Src/usbh_conf.c ****   * This notice applies to any and all portions of this file
   8:Src/usbh_conf.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usbh_conf.c ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usbh_conf.c ****   * inserted by the user or by software development tools
  11:Src/usbh_conf.c ****   * are owned by their respective copyright owners.
  12:Src/usbh_conf.c ****   *
  13:Src/usbh_conf.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/usbh_conf.c ****   * All rights reserved.
  15:Src/usbh_conf.c ****   *
  16:Src/usbh_conf.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/usbh_conf.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/usbh_conf.c ****   *
  19:Src/usbh_conf.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/usbh_conf.c ****   *    this list of conditions and the following disclaimer.
  21:Src/usbh_conf.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/usbh_conf.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/usbh_conf.c ****   *    and/or other materials provided with the distribution.
  24:Src/usbh_conf.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/usbh_conf.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/usbh_conf.c ****   *    derived from this software without specific written permission.
  27:Src/usbh_conf.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/usbh_conf.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/usbh_conf.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/usbh_conf.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/usbh_conf.c ****   *    this license is void and will automatically terminate your rights under 
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 2


  32:Src/usbh_conf.c ****   *    this license. 
  33:Src/usbh_conf.c ****   *
  34:Src/usbh_conf.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/usbh_conf.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/usbh_conf.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/usbh_conf.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/usbh_conf.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/usbh_conf.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/usbh_conf.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/usbh_conf.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/usbh_conf.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/usbh_conf.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/usbh_conf.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/usbh_conf.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/usbh_conf.c ****   *
  47:Src/usbh_conf.c ****   ******************************************************************************
  48:Src/usbh_conf.c ****   */
  49:Src/usbh_conf.c **** 
  50:Src/usbh_conf.c **** /* Includes ------------------------------------------------------------------*/
  51:Src/usbh_conf.c **** #include "usbh_core.h"
  52:Src/usbh_conf.c **** 
  53:Src/usbh_conf.c **** /* USER CODE BEGIN Includes */
  54:Src/usbh_conf.c **** 
  55:Src/usbh_conf.c **** /* USER CODE END Includes */
  56:Src/usbh_conf.c **** 
  57:Src/usbh_conf.c **** /* Private typedef -----------------------------------------------------------*/
  58:Src/usbh_conf.c **** /* Private define ------------------------------------------------------------*/
  59:Src/usbh_conf.c **** /* Private macro -------------------------------------------------------------*/
  60:Src/usbh_conf.c **** 
  61:Src/usbh_conf.c **** /* USER CODE BEGIN PV */
  62:Src/usbh_conf.c **** /* Private variables ---------------------------------------------------------*/
  63:Src/usbh_conf.c **** 
  64:Src/usbh_conf.c **** /* USER CODE END PV */
  65:Src/usbh_conf.c **** 
  66:Src/usbh_conf.c ****                 HCD_HandleTypeDef hhcd_USB_OTG_FS;
  67:Src/usbh_conf.c **** void _Error_Handler(char * file, int line);
  68:Src/usbh_conf.c **** 
  69:Src/usbh_conf.c **** /* USER CODE BEGIN 0 */
  70:Src/usbh_conf.c **** 
  71:Src/usbh_conf.c **** /* USER CODE END 0 */
  72:Src/usbh_conf.c **** 
  73:Src/usbh_conf.c **** /* USER CODE BEGIN PFP */
  74:Src/usbh_conf.c **** /* Private function prototypes -----------------------------------------------*/
  75:Src/usbh_conf.c **** 
  76:Src/usbh_conf.c **** /* USER CODE END PFP */
  77:Src/usbh_conf.c **** 
  78:Src/usbh_conf.c **** /* Private functions ---------------------------------------------------------*/
  79:Src/usbh_conf.c **** 
  80:Src/usbh_conf.c **** /* USER CODE BEGIN 1 */
  81:Src/usbh_conf.c **** 
  82:Src/usbh_conf.c **** /* USER CODE END 1 */
  83:Src/usbh_conf.c **** 
  84:Src/usbh_conf.c **** /*******************************************************************************
  85:Src/usbh_conf.c ****                        LL Driver Callbacks (HCD -> USB Host Library)
  86:Src/usbh_conf.c **** *******************************************************************************/
  87:Src/usbh_conf.c **** /* MSP Init */
  88:Src/usbh_conf.c **** 
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 3


  89:Src/usbh_conf.c **** void HAL_HCD_MspInit(HCD_HandleTypeDef* hcdHandle)
  90:Src/usbh_conf.c **** {
  28              		.loc 1 90 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  91:Src/usbh_conf.c ****   GPIO_InitTypeDef GPIO_InitStruct;
  92:Src/usbh_conf.c ****   if(hcdHandle->Instance==USB_OTG_FS)
  33              		.loc 1 92 0
  34 0000 0368     		ldr	r3, [r0]
  35 0002 B3F1A04F 		cmp	r3, #1342177280
  36 0006 00D0     		beq	.L7
  37 0008 7047     		bx	lr
  38              	.L7:
  90:Src/usbh_conf.c ****   GPIO_InitTypeDef GPIO_InitStruct;
  39              		.loc 1 90 0
  40 000a 10B5     		push	{r4, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 4, -8
  44              		.cfi_offset 14, -4
  45 000c 86B0     		sub	sp, sp, #24
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 32
  93:Src/usbh_conf.c ****   {
  94:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspInit 0 */
  95:Src/usbh_conf.c **** 
  96:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspInit 0 */
  97:Src/usbh_conf.c ****   
  98:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration    
  99:Src/usbh_conf.c ****     PA11     ------> USB_OTG_FS_DM
 100:Src/usbh_conf.c ****     PA12     ------> USB_OTG_FS_DP 
 101:Src/usbh_conf.c ****     */
 102:Src/usbh_conf.c ****     GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
  48              		.loc 1 102 0
  49 000e 4FF4C053 		mov	r3, #6144
  50 0012 0193     		str	r3, [sp, #4]
 103:Src/usbh_conf.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  51              		.loc 1 103 0
  52 0014 0223     		movs	r3, #2
  53 0016 0293     		str	r3, [sp, #8]
 104:Src/usbh_conf.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  54              		.loc 1 104 0
  55 0018 0024     		movs	r4, #0
  56 001a 0394     		str	r4, [sp, #12]
 105:Src/usbh_conf.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  57              		.loc 1 105 0
  58 001c 0323     		movs	r3, #3
  59 001e 0493     		str	r3, [sp, #16]
 106:Src/usbh_conf.c ****     GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
  60              		.loc 1 106 0
  61 0020 0A23     		movs	r3, #10
  62 0022 0593     		str	r3, [sp, #20]
 107:Src/usbh_conf.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  63              		.loc 1 107 0
  64 0024 01A9     		add	r1, sp, #4
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 4


  65 0026 0E48     		ldr	r0, .L8
  66              	.LVL1:
  67 0028 FFF7FEFF 		bl	HAL_GPIO_Init
  68              	.LVL2:
 108:Src/usbh_conf.c **** 
 109:Src/usbh_conf.c ****     /* Peripheral clock enable */
 110:Src/usbh_conf.c ****     __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
  69              		.loc 1 110 0
  70 002c 0D4B     		ldr	r3, .L8+4
  71 002e 5A6B     		ldr	r2, [r3, #52]
  72 0030 42F08002 		orr	r2, r2, #128
  73 0034 5A63     		str	r2, [r3, #52]
  74              	.LBB2:
  75 0036 0094     		str	r4, [sp]
  76 0038 5A6C     		ldr	r2, [r3, #68]
  77 003a 42F48042 		orr	r2, r2, #16384
  78 003e 5A64     		str	r2, [r3, #68]
  79 0040 5B6C     		ldr	r3, [r3, #68]
  80 0042 03F48043 		and	r3, r3, #16384
  81 0046 0093     		str	r3, [sp]
  82 0048 009B     		ldr	r3, [sp]
  83              	.LBE2:
 111:Src/usbh_conf.c **** 
 112:Src/usbh_conf.c ****     /* Peripheral interrupt init */
 113:Src/usbh_conf.c ****     HAL_NVIC_SetPriority(OTG_FS_IRQn, 5, 0);
  84              		.loc 1 113 0
  85 004a 2246     		mov	r2, r4
  86 004c 0521     		movs	r1, #5
  87 004e 4320     		movs	r0, #67
  88 0050 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  89              	.LVL3:
 114:Src/usbh_conf.c ****     HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
  90              		.loc 1 114 0
  91 0054 4320     		movs	r0, #67
  92 0056 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  93              	.LVL4:
 115:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */
 116:Src/usbh_conf.c **** 
 117:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspInit 1 */
 118:Src/usbh_conf.c ****   }
 119:Src/usbh_conf.c **** }
  94              		.loc 1 119 0
  95 005a 06B0     		add	sp, sp, #24
  96              	.LCFI2:
  97              		.cfi_def_cfa_offset 8
  98              		@ sp needed
  99 005c 10BD     		pop	{r4, pc}
 100              	.L9:
 101 005e 00BF     		.align	2
 102              	.L8:
 103 0060 00000240 		.word	1073872896
 104 0064 00380240 		.word	1073887232
 105              		.cfi_endproc
 106              	.LFE131:
 108              		.section	.text.HAL_HCD_MspDeInit,"ax",%progbits
 109              		.align	1
 110              		.global	HAL_HCD_MspDeInit
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 5


 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv4-sp-d16
 116              	HAL_HCD_MspDeInit:
 117              	.LFB132:
 120:Src/usbh_conf.c **** 
 121:Src/usbh_conf.c **** void HAL_HCD_MspDeInit(HCD_HandleTypeDef* hcdHandle)
 122:Src/usbh_conf.c **** {
 118              		.loc 1 122 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              	.LVL5:
 123 0000 08B5     		push	{r3, lr}
 124              	.LCFI3:
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 3, -8
 127              		.cfi_offset 14, -4
 123:Src/usbh_conf.c ****   if(hcdHandle->Instance==USB_OTG_FS)
 128              		.loc 1 123 0
 129 0002 0368     		ldr	r3, [r0]
 130 0004 B3F1A04F 		cmp	r3, #1342177280
 131 0008 00D0     		beq	.L13
 132              	.LVL6:
 133              	.L10:
 124:Src/usbh_conf.c ****   {
 125:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspDeInit 0 */
 126:Src/usbh_conf.c **** 
 127:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspDeInit 0 */
 128:Src/usbh_conf.c ****     /* Peripheral clock disable */
 129:Src/usbh_conf.c ****     __HAL_RCC_USB_OTG_FS_CLK_DISABLE();
 130:Src/usbh_conf.c ****   
 131:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration    
 132:Src/usbh_conf.c ****     PA11     ------> USB_OTG_FS_DM
 133:Src/usbh_conf.c ****     PA12     ------> USB_OTG_FS_DP 
 134:Src/usbh_conf.c ****     */
 135:Src/usbh_conf.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_11|GPIO_PIN_12);
 136:Src/usbh_conf.c **** 
 137:Src/usbh_conf.c ****     /* Peripheral interrupt Deinit*/
 138:Src/usbh_conf.c ****     HAL_NVIC_DisableIRQ(OTG_FS_IRQn);
 139:Src/usbh_conf.c **** 
 140:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspDeInit 1 */
 141:Src/usbh_conf.c **** 
 142:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspDeInit 1 */
 143:Src/usbh_conf.c ****   }
 144:Src/usbh_conf.c **** }
 134              		.loc 1 144 0
 135 000a 08BD     		pop	{r3, pc}
 136              	.LVL7:
 137              	.L13:
 129:Src/usbh_conf.c ****   
 138              		.loc 1 129 0
 139 000c 064A     		ldr	r2, .L14
 140 000e 536B     		ldr	r3, [r2, #52]
 141 0010 23F08003 		bic	r3, r3, #128
 142 0014 5363     		str	r3, [r2, #52]
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 6


 135:Src/usbh_conf.c **** 
 143              		.loc 1 135 0
 144 0016 4FF4C051 		mov	r1, #6144
 145 001a 0448     		ldr	r0, .L14+4
 146              	.LVL8:
 147 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 148              	.LVL9:
 138:Src/usbh_conf.c **** 
 149              		.loc 1 138 0
 150 0020 4320     		movs	r0, #67
 151 0022 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 152              	.LVL10:
 153              		.loc 1 144 0
 154 0026 F0E7     		b	.L10
 155              	.L15:
 156              		.align	2
 157              	.L14:
 158 0028 00380240 		.word	1073887232
 159 002c 00000240 		.word	1073872896
 160              		.cfi_endproc
 161              	.LFE132:
 163              		.section	.text.HAL_HCD_SOF_Callback,"ax",%progbits
 164              		.align	1
 165              		.global	HAL_HCD_SOF_Callback
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 169              		.fpu fpv4-sp-d16
 171              	HAL_HCD_SOF_Callback:
 172              	.LFB133:
 145:Src/usbh_conf.c **** 
 146:Src/usbh_conf.c **** /**
 147:Src/usbh_conf.c ****   * @brief  SOF callback.
 148:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 149:Src/usbh_conf.c ****   * @retval None
 150:Src/usbh_conf.c ****   */
 151:Src/usbh_conf.c **** void HAL_HCD_SOF_Callback(HCD_HandleTypeDef *hhcd)
 152:Src/usbh_conf.c **** {
 173              		.loc 1 152 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              	.LVL11:
 178 0000 08B5     		push	{r3, lr}
 179              	.LCFI4:
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 3, -8
 182              		.cfi_offset 14, -4
 153:Src/usbh_conf.c ****   USBH_LL_IncTimer(hhcd->pData);
 183              		.loc 1 153 0
 184 0002 D0F89402 		ldr	r0, [r0, #660]
 185              	.LVL12:
 186 0006 FFF7FEFF 		bl	USBH_LL_IncTimer
 187              	.LVL13:
 154:Src/usbh_conf.c **** }
 188              		.loc 1 154 0
 189 000a 08BD     		pop	{r3, pc}
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 7


 190              		.cfi_endproc
 191              	.LFE133:
 193              		.section	.text.HAL_HCD_Connect_Callback,"ax",%progbits
 194              		.align	1
 195              		.global	HAL_HCD_Connect_Callback
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 199              		.fpu fpv4-sp-d16
 201              	HAL_HCD_Connect_Callback:
 202              	.LFB134:
 155:Src/usbh_conf.c **** 
 156:Src/usbh_conf.c **** /**
 157:Src/usbh_conf.c ****   * @brief  SOF callback.
 158:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 159:Src/usbh_conf.c ****   * @retval None
 160:Src/usbh_conf.c ****   */
 161:Src/usbh_conf.c **** void HAL_HCD_Connect_Callback(HCD_HandleTypeDef *hhcd)
 162:Src/usbh_conf.c **** {
 203              		.loc 1 162 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              	.LVL14:
 208 0000 08B5     		push	{r3, lr}
 209              	.LCFI5:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 3, -8
 212              		.cfi_offset 14, -4
 163:Src/usbh_conf.c ****   USBH_LL_Connect(hhcd->pData);
 213              		.loc 1 163 0
 214 0002 D0F89402 		ldr	r0, [r0, #660]
 215              	.LVL15:
 216 0006 FFF7FEFF 		bl	USBH_LL_Connect
 217              	.LVL16:
 164:Src/usbh_conf.c **** }
 218              		.loc 1 164 0
 219 000a 08BD     		pop	{r3, pc}
 220              		.cfi_endproc
 221              	.LFE134:
 223              		.section	.text.HAL_HCD_Disconnect_Callback,"ax",%progbits
 224              		.align	1
 225              		.global	HAL_HCD_Disconnect_Callback
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv4-sp-d16
 231              	HAL_HCD_Disconnect_Callback:
 232              	.LFB135:
 165:Src/usbh_conf.c **** 
 166:Src/usbh_conf.c **** /**
 167:Src/usbh_conf.c ****   * @brief  SOF callback.
 168:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 169:Src/usbh_conf.c ****   * @retval None
 170:Src/usbh_conf.c ****   */
 171:Src/usbh_conf.c **** void HAL_HCD_Disconnect_Callback(HCD_HandleTypeDef *hhcd)
 172:Src/usbh_conf.c **** {
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 8


 233              		.loc 1 172 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              	.LVL17:
 238 0000 08B5     		push	{r3, lr}
 239              	.LCFI6:
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 3, -8
 242              		.cfi_offset 14, -4
 173:Src/usbh_conf.c ****   USBH_LL_Disconnect(hhcd->pData);
 243              		.loc 1 173 0
 244 0002 D0F89402 		ldr	r0, [r0, #660]
 245              	.LVL18:
 246 0006 FFF7FEFF 		bl	USBH_LL_Disconnect
 247              	.LVL19:
 174:Src/usbh_conf.c **** }
 248              		.loc 1 174 0
 249 000a 08BD     		pop	{r3, pc}
 250              		.cfi_endproc
 251              	.LFE135:
 253              		.section	.text.HAL_HCD_HC_NotifyURBChange_Callback,"ax",%progbits
 254              		.align	1
 255              		.global	HAL_HCD_HC_NotifyURBChange_Callback
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 259              		.fpu fpv4-sp-d16
 261              	HAL_HCD_HC_NotifyURBChange_Callback:
 262              	.LFB136:
 175:Src/usbh_conf.c **** 
 176:Src/usbh_conf.c **** /**
 177:Src/usbh_conf.c ****   * @brief  Notify URB state change callback.
 178:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 179:Src/usbh_conf.c ****   * @param  chnum: channel number
 180:Src/usbh_conf.c ****   * @param  urb_state: state
 181:Src/usbh_conf.c ****   * @retval None
 182:Src/usbh_conf.c ****   */
 183:Src/usbh_conf.c **** void HAL_HCD_HC_NotifyURBChange_Callback(HCD_HandleTypeDef *hhcd, uint8_t chnum, HCD_URBStateTypeDe
 184:Src/usbh_conf.c **** {
 263              		.loc 1 184 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              	.LVL20:
 268 0000 08B5     		push	{r3, lr}
 269              	.LCFI7:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 3, -8
 272              		.cfi_offset 14, -4
 185:Src/usbh_conf.c ****   /* To be used with OS to sync URB state with the global state machine */
 186:Src/usbh_conf.c **** #if (USBH_USE_OS == 1)
 187:Src/usbh_conf.c ****   USBH_LL_NotifyURBChange(hhcd->pData);
 273              		.loc 1 187 0
 274 0002 D0F89402 		ldr	r0, [r0, #660]
 275              	.LVL21:
 276 0006 FFF7FEFF 		bl	USBH_LL_NotifyURBChange
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 9


 277              	.LVL22:
 188:Src/usbh_conf.c **** #endif
 189:Src/usbh_conf.c **** }
 278              		.loc 1 189 0
 279 000a 08BD     		pop	{r3, pc}
 280              		.cfi_endproc
 281              	.LFE136:
 283              		.section	.text.USBH_LL_Init,"ax",%progbits
 284              		.align	1
 285              		.global	USBH_LL_Init
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 289              		.fpu fpv4-sp-d16
 291              	USBH_LL_Init:
 292              	.LFB137:
 190:Src/usbh_conf.c **** 
 191:Src/usbh_conf.c **** /*******************************************************************************
 192:Src/usbh_conf.c ****                        LL Driver Interface (USB Host Library --> HCD)
 193:Src/usbh_conf.c **** *******************************************************************************/
 194:Src/usbh_conf.c **** 
 195:Src/usbh_conf.c **** /**
 196:Src/usbh_conf.c ****   * @brief  Initialize the low level portion of the host driver.
 197:Src/usbh_conf.c ****   * @param  phost: Host handle
 198:Src/usbh_conf.c ****   * @retval USBH status
 199:Src/usbh_conf.c ****   */
 200:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_Init(USBH_HandleTypeDef *phost)
 201:Src/usbh_conf.c **** {
 293              		.loc 1 201 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297              	.LVL23:
 202:Src/usbh_conf.c ****   /* Init USB_IP */
 203:Src/usbh_conf.c ****   if (phost->id == HOST_FS) {
 298              		.loc 1 203 0
 299 0000 90F8BC33 		ldrb	r3, [r0, #956]	@ zero_extendqisi2
 300 0004 012B     		cmp	r3, #1
 301 0006 01D0     		beq	.L31
 204:Src/usbh_conf.c ****   /* Link the driver to the stack. */
 205:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.pData = phost;
 206:Src/usbh_conf.c ****   phost->pData = &hhcd_USB_OTG_FS;
 207:Src/usbh_conf.c **** 
 208:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Instance = USB_OTG_FS;
 209:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Host_channels = 8;
 210:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.speed = HCD_SPEED_FULL;
 211:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 212:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.phy_itface = HCD_PHY_EMBEDDED;
 213:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 214:Src/usbh_conf.c ****   if (HAL_HCD_Init(&hhcd_USB_OTG_FS) != HAL_OK)
 215:Src/usbh_conf.c ****   {
 216:Src/usbh_conf.c ****     _Error_Handler(__FILE__, __LINE__);
 217:Src/usbh_conf.c ****   }
 218:Src/usbh_conf.c **** 
 219:Src/usbh_conf.c ****   USBH_LL_SetTimer(phost, HAL_HCD_GetCurrentFrame(&hhcd_USB_OTG_FS));
 220:Src/usbh_conf.c ****   }
 221:Src/usbh_conf.c ****   return USBH_OK;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 10


 222:Src/usbh_conf.c **** }
 302              		.loc 1 222 0
 303 0008 0020     		movs	r0, #0
 304              	.LVL24:
 305 000a 7047     		bx	lr
 306              	.LVL25:
 307              	.L31:
 201:Src/usbh_conf.c ****   /* Init USB_IP */
 308              		.loc 1 201 0
 309 000c 10B5     		push	{r4, lr}
 310              	.LCFI8:
 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 4, -8
 313              		.cfi_offset 14, -4
 314 000e 0446     		mov	r4, r0
 205:Src/usbh_conf.c ****   phost->pData = &hhcd_USB_OTG_FS;
 315              		.loc 1 205 0
 316 0010 1048     		ldr	r0, .L33
 317              	.LVL26:
 318 0012 C0F89442 		str	r4, [r0, #660]
 206:Src/usbh_conf.c **** 
 319              		.loc 1 206 0
 320 0016 C4F8C003 		str	r0, [r4, #960]
 208:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Host_channels = 8;
 321              		.loc 1 208 0
 322 001a 4FF0A043 		mov	r3, #1342177280
 323 001e 0360     		str	r3, [r0]
 209:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.speed = HCD_SPEED_FULL;
 324              		.loc 1 209 0
 325 0020 0823     		movs	r3, #8
 326 0022 8360     		str	r3, [r0, #8]
 210:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 327              		.loc 1 210 0
 328 0024 0323     		movs	r3, #3
 329 0026 C360     		str	r3, [r0, #12]
 211:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.phy_itface = HCD_PHY_EMBEDDED;
 330              		.loc 1 211 0
 331 0028 0023     		movs	r3, #0
 332 002a 0361     		str	r3, [r0, #16]
 212:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 333              		.loc 1 212 0
 334 002c 0222     		movs	r2, #2
 335 002e 8261     		str	r2, [r0, #24]
 213:Src/usbh_conf.c ****   if (HAL_HCD_Init(&hhcd_USB_OTG_FS) != HAL_OK)
 336              		.loc 1 213 0
 337 0030 C361     		str	r3, [r0, #28]
 214:Src/usbh_conf.c ****   {
 338              		.loc 1 214 0
 339 0032 FFF7FEFF 		bl	HAL_HCD_Init
 340              	.LVL27:
 341 0036 40B9     		cbnz	r0, .L32
 342              	.L26:
 219:Src/usbh_conf.c ****   }
 343              		.loc 1 219 0
 344 0038 0648     		ldr	r0, .L33
 345 003a FFF7FEFF 		bl	HAL_HCD_GetCurrentFrame
 346              	.LVL28:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 11


 347 003e 0146     		mov	r1, r0
 348 0040 2046     		mov	r0, r4
 349 0042 FFF7FEFF 		bl	USBH_LL_SetTimer
 350              	.LVL29:
 351              		.loc 1 222 0
 352 0046 0020     		movs	r0, #0
 353 0048 10BD     		pop	{r4, pc}
 354              	.LVL30:
 355              	.L32:
 216:Src/usbh_conf.c ****   }
 356              		.loc 1 216 0
 357 004a D821     		movs	r1, #216
 358 004c 0248     		ldr	r0, .L33+4
 359 004e FFF7FEFF 		bl	_Error_Handler
 360              	.LVL31:
 361 0052 F1E7     		b	.L26
 362              	.L34:
 363              		.align	2
 364              	.L33:
 365 0054 00000000 		.word	hhcd_USB_OTG_FS
 366 0058 00000000 		.word	.LC0
 367              		.cfi_endproc
 368              	.LFE137:
 370              		.section	.text.USBH_LL_DeInit,"ax",%progbits
 371              		.align	1
 372              		.global	USBH_LL_DeInit
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 376              		.fpu fpv4-sp-d16
 378              	USBH_LL_DeInit:
 379              	.LFB138:
 223:Src/usbh_conf.c **** 
 224:Src/usbh_conf.c **** /**
 225:Src/usbh_conf.c ****   * @brief  De-Initialize the low level portion of the host driver.
 226:Src/usbh_conf.c ****   * @param  phost: Host handle
 227:Src/usbh_conf.c ****   * @retval USBH status
 228:Src/usbh_conf.c ****   */
 229:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_DeInit(USBH_HandleTypeDef *phost)
 230:Src/usbh_conf.c **** {
 380              		.loc 1 230 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              	.LVL32:
 385 0000 08B5     		push	{r3, lr}
 386              	.LCFI9:
 387              		.cfi_def_cfa_offset 8
 388              		.cfi_offset 3, -8
 389              		.cfi_offset 14, -4
 390              	.LVL33:
 231:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 232:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 233:Src/usbh_conf.c **** 
 234:Src/usbh_conf.c ****   hal_status = HAL_HCD_DeInit(phost->pData);
 391              		.loc 1 234 0
 392 0002 D0F8C003 		ldr	r0, [r0, #960]
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 12


 393              	.LVL34:
 394 0006 FFF7FEFF 		bl	HAL_HCD_DeInit
 395              	.LVL35:
 235:Src/usbh_conf.c **** 
 236:Src/usbh_conf.c ****   switch (hal_status) {
 396              		.loc 1 236 0
 397 000a 18B1     		cbz	r0, .L37
 398 000c 0228     		cmp	r0, #2
 399 000e 03D0     		beq	.L38
 237:Src/usbh_conf.c ****     case HAL_OK :
 238:Src/usbh_conf.c ****       usb_status = USBH_OK;
 239:Src/usbh_conf.c ****     break;
 240:Src/usbh_conf.c ****     case HAL_ERROR :
 241:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 400              		.loc 1 241 0
 401 0010 0220     		movs	r0, #2
 402              	.LVL36:
 403              	.L36:
 242:Src/usbh_conf.c ****     break;
 243:Src/usbh_conf.c ****     case HAL_BUSY :
 244:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 245:Src/usbh_conf.c ****     break;
 246:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 247:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 248:Src/usbh_conf.c ****     break;
 249:Src/usbh_conf.c ****     default :
 250:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 251:Src/usbh_conf.c ****     break;
 252:Src/usbh_conf.c ****   }
 253:Src/usbh_conf.c ****   return usb_status;
 254:Src/usbh_conf.c **** }
 404              		.loc 1 254 0
 405 0012 08BD     		pop	{r3, pc}
 406              	.LVL37:
 407              	.L37:
 238:Src/usbh_conf.c ****     break;
 408              		.loc 1 238 0
 409 0014 0020     		movs	r0, #0
 410              	.LVL38:
 411 0016 FCE7     		b	.L36
 412              	.LVL39:
 413              	.L38:
 244:Src/usbh_conf.c ****     break;
 414              		.loc 1 244 0
 415 0018 0120     		movs	r0, #1
 416              	.LVL40:
 245:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 417              		.loc 1 245 0
 418 001a FAE7     		b	.L36
 419              		.cfi_endproc
 420              	.LFE138:
 422              		.section	.text.USBH_LL_Start,"ax",%progbits
 423              		.align	1
 424              		.global	USBH_LL_Start
 425              		.syntax unified
 426              		.thumb
 427              		.thumb_func
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 13


 428              		.fpu fpv4-sp-d16
 430              	USBH_LL_Start:
 431              	.LFB139:
 255:Src/usbh_conf.c **** 
 256:Src/usbh_conf.c **** /**
 257:Src/usbh_conf.c ****   * @brief  Start the low level portion of the host driver.
 258:Src/usbh_conf.c ****   * @param  phost: Host handle
 259:Src/usbh_conf.c ****   * @retval USBH status
 260:Src/usbh_conf.c ****   */
 261:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_Start(USBH_HandleTypeDef *phost)
 262:Src/usbh_conf.c **** {
 432              		.loc 1 262 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              	.LVL41:
 437 0000 08B5     		push	{r3, lr}
 438              	.LCFI10:
 439              		.cfi_def_cfa_offset 8
 440              		.cfi_offset 3, -8
 441              		.cfi_offset 14, -4
 442              	.LVL42:
 263:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 264:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 265:Src/usbh_conf.c **** 
 266:Src/usbh_conf.c ****   hal_status = HAL_HCD_Start(phost->pData);
 443              		.loc 1 266 0
 444 0002 D0F8C003 		ldr	r0, [r0, #960]
 445              	.LVL43:
 446 0006 FFF7FEFF 		bl	HAL_HCD_Start
 447              	.LVL44:
 267:Src/usbh_conf.c **** 
 268:Src/usbh_conf.c ****   switch (hal_status) {
 448              		.loc 1 268 0
 449 000a 18B1     		cbz	r0, .L44
 450 000c 0228     		cmp	r0, #2
 451 000e 03D0     		beq	.L45
 269:Src/usbh_conf.c ****     case HAL_OK :
 270:Src/usbh_conf.c ****       usb_status = USBH_OK;
 271:Src/usbh_conf.c ****     break;
 272:Src/usbh_conf.c ****     case HAL_ERROR :
 273:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 452              		.loc 1 273 0
 453 0010 0220     		movs	r0, #2
 454              	.LVL45:
 455              	.L43:
 274:Src/usbh_conf.c ****     break;
 275:Src/usbh_conf.c ****     case HAL_BUSY :
 276:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 277:Src/usbh_conf.c ****     break;
 278:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 279:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 280:Src/usbh_conf.c ****     break;
 281:Src/usbh_conf.c ****     default :
 282:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 283:Src/usbh_conf.c ****     break;
 284:Src/usbh_conf.c ****   }
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 14


 285:Src/usbh_conf.c ****   return usb_status;
 286:Src/usbh_conf.c **** }
 456              		.loc 1 286 0
 457 0012 08BD     		pop	{r3, pc}
 458              	.LVL46:
 459              	.L44:
 270:Src/usbh_conf.c ****     break;
 460              		.loc 1 270 0
 461 0014 0020     		movs	r0, #0
 462              	.LVL47:
 463 0016 FCE7     		b	.L43
 464              	.LVL48:
 465              	.L45:
 276:Src/usbh_conf.c ****     break;
 466              		.loc 1 276 0
 467 0018 0120     		movs	r0, #1
 468              	.LVL49:
 277:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 469              		.loc 1 277 0
 470 001a FAE7     		b	.L43
 471              		.cfi_endproc
 472              	.LFE139:
 474              		.section	.text.USBH_LL_Stop,"ax",%progbits
 475              		.align	1
 476              		.global	USBH_LL_Stop
 477              		.syntax unified
 478              		.thumb
 479              		.thumb_func
 480              		.fpu fpv4-sp-d16
 482              	USBH_LL_Stop:
 483              	.LFB140:
 287:Src/usbh_conf.c **** 
 288:Src/usbh_conf.c **** /**
 289:Src/usbh_conf.c ****   * @brief  Stop the low level portion of the host driver.
 290:Src/usbh_conf.c ****   * @param  phost: Host handle
 291:Src/usbh_conf.c ****   * @retval USBH status
 292:Src/usbh_conf.c ****   */
 293:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_Stop(USBH_HandleTypeDef *phost)
 294:Src/usbh_conf.c **** {
 484              		.loc 1 294 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488              	.LVL50:
 489 0000 08B5     		push	{r3, lr}
 490              	.LCFI11:
 491              		.cfi_def_cfa_offset 8
 492              		.cfi_offset 3, -8
 493              		.cfi_offset 14, -4
 494              	.LVL51:
 295:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 296:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 297:Src/usbh_conf.c **** 
 298:Src/usbh_conf.c ****   hal_status = HAL_HCD_Stop(phost->pData);
 495              		.loc 1 298 0
 496 0002 D0F8C003 		ldr	r0, [r0, #960]
 497              	.LVL52:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 15


 498 0006 FFF7FEFF 		bl	HAL_HCD_Stop
 499              	.LVL53:
 299:Src/usbh_conf.c **** 
 300:Src/usbh_conf.c ****   switch (hal_status) {
 500              		.loc 1 300 0
 501 000a 18B1     		cbz	r0, .L51
 502 000c 0228     		cmp	r0, #2
 503 000e 03D0     		beq	.L52
 301:Src/usbh_conf.c ****     case HAL_OK :
 302:Src/usbh_conf.c ****       usb_status = USBH_OK;
 303:Src/usbh_conf.c ****     break;
 304:Src/usbh_conf.c ****     case HAL_ERROR :
 305:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 504              		.loc 1 305 0
 505 0010 0220     		movs	r0, #2
 506              	.LVL54:
 507              	.L50:
 306:Src/usbh_conf.c ****     break;
 307:Src/usbh_conf.c ****     case HAL_BUSY :
 308:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 309:Src/usbh_conf.c ****     break;
 310:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 311:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 312:Src/usbh_conf.c ****     break;
 313:Src/usbh_conf.c ****     default :
 314:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 315:Src/usbh_conf.c ****     break;
 316:Src/usbh_conf.c ****   }
 317:Src/usbh_conf.c ****   return usb_status;
 318:Src/usbh_conf.c **** }
 508              		.loc 1 318 0
 509 0012 08BD     		pop	{r3, pc}
 510              	.LVL55:
 511              	.L51:
 302:Src/usbh_conf.c ****     break;
 512              		.loc 1 302 0
 513 0014 0020     		movs	r0, #0
 514              	.LVL56:
 515 0016 FCE7     		b	.L50
 516              	.LVL57:
 517              	.L52:
 308:Src/usbh_conf.c ****     break;
 518              		.loc 1 308 0
 519 0018 0120     		movs	r0, #1
 520              	.LVL58:
 309:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 521              		.loc 1 309 0
 522 001a FAE7     		b	.L50
 523              		.cfi_endproc
 524              	.LFE140:
 526              		.section	.text.USBH_LL_GetSpeed,"ax",%progbits
 527              		.align	1
 528              		.global	USBH_LL_GetSpeed
 529              		.syntax unified
 530              		.thumb
 531              		.thumb_func
 532              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 16


 534              	USBH_LL_GetSpeed:
 535              	.LFB141:
 319:Src/usbh_conf.c **** 
 320:Src/usbh_conf.c **** /**
 321:Src/usbh_conf.c ****   * @brief  Return the USB host speed from the low level driver.
 322:Src/usbh_conf.c ****   * @param  phost: Host handle
 323:Src/usbh_conf.c ****   * @retval USBH speeds
 324:Src/usbh_conf.c ****   */
 325:Src/usbh_conf.c **** USBH_SpeedTypeDef USBH_LL_GetSpeed(USBH_HandleTypeDef *phost)
 326:Src/usbh_conf.c **** {
 536              		.loc 1 326 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540              	.LVL59:
 541 0000 08B5     		push	{r3, lr}
 542              	.LCFI12:
 543              		.cfi_def_cfa_offset 8
 544              		.cfi_offset 3, -8
 545              		.cfi_offset 14, -4
 546              	.LVL60:
 327:Src/usbh_conf.c ****   USBH_SpeedTypeDef speed = USBH_SPEED_FULL;
 328:Src/usbh_conf.c **** 
 329:Src/usbh_conf.c ****   switch (HAL_HCD_GetCurrentSpeed(phost->pData))
 547              		.loc 1 329 0
 548 0002 D0F8C003 		ldr	r0, [r0, #960]
 549              	.LVL61:
 550 0006 FFF7FEFF 		bl	HAL_HCD_GetCurrentSpeed
 551              	.LVL62:
 552 000a 18B1     		cbz	r0, .L58
 553 000c 0228     		cmp	r0, #2
 554 000e 03D0     		beq	.L59
 330:Src/usbh_conf.c ****   {
 331:Src/usbh_conf.c ****   case 0 :
 332:Src/usbh_conf.c ****     speed = USBH_SPEED_HIGH;
 333:Src/usbh_conf.c ****     break;
 334:Src/usbh_conf.c **** 
 335:Src/usbh_conf.c ****   case 1 :
 336:Src/usbh_conf.c ****     speed = USBH_SPEED_FULL;
 555              		.loc 1 336 0
 556 0010 0120     		movs	r0, #1
 557              	.LVL63:
 558              	.L57:
 337:Src/usbh_conf.c ****     break;
 338:Src/usbh_conf.c **** 
 339:Src/usbh_conf.c ****   case 2 :
 340:Src/usbh_conf.c ****     speed = USBH_SPEED_LOW;
 341:Src/usbh_conf.c ****     break;
 342:Src/usbh_conf.c **** 
 343:Src/usbh_conf.c ****   default:
 344:Src/usbh_conf.c ****    speed = USBH_SPEED_FULL;
 345:Src/usbh_conf.c ****     break;
 346:Src/usbh_conf.c ****   }
 347:Src/usbh_conf.c ****   return  speed;
 348:Src/usbh_conf.c **** }
 559              		.loc 1 348 0
 560 0012 08BD     		pop	{r3, pc}
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 17


 561              	.LVL64:
 562              	.L58:
 332:Src/usbh_conf.c ****     break;
 563              		.loc 1 332 0
 564 0014 0020     		movs	r0, #0
 565 0016 FCE7     		b	.L57
 566              	.L59:
 567              	.LVL65:
 340:Src/usbh_conf.c ****     break;
 568              		.loc 1 340 0
 569 0018 0220     		movs	r0, #2
 341:Src/usbh_conf.c **** 
 570              		.loc 1 341 0
 571 001a FAE7     		b	.L57
 572              		.cfi_endproc
 573              	.LFE141:
 575              		.section	.text.USBH_LL_ResetPort,"ax",%progbits
 576              		.align	1
 577              		.global	USBH_LL_ResetPort
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 581              		.fpu fpv4-sp-d16
 583              	USBH_LL_ResetPort:
 584              	.LFB142:
 349:Src/usbh_conf.c **** 
 350:Src/usbh_conf.c **** /**
 351:Src/usbh_conf.c ****   * @brief  Reset the Host port of the low level driver.
 352:Src/usbh_conf.c ****   * @param  phost: Host handle
 353:Src/usbh_conf.c ****   * @retval USBH status
 354:Src/usbh_conf.c ****   */
 355:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_ResetPort(USBH_HandleTypeDef *phost)
 356:Src/usbh_conf.c **** {
 585              		.loc 1 356 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589              	.LVL66:
 590 0000 08B5     		push	{r3, lr}
 591              	.LCFI13:
 592              		.cfi_def_cfa_offset 8
 593              		.cfi_offset 3, -8
 594              		.cfi_offset 14, -4
 595              	.LVL67:
 357:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 358:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 359:Src/usbh_conf.c **** 
 360:Src/usbh_conf.c ****   hal_status = HAL_HCD_ResetPort(phost->pData);
 596              		.loc 1 360 0
 597 0002 D0F8C003 		ldr	r0, [r0, #960]
 598              	.LVL68:
 599 0006 FFF7FEFF 		bl	HAL_HCD_ResetPort
 600              	.LVL69:
 361:Src/usbh_conf.c ****   switch (hal_status) {
 601              		.loc 1 361 0
 602 000a 18B1     		cbz	r0, .L65
 603 000c 0228     		cmp	r0, #2
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 18


 604 000e 03D0     		beq	.L66
 362:Src/usbh_conf.c ****     case HAL_OK :
 363:Src/usbh_conf.c ****       usb_status = USBH_OK;
 364:Src/usbh_conf.c ****     break;
 365:Src/usbh_conf.c ****     case HAL_ERROR :
 366:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 605              		.loc 1 366 0
 606 0010 0220     		movs	r0, #2
 607              	.LVL70:
 608              	.L64:
 367:Src/usbh_conf.c ****     break;
 368:Src/usbh_conf.c ****     case HAL_BUSY :
 369:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 370:Src/usbh_conf.c ****     break;
 371:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 372:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 373:Src/usbh_conf.c ****     break;
 374:Src/usbh_conf.c ****     default :
 375:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 376:Src/usbh_conf.c ****     break;
 377:Src/usbh_conf.c ****   }
 378:Src/usbh_conf.c ****   return usb_status;
 379:Src/usbh_conf.c **** }
 609              		.loc 1 379 0
 610 0012 08BD     		pop	{r3, pc}
 611              	.LVL71:
 612              	.L65:
 363:Src/usbh_conf.c ****     break;
 613              		.loc 1 363 0
 614 0014 0020     		movs	r0, #0
 615              	.LVL72:
 616 0016 FCE7     		b	.L64
 617              	.LVL73:
 618              	.L66:
 369:Src/usbh_conf.c ****     break;
 619              		.loc 1 369 0
 620 0018 0120     		movs	r0, #1
 621              	.LVL74:
 370:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 622              		.loc 1 370 0
 623 001a FAE7     		b	.L64
 624              		.cfi_endproc
 625              	.LFE142:
 627              		.section	.text.USBH_LL_GetLastXferSize,"ax",%progbits
 628              		.align	1
 629              		.global	USBH_LL_GetLastXferSize
 630              		.syntax unified
 631              		.thumb
 632              		.thumb_func
 633              		.fpu fpv4-sp-d16
 635              	USBH_LL_GetLastXferSize:
 636              	.LFB143:
 380:Src/usbh_conf.c **** 
 381:Src/usbh_conf.c **** /**
 382:Src/usbh_conf.c ****   * @brief  Return the last transfered packet size.
 383:Src/usbh_conf.c ****   * @param  phost: Host handle
 384:Src/usbh_conf.c ****   * @param  pipe: Pipe index
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 19


 385:Src/usbh_conf.c ****   * @retval Packet size
 386:Src/usbh_conf.c ****   */
 387:Src/usbh_conf.c **** uint32_t USBH_LL_GetLastXferSize(USBH_HandleTypeDef *phost, uint8_t pipe)
 388:Src/usbh_conf.c **** {
 637              		.loc 1 388 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              	.LVL75:
 642 0000 08B5     		push	{r3, lr}
 643              	.LCFI14:
 644              		.cfi_def_cfa_offset 8
 645              		.cfi_offset 3, -8
 646              		.cfi_offset 14, -4
 389:Src/usbh_conf.c ****   return HAL_HCD_HC_GetXferCount(phost->pData, pipe);
 647              		.loc 1 389 0
 648 0002 D0F8C003 		ldr	r0, [r0, #960]
 649              	.LVL76:
 650 0006 FFF7FEFF 		bl	HAL_HCD_HC_GetXferCount
 651              	.LVL77:
 390:Src/usbh_conf.c **** }
 652              		.loc 1 390 0
 653 000a 08BD     		pop	{r3, pc}
 654              		.cfi_endproc
 655              	.LFE143:
 657              		.section	.text.USBH_LL_OpenPipe,"ax",%progbits
 658              		.align	1
 659              		.global	USBH_LL_OpenPipe
 660              		.syntax unified
 661              		.thumb
 662              		.thumb_func
 663              		.fpu fpv4-sp-d16
 665              	USBH_LL_OpenPipe:
 666              	.LFB144:
 391:Src/usbh_conf.c **** 
 392:Src/usbh_conf.c **** /**
 393:Src/usbh_conf.c ****   * @brief  Open a pipe of the low level driver.
 394:Src/usbh_conf.c ****   * @param  phost: Host handle
 395:Src/usbh_conf.c ****   * @param  pipe_num: Pipe index
 396:Src/usbh_conf.c ****   * @param  epnum: Endpoint number
 397:Src/usbh_conf.c ****   * @param  dev_address: Device USB address
 398:Src/usbh_conf.c ****   * @param  speed: Device Speed
 399:Src/usbh_conf.c ****   * @param  ep_type: Endpoint type
 400:Src/usbh_conf.c ****   * @param  mps: Endpoint max packet size
 401:Src/usbh_conf.c ****   * @retval USBH status
 402:Src/usbh_conf.c ****   */
 403:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_OpenPipe(USBH_HandleTypeDef *phost, uint8_t pipe_num, uint8_t epnum,
 404:Src/usbh_conf.c ****                                     uint8_t dev_address, uint8_t speed, uint8_t ep_type, uint16_t m
 405:Src/usbh_conf.c **** {
 667              		.loc 1 405 0
 668              		.cfi_startproc
 669              		@ args = 12, pretend = 0, frame = 0
 670              		@ frame_needed = 0, uses_anonymous_args = 0
 671              	.LVL78:
 672 0000 10B5     		push	{r4, lr}
 673              	.LCFI15:
 674              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 20


 675              		.cfi_offset 4, -8
 676              		.cfi_offset 14, -4
 677 0002 84B0     		sub	sp, sp, #16
 678              	.LCFI16:
 679              		.cfi_def_cfa_offset 24
 680              	.LVL79:
 406:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 407:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 408:Src/usbh_conf.c **** 
 409:Src/usbh_conf.c ****   hal_status = HAL_HCD_HC_Init(phost->pData, pipe_num, epnum,
 681              		.loc 1 409 0
 682 0004 D0F8C003 		ldr	r0, [r0, #960]
 683              	.LVL80:
 684 0008 BDF82040 		ldrh	r4, [sp, #32]
 685 000c 0294     		str	r4, [sp, #8]
 686 000e 9DF81C40 		ldrb	r4, [sp, #28]	@ zero_extendqisi2
 687 0012 0194     		str	r4, [sp, #4]
 688 0014 9DF81840 		ldrb	r4, [sp, #24]	@ zero_extendqisi2
 689 0018 0094     		str	r4, [sp]
 690 001a FFF7FEFF 		bl	HAL_HCD_HC_Init
 691              	.LVL81:
 410:Src/usbh_conf.c ****                                dev_address, speed, ep_type, mps);
 411:Src/usbh_conf.c **** 
 412:Src/usbh_conf.c ****   switch (hal_status) {
 692              		.loc 1 412 0
 693 001e 20B1     		cbz	r0, .L74
 694 0020 0228     		cmp	r0, #2
 695 0022 04D0     		beq	.L75
 413:Src/usbh_conf.c ****     case HAL_OK :
 414:Src/usbh_conf.c ****       usb_status = USBH_OK;
 415:Src/usbh_conf.c ****     break;
 416:Src/usbh_conf.c ****     case HAL_ERROR :
 417:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 696              		.loc 1 417 0
 697 0024 0220     		movs	r0, #2
 698              	.LVL82:
 699              	.L73:
 418:Src/usbh_conf.c ****     break;
 419:Src/usbh_conf.c ****     case HAL_BUSY :
 420:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 421:Src/usbh_conf.c ****     break;
 422:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 423:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 424:Src/usbh_conf.c ****     break;
 425:Src/usbh_conf.c ****     default :
 426:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 427:Src/usbh_conf.c ****     break;
 428:Src/usbh_conf.c ****   }
 429:Src/usbh_conf.c ****   return usb_status;
 430:Src/usbh_conf.c **** }
 700              		.loc 1 430 0
 701 0026 04B0     		add	sp, sp, #16
 702              	.LCFI17:
 703              		.cfi_remember_state
 704              		.cfi_def_cfa_offset 8
 705              		@ sp needed
 706 0028 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 21


 707              	.LVL83:
 708              	.L74:
 709              	.LCFI18:
 710              		.cfi_restore_state
 414:Src/usbh_conf.c ****     break;
 711              		.loc 1 414 0
 712 002a 0020     		movs	r0, #0
 713              	.LVL84:
 714 002c FBE7     		b	.L73
 715              	.LVL85:
 716              	.L75:
 420:Src/usbh_conf.c ****     break;
 717              		.loc 1 420 0
 718 002e 0120     		movs	r0, #1
 719              	.LVL86:
 421:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 720              		.loc 1 421 0
 721 0030 F9E7     		b	.L73
 722              		.cfi_endproc
 723              	.LFE144:
 725              		.section	.text.USBH_LL_ClosePipe,"ax",%progbits
 726              		.align	1
 727              		.global	USBH_LL_ClosePipe
 728              		.syntax unified
 729              		.thumb
 730              		.thumb_func
 731              		.fpu fpv4-sp-d16
 733              	USBH_LL_ClosePipe:
 734              	.LFB145:
 431:Src/usbh_conf.c **** 
 432:Src/usbh_conf.c **** /**
 433:Src/usbh_conf.c ****   * @brief  Close a pipe of the low level driver.
 434:Src/usbh_conf.c ****   * @param  phost: Host handle
 435:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 436:Src/usbh_conf.c ****   * @retval USBH status
 437:Src/usbh_conf.c ****   */
 438:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_ClosePipe(USBH_HandleTypeDef *phost, uint8_t pipe)
 439:Src/usbh_conf.c **** {
 735              		.loc 1 439 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 0
 738              		@ frame_needed = 0, uses_anonymous_args = 0
 739              	.LVL87:
 740 0000 08B5     		push	{r3, lr}
 741              	.LCFI19:
 742              		.cfi_def_cfa_offset 8
 743              		.cfi_offset 3, -8
 744              		.cfi_offset 14, -4
 745              	.LVL88:
 440:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 441:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 442:Src/usbh_conf.c **** 
 443:Src/usbh_conf.c ****   hal_status = HAL_HCD_HC_Halt(phost->pData, pipe);
 746              		.loc 1 443 0
 747 0002 D0F8C003 		ldr	r0, [r0, #960]
 748              	.LVL89:
 749 0006 FFF7FEFF 		bl	HAL_HCD_HC_Halt
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 22


 750              	.LVL90:
 444:Src/usbh_conf.c **** 
 445:Src/usbh_conf.c ****   switch (hal_status) {
 751              		.loc 1 445 0
 752 000a 18B1     		cbz	r0, .L81
 753 000c 0228     		cmp	r0, #2
 754 000e 03D0     		beq	.L82
 446:Src/usbh_conf.c ****     case HAL_OK :
 447:Src/usbh_conf.c ****       usb_status = USBH_OK;
 448:Src/usbh_conf.c ****     break;
 449:Src/usbh_conf.c ****     case HAL_ERROR :
 450:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 755              		.loc 1 450 0
 756 0010 0220     		movs	r0, #2
 757              	.LVL91:
 758              	.L80:
 451:Src/usbh_conf.c ****     break;
 452:Src/usbh_conf.c ****     case HAL_BUSY :
 453:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 454:Src/usbh_conf.c ****     break;
 455:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 456:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 457:Src/usbh_conf.c ****     break;
 458:Src/usbh_conf.c ****     default :
 459:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 460:Src/usbh_conf.c ****     break;
 461:Src/usbh_conf.c ****   }
 462:Src/usbh_conf.c ****   return usb_status;
 463:Src/usbh_conf.c **** }
 759              		.loc 1 463 0
 760 0012 08BD     		pop	{r3, pc}
 761              	.LVL92:
 762              	.L81:
 447:Src/usbh_conf.c ****     break;
 763              		.loc 1 447 0
 764 0014 0020     		movs	r0, #0
 765              	.LVL93:
 766 0016 FCE7     		b	.L80
 767              	.LVL94:
 768              	.L82:
 453:Src/usbh_conf.c ****     break;
 769              		.loc 1 453 0
 770 0018 0120     		movs	r0, #1
 771              	.LVL95:
 454:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 772              		.loc 1 454 0
 773 001a FAE7     		b	.L80
 774              		.cfi_endproc
 775              	.LFE145:
 777              		.section	.text.USBH_LL_SubmitURB,"ax",%progbits
 778              		.align	1
 779              		.global	USBH_LL_SubmitURB
 780              		.syntax unified
 781              		.thumb
 782              		.thumb_func
 783              		.fpu fpv4-sp-d16
 785              	USBH_LL_SubmitURB:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 23


 786              	.LFB146:
 464:Src/usbh_conf.c **** 
 465:Src/usbh_conf.c **** /**
 466:Src/usbh_conf.c ****   * @brief  Submit a new URB to the low level driver.
 467:Src/usbh_conf.c ****   * @param  phost: Host handle
 468:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 469:Src/usbh_conf.c ****   *         This parameter can be a value from 1 to 15
 470:Src/usbh_conf.c ****   * @param  direction : Channel number
 471:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 472:Src/usbh_conf.c ****   *           0 : Output
 473:Src/usbh_conf.c ****   *           1 : Input
 474:Src/usbh_conf.c ****   * @param  ep_type : Endpoint Type
 475:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 476:Src/usbh_conf.c ****   *            @arg EP_TYPE_CTRL: Control type
 477:Src/usbh_conf.c ****   *            @arg EP_TYPE_ISOC: Isochrounous type
 478:Src/usbh_conf.c ****   *            @arg EP_TYPE_BULK: Bulk type
 479:Src/usbh_conf.c ****   *            @arg EP_TYPE_INTR: Interrupt type
 480:Src/usbh_conf.c ****   * @param  token : Endpoint Type
 481:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 482:Src/usbh_conf.c ****   *            @arg 0: PID_SETUP
 483:Src/usbh_conf.c ****   *            @arg 1: PID_DATA
 484:Src/usbh_conf.c ****   * @param  pbuff : pointer to URB data
 485:Src/usbh_conf.c ****   * @param  length : Length of URB data
 486:Src/usbh_conf.c ****   * @param  do_ping : activate do ping protocol (for high speed only)
 487:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 488:Src/usbh_conf.c ****   *           0 : do ping inactive
 489:Src/usbh_conf.c ****   *           1 : do ping active
 490:Src/usbh_conf.c ****   * @retval Status
 491:Src/usbh_conf.c ****   */
 492:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_SubmitURB(USBH_HandleTypeDef *phost, uint8_t pipe, uint8_t direction,
 493:Src/usbh_conf.c ****                                      uint8_t ep_type, uint8_t token, uint8_t *pbuff, uint16_t lengt
 494:Src/usbh_conf.c ****                                      uint8_t do_ping)
 495:Src/usbh_conf.c **** {
 787              		.loc 1 495 0
 788              		.cfi_startproc
 789              		@ args = 16, pretend = 0, frame = 0
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 791              	.LVL96:
 792 0000 10B5     		push	{r4, lr}
 793              	.LCFI20:
 794              		.cfi_def_cfa_offset 8
 795              		.cfi_offset 4, -8
 796              		.cfi_offset 14, -4
 797 0002 84B0     		sub	sp, sp, #16
 798              	.LCFI21:
 799              		.cfi_def_cfa_offset 24
 800              	.LVL97:
 496:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 497:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 498:Src/usbh_conf.c **** 
 499:Src/usbh_conf.c ****   hal_status = HAL_HCD_HC_SubmitRequest(phost->pData, pipe, direction ,
 801              		.loc 1 499 0
 802 0004 D0F8C003 		ldr	r0, [r0, #960]
 803              	.LVL98:
 804 0008 9DF82440 		ldrb	r4, [sp, #36]	@ zero_extendqisi2
 805 000c 0394     		str	r4, [sp, #12]
 806 000e BDF82040 		ldrh	r4, [sp, #32]
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 24


 807 0012 0294     		str	r4, [sp, #8]
 808 0014 079C     		ldr	r4, [sp, #28]
 809 0016 0194     		str	r4, [sp, #4]
 810 0018 9DF81840 		ldrb	r4, [sp, #24]	@ zero_extendqisi2
 811 001c 0094     		str	r4, [sp]
 812 001e FFF7FEFF 		bl	HAL_HCD_HC_SubmitRequest
 813              	.LVL99:
 500:Src/usbh_conf.c ****                                         ep_type, token, pbuff, length,
 501:Src/usbh_conf.c ****                                         do_ping);
 502:Src/usbh_conf.c **** 
 503:Src/usbh_conf.c ****   switch (hal_status) {
 814              		.loc 1 503 0
 815 0022 20B1     		cbz	r0, .L88
 816 0024 0228     		cmp	r0, #2
 817 0026 04D0     		beq	.L89
 504:Src/usbh_conf.c ****     case HAL_OK :
 505:Src/usbh_conf.c ****       usb_status = USBH_OK;
 506:Src/usbh_conf.c ****     break;
 507:Src/usbh_conf.c ****     case HAL_ERROR :
 508:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 818              		.loc 1 508 0
 819 0028 0220     		movs	r0, #2
 820              	.LVL100:
 821              	.L87:
 509:Src/usbh_conf.c ****     break;
 510:Src/usbh_conf.c ****     case HAL_BUSY :
 511:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 512:Src/usbh_conf.c ****     break;
 513:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 514:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 515:Src/usbh_conf.c ****     break;
 516:Src/usbh_conf.c ****     default :
 517:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 518:Src/usbh_conf.c ****     break;
 519:Src/usbh_conf.c ****   }
 520:Src/usbh_conf.c ****   return usb_status;
 521:Src/usbh_conf.c **** }
 822              		.loc 1 521 0
 823 002a 04B0     		add	sp, sp, #16
 824              	.LCFI22:
 825              		.cfi_remember_state
 826              		.cfi_def_cfa_offset 8
 827              		@ sp needed
 828 002c 10BD     		pop	{r4, pc}
 829              	.LVL101:
 830              	.L88:
 831              	.LCFI23:
 832              		.cfi_restore_state
 505:Src/usbh_conf.c ****     break;
 833              		.loc 1 505 0
 834 002e 0020     		movs	r0, #0
 835              	.LVL102:
 836 0030 FBE7     		b	.L87
 837              	.LVL103:
 838              	.L89:
 511:Src/usbh_conf.c ****     break;
 839              		.loc 1 511 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 25


 840 0032 0120     		movs	r0, #1
 841              	.LVL104:
 512:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 842              		.loc 1 512 0
 843 0034 F9E7     		b	.L87
 844              		.cfi_endproc
 845              	.LFE146:
 847              		.section	.text.USBH_LL_GetURBState,"ax",%progbits
 848              		.align	1
 849              		.global	USBH_LL_GetURBState
 850              		.syntax unified
 851              		.thumb
 852              		.thumb_func
 853              		.fpu fpv4-sp-d16
 855              	USBH_LL_GetURBState:
 856              	.LFB147:
 522:Src/usbh_conf.c **** 
 523:Src/usbh_conf.c **** /**
 524:Src/usbh_conf.c ****   * @brief  Get a URB state from the low level driver.
 525:Src/usbh_conf.c ****   * @param  phost: Host handle
 526:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 527:Src/usbh_conf.c ****   *         This parameter can be a value from 1 to 15
 528:Src/usbh_conf.c ****   * @retval URB state
 529:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 530:Src/usbh_conf.c ****   *            @arg URB_IDLE
 531:Src/usbh_conf.c ****   *            @arg URB_DONE
 532:Src/usbh_conf.c ****   *            @arg URB_NOTREADY
 533:Src/usbh_conf.c ****   *            @arg URB_NYET
 534:Src/usbh_conf.c ****   *            @arg URB_ERROR
 535:Src/usbh_conf.c ****   *            @arg URB_STALL
 536:Src/usbh_conf.c ****   */
 537:Src/usbh_conf.c **** USBH_URBStateTypeDef USBH_LL_GetURBState(USBH_HandleTypeDef *phost, uint8_t pipe)
 538:Src/usbh_conf.c **** {
 857              		.loc 1 538 0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 0
 860              		@ frame_needed = 0, uses_anonymous_args = 0
 861              	.LVL105:
 862 0000 08B5     		push	{r3, lr}
 863              	.LCFI24:
 864              		.cfi_def_cfa_offset 8
 865              		.cfi_offset 3, -8
 866              		.cfi_offset 14, -4
 539:Src/usbh_conf.c ****   return (USBH_URBStateTypeDef)HAL_HCD_HC_GetURBState (phost->pData, pipe);
 867              		.loc 1 539 0
 868 0002 D0F8C003 		ldr	r0, [r0, #960]
 869              	.LVL106:
 870 0006 FFF7FEFF 		bl	HAL_HCD_HC_GetURBState
 871              	.LVL107:
 540:Src/usbh_conf.c **** }
 872              		.loc 1 540 0
 873 000a 08BD     		pop	{r3, pc}
 874              		.cfi_endproc
 875              	.LFE147:
 877              		.section	.text.USBH_LL_DriverVBUS,"ax",%progbits
 878              		.align	1
 879              		.global	USBH_LL_DriverVBUS
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 26


 880              		.syntax unified
 881              		.thumb
 882              		.thumb_func
 883              		.fpu fpv4-sp-d16
 885              	USBH_LL_DriverVBUS:
 886              	.LFB148:
 541:Src/usbh_conf.c **** 
 542:Src/usbh_conf.c **** /**
 543:Src/usbh_conf.c ****   * @brief  Drive VBUS.
 544:Src/usbh_conf.c ****   * @param  phost: Host handle
 545:Src/usbh_conf.c ****   * @param  state : VBUS state
 546:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 547:Src/usbh_conf.c ****   *           0 : VBUS Active
 548:Src/usbh_conf.c ****   *           1 : VBUS Inactive
 549:Src/usbh_conf.c ****   * @retval Status
 550:Src/usbh_conf.c ****   */
 551:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_DriverVBUS(USBH_HandleTypeDef *phost, uint8_t state)
 552:Src/usbh_conf.c **** {
 887              		.loc 1 552 0
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 0
 890              		@ frame_needed = 0, uses_anonymous_args = 0
 891              	.LVL108:
 892 0000 08B5     		push	{r3, lr}
 893              	.LCFI25:
 894              		.cfi_def_cfa_offset 8
 895              		.cfi_offset 3, -8
 896              		.cfi_offset 14, -4
 553:Src/usbh_conf.c **** 
 554:Src/usbh_conf.c ****   /* USER CODE BEGIN 0 */
 555:Src/usbh_conf.c **** 
 556:Src/usbh_conf.c ****   /* USER CODE END 0*/
 557:Src/usbh_conf.c **** 
 558:Src/usbh_conf.c ****   if (phost->id == HOST_FS)
 559:Src/usbh_conf.c ****   {
 560:Src/usbh_conf.c ****     if (state == 0)
 561:Src/usbh_conf.c ****     {
 562:Src/usbh_conf.c ****       /* Drive high Charge pump */
 563:Src/usbh_conf.c ****       /* ToDo: Add IOE driver control */
 564:Src/usbh_conf.c ****       /* USER CODE BEGIN DRIVE_HIGH_CHARGE_FOR_FS */
 565:Src/usbh_conf.c **** 
 566:Src/usbh_conf.c ****       /* USER CODE END DRIVE_HIGH_CHARGE_FOR_FS */
 567:Src/usbh_conf.c ****     }
 568:Src/usbh_conf.c ****     else
 569:Src/usbh_conf.c ****     {
 570:Src/usbh_conf.c ****       /* Drive low Charge pump */
 571:Src/usbh_conf.c ****       /* ToDo: Add IOE driver control */
 572:Src/usbh_conf.c ****       /* USER CODE BEGIN DRIVE_LOW_CHARGE_FOR_FS */
 573:Src/usbh_conf.c **** 
 574:Src/usbh_conf.c ****       /* USER CODE END DRIVE_LOW_CHARGE_FOR_FS */
 575:Src/usbh_conf.c ****     }
 576:Src/usbh_conf.c ****   }
 577:Src/usbh_conf.c ****   HAL_Delay(200);
 897              		.loc 1 577 0
 898 0002 C820     		movs	r0, #200
 899              	.LVL109:
 900 0004 FFF7FEFF 		bl	HAL_Delay
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 27


 901              	.LVL110:
 578:Src/usbh_conf.c ****   return USBH_OK;
 579:Src/usbh_conf.c **** }
 902              		.loc 1 579 0
 903 0008 0020     		movs	r0, #0
 904 000a 08BD     		pop	{r3, pc}
 905              		.cfi_endproc
 906              	.LFE148:
 908              		.section	.text.USBH_LL_SetToggle,"ax",%progbits
 909              		.align	1
 910              		.global	USBH_LL_SetToggle
 911              		.syntax unified
 912              		.thumb
 913              		.thumb_func
 914              		.fpu fpv4-sp-d16
 916              	USBH_LL_SetToggle:
 917              	.LFB149:
 580:Src/usbh_conf.c **** 
 581:Src/usbh_conf.c **** /**
 582:Src/usbh_conf.c ****   * @brief  Set toggle for a pipe.
 583:Src/usbh_conf.c ****   * @param  phost: Host handle
 584:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 585:Src/usbh_conf.c ****   * @param  toggle: toggle (0/1)
 586:Src/usbh_conf.c ****   * @retval Status
 587:Src/usbh_conf.c ****   */
 588:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_SetToggle(USBH_HandleTypeDef *phost, uint8_t pipe, uint8_t toggle)
 589:Src/usbh_conf.c **** {
 918              		.loc 1 589 0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 0, uses_anonymous_args = 0
 922              		@ link register save eliminated.
 923              	.LVL111:
 924 0000 10B4     		push	{r4}
 925              	.LCFI26:
 926              		.cfi_def_cfa_offset 4
 927              		.cfi_offset 4, -4
 590:Src/usbh_conf.c ****   HCD_HandleTypeDef *pHandle;
 591:Src/usbh_conf.c ****   pHandle = phost->pData;
 928              		.loc 1 591 0
 929 0002 D0F8C033 		ldr	r3, [r0, #960]
 930              	.LVL112:
 592:Src/usbh_conf.c **** 
 593:Src/usbh_conf.c ****   if(pHandle->hc[pipe].ep_is_in)
 931              		.loc 1 593 0
 932 0006 01EB8104 		add	r4, r1, r1, lsl #2
 933 000a E000     		lsls	r0, r4, #3
 934              	.LVL113:
 935 000c 0446     		mov	r4, r0
 936 000e 1844     		add	r0, r0, r3
 937 0010 90F83B00 		ldrb	r0, [r0, #59]	@ zero_extendqisi2
 938 0014 48B9     		cbnz	r0, .L101
 594:Src/usbh_conf.c ****   {
 595:Src/usbh_conf.c ****     pHandle->hc[pipe].toggle_in = toggle;
 596:Src/usbh_conf.c ****   }
 597:Src/usbh_conf.c ****   else
 598:Src/usbh_conf.c ****   {
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 28


 599:Src/usbh_conf.c ****     pHandle->hc[pipe].toggle_out = toggle;
 939              		.loc 1 599 0
 940 0016 01EB8101 		add	r1, r1, r1, lsl #2
 941              	.LVL114:
 942 001a C800     		lsls	r0, r1, #3
 943 001c 0344     		add	r3, r3, r0
 944              	.LVL115:
 945 001e 83F85120 		strb	r2, [r3, #81]
 946              	.LVL116:
 947              	.L99:
 600:Src/usbh_conf.c ****   }
 601:Src/usbh_conf.c **** 
 602:Src/usbh_conf.c ****   return USBH_OK;
 603:Src/usbh_conf.c **** }
 948              		.loc 1 603 0
 949 0022 0020     		movs	r0, #0
 950 0024 5DF8044B 		ldr	r4, [sp], #4
 951              	.LCFI27:
 952              		.cfi_remember_state
 953              		.cfi_restore 4
 954              		.cfi_def_cfa_offset 0
 955 0028 7047     		bx	lr
 956              	.LVL117:
 957              	.L101:
 958              	.LCFI28:
 959              		.cfi_restore_state
 595:Src/usbh_conf.c ****   }
 960              		.loc 1 595 0
 961 002a 2344     		add	r3, r3, r4
 962              	.LVL118:
 963 002c 83F85020 		strb	r2, [r3, #80]
 964              	.LVL119:
 965 0030 F7E7     		b	.L99
 966              		.cfi_endproc
 967              	.LFE149:
 969              		.section	.text.USBH_LL_GetToggle,"ax",%progbits
 970              		.align	1
 971              		.global	USBH_LL_GetToggle
 972              		.syntax unified
 973              		.thumb
 974              		.thumb_func
 975              		.fpu fpv4-sp-d16
 977              	USBH_LL_GetToggle:
 978              	.LFB150:
 604:Src/usbh_conf.c **** 
 605:Src/usbh_conf.c **** /**
 606:Src/usbh_conf.c ****   * @brief  Return the current toggle of a pipe.
 607:Src/usbh_conf.c ****   * @param  phost: Host handle
 608:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 609:Src/usbh_conf.c ****   * @retval toggle (0/1)
 610:Src/usbh_conf.c ****   */
 611:Src/usbh_conf.c **** uint8_t USBH_LL_GetToggle(USBH_HandleTypeDef *phost, uint8_t pipe)
 612:Src/usbh_conf.c **** {
 979              		.loc 1 612 0
 980              		.cfi_startproc
 981              		@ args = 0, pretend = 0, frame = 0
 982              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 29


 983              		@ link register save eliminated.
 984              	.LVL120:
 613:Src/usbh_conf.c ****   uint8_t toggle = 0;
 614:Src/usbh_conf.c ****   HCD_HandleTypeDef *pHandle;
 615:Src/usbh_conf.c ****   pHandle = phost->pData;
 985              		.loc 1 615 0
 986 0000 D0F8C033 		ldr	r3, [r0, #960]
 987              	.LVL121:
 616:Src/usbh_conf.c **** 
 617:Src/usbh_conf.c ****   if(pHandle->hc[pipe].ep_is_in)
 988              		.loc 1 617 0
 989 0004 01EB8100 		add	r0, r1, r1, lsl #2
 990              	.LVL122:
 991 0008 C200     		lsls	r2, r0, #3
 992 000a 1046     		mov	r0, r2
 993 000c 1A44     		add	r2, r2, r3
 994 000e 92F83B20 		ldrb	r2, [r2, #59]	@ zero_extendqisi2
 995 0012 32B9     		cbnz	r2, .L105
 618:Src/usbh_conf.c ****   {
 619:Src/usbh_conf.c ****     toggle = pHandle->hc[pipe].toggle_in;
 620:Src/usbh_conf.c ****   }
 621:Src/usbh_conf.c ****   else
 622:Src/usbh_conf.c ****   {
 623:Src/usbh_conf.c ****     toggle = pHandle->hc[pipe].toggle_out;
 996              		.loc 1 623 0
 997 0014 01EB8101 		add	r1, r1, r1, lsl #2
 998              	.LVL123:
 999 0018 CA00     		lsls	r2, r1, #3
 1000 001a 1344     		add	r3, r3, r2
 1001              	.LVL124:
 1002 001c 93F85100 		ldrb	r0, [r3, #81]	@ zero_extendqisi2
 1003              	.LVL125:
 624:Src/usbh_conf.c ****   }
 625:Src/usbh_conf.c ****   return toggle;
 626:Src/usbh_conf.c **** }
 1004              		.loc 1 626 0
 1005 0020 7047     		bx	lr
 1006              	.LVL126:
 1007              	.L105:
 619:Src/usbh_conf.c ****   }
 1008              		.loc 1 619 0
 1009 0022 0344     		add	r3, r3, r0
 1010              	.LVL127:
 1011 0024 93F85000 		ldrb	r0, [r3, #80]	@ zero_extendqisi2
 1012              	.LVL128:
 1013 0028 7047     		bx	lr
 1014              		.cfi_endproc
 1015              	.LFE150:
 1017              		.section	.text.USBH_Delay,"ax",%progbits
 1018              		.align	1
 1019              		.global	USBH_Delay
 1020              		.syntax unified
 1021              		.thumb
 1022              		.thumb_func
 1023              		.fpu fpv4-sp-d16
 1025              	USBH_Delay:
 1026              	.LFB151:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 30


 627:Src/usbh_conf.c **** 
 628:Src/usbh_conf.c **** /**
 629:Src/usbh_conf.c ****   * @brief  Delay routine for the USB Host Library
 630:Src/usbh_conf.c ****   * @param  Delay: Delay in ms
 631:Src/usbh_conf.c ****   * @retval None
 632:Src/usbh_conf.c ****   */
 633:Src/usbh_conf.c **** void USBH_Delay(uint32_t Delay)
 634:Src/usbh_conf.c **** {
 1027              		.loc 1 634 0
 1028              		.cfi_startproc
 1029              		@ args = 0, pretend = 0, frame = 0
 1030              		@ frame_needed = 0, uses_anonymous_args = 0
 1031              	.LVL129:
 1032 0000 08B5     		push	{r3, lr}
 1033              	.LCFI29:
 1034              		.cfi_def_cfa_offset 8
 1035              		.cfi_offset 3, -8
 1036              		.cfi_offset 14, -4
 635:Src/usbh_conf.c ****   HAL_Delay(Delay);
 1037              		.loc 1 635 0
 1038 0002 FFF7FEFF 		bl	HAL_Delay
 1039              	.LVL130:
 636:Src/usbh_conf.c **** }
 1040              		.loc 1 636 0
 1041 0006 08BD     		pop	{r3, pc}
 1042              		.cfi_endproc
 1043              	.LFE151:
 1045              		.comm	hhcd_USB_OTG_FS,664,4
 1046              		.section	.rodata.USBH_LL_Init.str1.4,"aMS",%progbits,1
 1047              		.align	2
 1048              	.LC0:
 1049 0000 5372632F 		.ascii	"Src/usbh_conf.c\000"
 1049      75736268 
 1049      5F636F6E 
 1049      662E6300 
 1050              		.text
 1051              	.Letext0:
 1052              		.file 2 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_defau
 1053              		.file 3 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 1054              		.file 4 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 1055              		.file 5 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/
 1056              		.file 6 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 1057              		.file 7 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1058              		.file 8 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/stdlib.h"
 1059              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 1060              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1061              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 1062              		.file 12 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1063              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1064              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1065              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 1066              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_hcd.h"
 1067              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1068              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1069              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1070              		.file 20 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 1071              		.file 21 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 31


 1072              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1073              		.file 23 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_core.h"
 1074              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 32


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbh_conf.c
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:18     .text.HAL_HCD_MspInit:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:25     .text.HAL_HCD_MspInit:0000000000000000 HAL_HCD_MspInit
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:103    .text.HAL_HCD_MspInit:0000000000000060 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:109    .text.HAL_HCD_MspDeInit:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:116    .text.HAL_HCD_MspDeInit:0000000000000000 HAL_HCD_MspDeInit
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:158    .text.HAL_HCD_MspDeInit:0000000000000028 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:164    .text.HAL_HCD_SOF_Callback:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:171    .text.HAL_HCD_SOF_Callback:0000000000000000 HAL_HCD_SOF_Callback
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:194    .text.HAL_HCD_Connect_Callback:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:201    .text.HAL_HCD_Connect_Callback:0000000000000000 HAL_HCD_Connect_Callback
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:224    .text.HAL_HCD_Disconnect_Callback:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:231    .text.HAL_HCD_Disconnect_Callback:0000000000000000 HAL_HCD_Disconnect_Callback
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:254    .text.HAL_HCD_HC_NotifyURBChange_Callback:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:261    .text.HAL_HCD_HC_NotifyURBChange_Callback:0000000000000000 HAL_HCD_HC_NotifyURBChange_Callback
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:284    .text.USBH_LL_Init:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:291    .text.USBH_LL_Init:0000000000000000 USBH_LL_Init
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:365    .text.USBH_LL_Init:0000000000000054 $d
                            *COM*:0000000000000298 hhcd_USB_OTG_FS
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:371    .text.USBH_LL_DeInit:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:378    .text.USBH_LL_DeInit:0000000000000000 USBH_LL_DeInit
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:423    .text.USBH_LL_Start:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:430    .text.USBH_LL_Start:0000000000000000 USBH_LL_Start
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:475    .text.USBH_LL_Stop:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:482    .text.USBH_LL_Stop:0000000000000000 USBH_LL_Stop
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:527    .text.USBH_LL_GetSpeed:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:534    .text.USBH_LL_GetSpeed:0000000000000000 USBH_LL_GetSpeed
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:576    .text.USBH_LL_ResetPort:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:583    .text.USBH_LL_ResetPort:0000000000000000 USBH_LL_ResetPort
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:628    .text.USBH_LL_GetLastXferSize:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:635    .text.USBH_LL_GetLastXferSize:0000000000000000 USBH_LL_GetLastXferSize
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:658    .text.USBH_LL_OpenPipe:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:665    .text.USBH_LL_OpenPipe:0000000000000000 USBH_LL_OpenPipe
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:726    .text.USBH_LL_ClosePipe:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:733    .text.USBH_LL_ClosePipe:0000000000000000 USBH_LL_ClosePipe
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:778    .text.USBH_LL_SubmitURB:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:785    .text.USBH_LL_SubmitURB:0000000000000000 USBH_LL_SubmitURB
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:848    .text.USBH_LL_GetURBState:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:855    .text.USBH_LL_GetURBState:0000000000000000 USBH_LL_GetURBState
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:878    .text.USBH_LL_DriverVBUS:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:885    .text.USBH_LL_DriverVBUS:0000000000000000 USBH_LL_DriverVBUS
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:909    .text.USBH_LL_SetToggle:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:916    .text.USBH_LL_SetToggle:0000000000000000 USBH_LL_SetToggle
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:970    .text.USBH_LL_GetToggle:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:977    .text.USBH_LL_GetToggle:0000000000000000 USBH_LL_GetToggle
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:1018   .text.USBH_Delay:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:1025   .text.USBH_Delay:0000000000000000 USBH_Delay
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s:1047   .rodata.USBH_LL_Init.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
USBH_LL_IncTimer
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//ccRXPVGZ.s 			page 33


USBH_LL_Connect
USBH_LL_Disconnect
USBH_LL_NotifyURBChange
HAL_HCD_Init
HAL_HCD_GetCurrentFrame
USBH_LL_SetTimer
_Error_Handler
HAL_HCD_DeInit
HAL_HCD_Start
HAL_HCD_Stop
HAL_HCD_GetCurrentSpeed
HAL_HCD_ResetPort
HAL_HCD_HC_GetXferCount
HAL_HCD_HC_Init
HAL_HCD_HC_Halt
HAL_HCD_HC_SubmitRequest
HAL_HCD_HC_GetURBState
HAL_Delay

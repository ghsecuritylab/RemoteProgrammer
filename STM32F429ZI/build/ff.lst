ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"ff.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ld_word,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	ld_word:
  25              	.LFB131:
  26              		.file 1 "Middlewares/Third_Party/FatFs/src/ff.c"
   1:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------------------------------------------/
   2:Middlewares/Third_Party/FatFs/src/ff.c **** /  FatFs - Generic FAT file system module  R0.12c                             /
   3:Middlewares/Third_Party/FatFs/src/ff.c **** /-----------------------------------------------------------------------------/
   4:Middlewares/Third_Party/FatFs/src/ff.c **** /
   5:Middlewares/Third_Party/FatFs/src/ff.c **** / Copyright (C) 2017, ChaN, all right reserved.
   6:Middlewares/Third_Party/FatFs/src/ff.c **** /
   7:Middlewares/Third_Party/FatFs/src/ff.c **** / FatFs module is an open source software. Redistribution and use of FatFs in
   8:Middlewares/Third_Party/FatFs/src/ff.c **** / source and binary forms, with or without modification, are permitted provided
   9:Middlewares/Third_Party/FatFs/src/ff.c **** / that the following condition is met:
  10:Middlewares/Third_Party/FatFs/src/ff.c **** /
  11:Middlewares/Third_Party/FatFs/src/ff.c **** / 1. Redistributions of source code must retain the above copyright notice,
  12:Middlewares/Third_Party/FatFs/src/ff.c **** /    this condition and the following disclaimer.
  13:Middlewares/Third_Party/FatFs/src/ff.c **** /
  14:Middlewares/Third_Party/FatFs/src/ff.c **** / This software is provided by the copyright holder and contributors "AS IS"
  15:Middlewares/Third_Party/FatFs/src/ff.c **** / and any warranties related to this software are DISCLAIMED.
  16:Middlewares/Third_Party/FatFs/src/ff.c **** / The copyright owner or contributors be NOT LIABLE for any damages caused
  17:Middlewares/Third_Party/FatFs/src/ff.c **** / by use of this software.
  18:Middlewares/Third_Party/FatFs/src/ff.c **** /----------------------------------------------------------------------------*/
  19:Middlewares/Third_Party/FatFs/src/ff.c **** 
  20:Middlewares/Third_Party/FatFs/src/ff.c **** 
  21:Middlewares/Third_Party/FatFs/src/ff.c **** #include "ff.h"			/* Declarations of FatFs API */
  22:Middlewares/Third_Party/FatFs/src/ff.c **** #include "diskio.h"		/* Declarations of device I/O functions */
  23:Middlewares/Third_Party/FatFs/src/ff.c **** 
  24:Middlewares/Third_Party/FatFs/src/ff.c **** 
  25:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
  26:Middlewares/Third_Party/FatFs/src/ff.c **** 
  27:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Definitions
  28:Middlewares/Third_Party/FatFs/src/ff.c **** 
  29:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
  30:Middlewares/Third_Party/FatFs/src/ff.c **** 
  31:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FATFS != 68300	/* Revision ID */
  32:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong include file (ff.h).
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 2


  33:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
  34:Middlewares/Third_Party/FatFs/src/ff.c **** 
  35:Middlewares/Third_Party/FatFs/src/ff.c **** 
  36:Middlewares/Third_Party/FatFs/src/ff.c **** /* DBCS code ranges and SBCS upper conversion tables */
  37:Middlewares/Third_Party/FatFs/src/ff.c **** 
  38:Middlewares/Third_Party/FatFs/src/ff.c **** #if _CODE_PAGE == 932	/* Japanese Shift-JIS */
  39:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81	/* DBC 1st byte range 1 start */
  40:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0x9F	/* DBC 1st byte range 1 end */
  41:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2S	0xE0	/* DBC 1st byte range 2 start */
  42:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2E	0xFC	/* DBC 1st byte range 2 end */
  43:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40	/* DBC 2nd byte range 1 start */
  44:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E	/* DBC 2nd byte range 1 end */
  45:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80	/* DBC 2nd byte range 2 start */
  46:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFC	/* DBC 2nd byte range 2 end */
  47:Middlewares/Third_Party/FatFs/src/ff.c **** 
  48:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 936	/* Simplified Chinese GBK */
  49:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  50:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  51:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
  52:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
  53:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80
  54:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
  55:Middlewares/Third_Party/FatFs/src/ff.c **** 
  56:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 949	/* Korean */
  57:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  58:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  59:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x41
  60:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x5A
  61:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x61
  62:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0x7A
  63:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3S	0x81
  64:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3E	0xFE
  65:Middlewares/Third_Party/FatFs/src/ff.c **** 
  66:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 950	/* Traditional Chinese Big5 */
  67:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  68:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  69:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
  70:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
  71:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0xA1
  72:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
  73:Middlewares/Third_Party/FatFs/src/ff.c **** 
  74:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 437	/* U.S. */
  75:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  76:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
  77:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
  78:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
  79:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
  80:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
  81:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
  82:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
  83:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
  84:Middlewares/Third_Party/FatFs/src/ff.c **** 
  85:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 720	/* Arabic */
  86:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  87:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
  88:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
  89:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 3


  90:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
  91:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
  92:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
  93:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
  94:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
  95:Middlewares/Third_Party/FatFs/src/ff.c **** 
  96:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 737	/* Greek */
  97:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  98:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
  99:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x93,0x94,0x95,0x96,0x97,0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87, \
 100:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0xAA,0x92,0x93,0x94,0x95,0x96, \
 101:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 102:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 103:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 104:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xEF,0xF5,0xF0,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 105:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 106:Middlewares/Third_Party/FatFs/src/ff.c **** 
 107:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 771	/* KBL */
 108:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 109:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 110:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 111:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 112:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 113:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 114:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDC,0xDE,0xDE, \
 115:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 116:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFE,0xFF}
 117:Middlewares/Third_Party/FatFs/src/ff.c **** 
 118:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 775	/* Baltic */
 119:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 120:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F, \
 121:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0xE2,0x99,0x95,0x96,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 122:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xE0,0xA3,0xA3,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 123:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 124:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 125:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xA5,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 126:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF, \
 127:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 128:Middlewares/Third_Party/FatFs/src/ff.c **** 
 129:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 850	/* Latin 1 */
 130:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 131:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x43,0x55,0x45,0x41,0x41,0x41,0x41,0x43,0x45,0x45,0x45,0x49,0x49,0x49,0x41,0x41, \
 132:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x45,0x92,0x92,0x4F,0x4F,0x4F,0x55,0x55,0x59,0x4F,0x55,0x4F,0x9C,0x4F,0x9E,0x9F, \
 133:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 134:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0x41,0x41,0x41,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 135:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0x41,0x41,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 136:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0x45,0x45,0x45,0x49,0x49,0x49,0x49,0xD9,0xDA,0xDB,0xDC,0xDD,0x49,0xDF, \
 137:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x4F,0xE1,0x4F,0x4F,0x4F,0x4F,0xE6,0xE8,0xE8,0x55,0x55,0x55,0x59,0x59,0xEE,0xEF, \
 138:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 139:Middlewares/Third_Party/FatFs/src/ff.c **** 
 140:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 852	/* Latin 2 */
 141:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 142:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F, \
 143:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x91,0xE2,0x99,0x95,0x95,0x97,0x97,0x99,0x9A,0x9B,0x9B,0x9D,0x9E,0xAC, \
 144:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA4,0xA4,0xA6,0xA6,0xA8,0xA8,0xAA,0x8D,0xAC,0xB8,0xAE,0xAF, \
 145:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBD,0xBF, \
 146:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC6,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 4


 147:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0xD2,0xD3,0xD2,0xD5,0xD6,0xD7,0xB7,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 148:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF, \
 149:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xEB,0xFC,0xFC,0xFE,0xFF}
 150:Middlewares/Third_Party/FatFs/src/ff.c **** 
 151:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 855	/* Cyrillic */
 152:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 153:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F, \
 154:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x91,0x91,0x93,0x93,0x95,0x95,0x97,0x97,0x99,0x99,0x9B,0x9B,0x9D,0x9D,0x9F,0x9F, \
 155:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA1,0xA1,0xA3,0xA3,0xA5,0xA5,0xA7,0xA7,0xA9,0xA9,0xAB,0xAB,0xAD,0xAD,0xAE,0xAF, \
 156:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB6,0xB6,0xB8,0xB8,0xB9,0xBA,0xBB,0xBC,0xBE,0xBE,0xBF, \
 157:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 158:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0xD3,0xD3,0xD5,0xD5,0xD7,0xD7,0xDD,0xD9,0xDA,0xDB,0xDC,0xDD,0xE0,0xDF, \
 159:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF, \
 160:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFD,0xFE,0xFF}
 161:Middlewares/Third_Party/FatFs/src/ff.c **** 
 162:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 857	/* Turkish */
 163:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 164:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x49,0x8E,0x8F, \
 165:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0xE2,0x99,0xE3,0xEA,0xEB,0x98,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9E, \
 166:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 167:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 168:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 169:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0x49,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 170:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0xED,0xEE,0xEF, \
 171:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 172:Middlewares/Third_Party/FatFs/src/ff.c **** 
 173:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 860	/* Portuguese */
 174:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 175:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x8F,0x8E,0x91,0x86,0x80,0x89,0x89,0x92,0x8B,0x8C,0x98,0x8E,0x8F, \
 176:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x8C,0x99,0xA9,0x96,0x9D,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 177:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x86,0x8B,0x9F,0x96,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 178:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 179:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 180:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 181:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 182:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 183:Middlewares/Third_Party/FatFs/src/ff.c **** 
 184:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 861	/* Icelandic */
 185:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 186:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x8B,0x8B,0x8D,0x8E,0x8F, \
 187:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x8D,0x55,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 188:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA4,0xA5,0xA6,0xA7,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 189:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 190:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 191:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 192:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 193:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 194:Middlewares/Third_Party/FatFs/src/ff.c **** 
 195:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 862	/* Hebrew */
 196:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 197:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 198:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 199:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 200:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 201:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 202:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 203:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 5


 204:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 205:Middlewares/Third_Party/FatFs/src/ff.c **** 
 206:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 863	/* Canadian-French */
 207:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 208:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x43,0x55,0x45,0x41,0x41,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x41,0x8F, \
 209:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x45,0x45,0x45,0x4F,0x45,0x49,0x55,0x55,0x98,0x4F,0x55,0x9B,0x9C,0x55,0x55,0x9F, \
 210:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0x4F,0x55,0xA4,0xA5,0xA6,0xA7,0x49,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 211:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 212:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 213:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 214:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 215:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 216:Middlewares/Third_Party/FatFs/src/ff.c **** 
 217:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 864	/* Arabic */
 218:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 219:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
 220:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 221:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 222:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 223:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 224:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 225:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 226:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 227:Middlewares/Third_Party/FatFs/src/ff.c **** 
 228:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 865	/* Nordic */
 229:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 230:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
 231:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 232:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 233:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 234:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 235:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 236:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 237:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 238:Middlewares/Third_Party/FatFs/src/ff.c **** 
 239:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 866	/* Russian */
 240:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 241:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 242:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 243:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 244:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 245:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 246:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 247:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 248:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 249:Middlewares/Third_Party/FatFs/src/ff.c **** 
 250:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 869	/* Greek 2 */
 251:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 252:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 253:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x86,0x9C,0x8D,0x8F,0x90, \
 254:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x91,0x90,0x92,0x95,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 255:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 256:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 257:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xA4,0xA5,0xA6,0xD9,0xDA,0xDB,0xDC,0xA7,0xA8,0xDF, \
 258:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA9,0xAA,0xAC,0xAD,0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xCF,0xCF,0xD0,0xEF, \
 259:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xD1,0xD2,0xD3,0xF5,0xD4,0xF7,0xF8,0xF9,0xD5,0x96,0x95,0x98,0xFE,0xFF}
 260:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 6


 261:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1	/* ASCII (for only non-LFN cfg) */
 262:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
 263:Middlewares/Third_Party/FatFs/src/ff.c **** #error Cannot enable LFN without valid code page.
 264:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 265:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 266:Middlewares/Third_Party/FatFs/src/ff.c **** 
 267:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 268:Middlewares/Third_Party/FatFs/src/ff.c **** #error Unknown code page
 269:Middlewares/Third_Party/FatFs/src/ff.c **** 
 270:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 271:Middlewares/Third_Party/FatFs/src/ff.c **** 
 272:Middlewares/Third_Party/FatFs/src/ff.c **** 
 273:Middlewares/Third_Party/FatFs/src/ff.c **** /* Character code support macros */
 274:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsUpper(c)	(((c)>='A')&&((c)<='Z'))
 275:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsLower(c)	(((c)>='a')&&((c)<='z'))
 276:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDigit(c)	(((c)>='0')&&((c)<='9'))
 277:Middlewares/Third_Party/FatFs/src/ff.c **** 
 278:Middlewares/Third_Party/FatFs/src/ff.c **** #if _DF1S != 0	/* Code page is DBCS */
 279:Middlewares/Third_Party/FatFs/src/ff.c **** 
 280:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DF2S	/* Two 1st byte areas */
 281:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	(((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E) || ((BYTE)(c) >= _DF2S && (BYTE)(c) 
 282:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* One 1st byte area */
 283:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E)
 284:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 285:Middlewares/Third_Party/FatFs/src/ff.c **** 
 286:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DS3S	/* Three 2nd byte areas */
 287:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 288:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Two 2nd byte areas */
 289:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 290:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 291:Middlewares/Third_Party/FatFs/src/ff.c **** 
 292:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Code page is SBCS */
 293:Middlewares/Third_Party/FatFs/src/ff.c **** 
 294:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	0
 295:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	0
 296:Middlewares/Third_Party/FatFs/src/ff.c **** 
 297:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _DF1S */
 298:Middlewares/Third_Party/FatFs/src/ff.c **** 
 299:Middlewares/Third_Party/FatFs/src/ff.c **** 
 300:Middlewares/Third_Party/FatFs/src/ff.c **** /* Additional file attribute bits for internal use */
 301:Middlewares/Third_Party/FatFs/src/ff.c **** #define	AM_VOL		0x08	/* Volume label */
 302:Middlewares/Third_Party/FatFs/src/ff.c **** #define AM_LFN		0x0F	/* LFN entry */
 303:Middlewares/Third_Party/FatFs/src/ff.c **** #define AM_MASK		0x3F	/* Mask of defined bits */
 304:Middlewares/Third_Party/FatFs/src/ff.c **** 
 305:Middlewares/Third_Party/FatFs/src/ff.c **** 
 306:Middlewares/Third_Party/FatFs/src/ff.c **** /* Additional file access control and file status flags for internal use */
 307:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_SEEKEND	0x20	/* Seek to end of the file on file open */
 308:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_MODIFIED	0x40	/* File has been modified */
 309:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_DIRTY	0x80	/* FIL.buf[] needs to be written-back */
 310:Middlewares/Third_Party/FatFs/src/ff.c **** 
 311:Middlewares/Third_Party/FatFs/src/ff.c **** 
 312:Middlewares/Third_Party/FatFs/src/ff.c **** /* Name status flags in fn[] */
 313:Middlewares/Third_Party/FatFs/src/ff.c **** #define NSFLAG		11		/* Index of the name status byte */
 314:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LOSS		0x01	/* Out of 8.3 format */
 315:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LFN		0x02	/* Force to create LFN entry */
 316:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LAST		0x04	/* Last segment */
 317:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_BODY		0x08	/* Lower case flag (body) */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 7


 318:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_EXT		0x10	/* Lower case flag (ext) */
 319:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_DOT		0x20	/* Dot entry */
 320:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_NOLFN	0x40	/* Do not find LFN */
 321:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_NONAME	0x80	/* Not followed */
 322:Middlewares/Third_Party/FatFs/src/ff.c **** 
 323:Middlewares/Third_Party/FatFs/src/ff.c **** 
 324:Middlewares/Third_Party/FatFs/src/ff.c **** /* Limits and boundaries */
 325:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_DIR		0x200000		/* Max size of FAT directory */
 326:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_DIR_EX	0x10000000		/* Max size of exFAT directory */
 327:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_FAT12	0xFF5			/* Max FAT12 clusters (differs from specs, but correct for real DOS/Windo
 328:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_FAT16	0xFFF5			/* Max FAT16 clusters (differs from specs, but correct for real DOS/Wind
 329:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_FAT32	0x0FFFFFF5		/* Max FAT32 clusters (not specified, practical limit) */
 330:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_EXFAT	0x7FFFFFFD		/* Max exFAT clusters (differs from specs, implementation limit) */
 331:Middlewares/Third_Party/FatFs/src/ff.c **** 
 332:Middlewares/Third_Party/FatFs/src/ff.c **** 
 333:Middlewares/Third_Party/FatFs/src/ff.c **** /* FatFs refers the FAT structure as simple byte array instead of structure member
 334:Middlewares/Third_Party/FatFs/src/ff.c **** / because the C structure is not binary compatible between different platforms */
 335:Middlewares/Third_Party/FatFs/src/ff.c **** 
 336:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_JmpBoot			0		/* x86 jump instruction (3-byte) */
 337:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_OEMName			3		/* OEM name (8-byte) */
 338:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSec		11		/* Sector size [byte] (WORD) */
 339:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClus		13		/* Cluster size [sector] (BYTE) */
 340:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RsvdSecCnt		14		/* Size of reserved area [sector] (WORD) */
 341:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATs			16		/* Number of FATs (BYTE) */
 342:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootEntCnt		17		/* Size of root directory area for FAT12/16 [entry] (WORD) */
 343:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec16		19		/* Volume size (16-bit) [sector] (WORD) */
 344:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_Media			21		/* Media descriptor byte (BYTE) */
 345:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz16			22		/* FAT size (16-bit) [sector] (WORD) */
 346:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerTrk		24		/* Track size for int13h [sector] (WORD) */
 347:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumHeads		26		/* Number of heads for int13h (WORD) */
 348:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_HiddSec			28		/* Volume offset from top of the drive (DWORD) */
 349:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec32		32		/* Volume size (32-bit) [sector] (DWORD) */
 350:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum			36		/* Physical drive number for int13h (BYTE) */
 351:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_NTres			37		/* Error flag (BYTE) */
 352:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig			38		/* Extended boot signature (BYTE) */
 353:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID			39		/* Volume serial number (DWORD) */
 354:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab			43		/* Volume label string (8-byte) */
 355:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType		54		/* File system type string (8-byte) */
 356:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCode			62		/* Boot code (448-byte) */
 357:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_55AA				510		/* Signature word (WORD) */
 358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 359:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz32			36		/* FAT32: FAT size [sector] (DWORD) */
 360:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ExtFlags32		40		/* FAT32: Extended flags (WORD) */
 361:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVer32			42		/* FAT32: File system version (WORD) */
 362:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClus32		44		/* FAT32: Root directory cluster (DWORD) */
 363:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSInfo32		48		/* FAT32: Offset of FSINFO sector (WORD) */
 364:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BkBootSec32		50		/* FAT32: Offset of backup boot sector (WORD) */
 365:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum32			64		/* FAT32: Physical drive number for int13h (BYTE) */
 366:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_NTres32			65		/* FAT32: Error flag (BYTE) */
 367:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig32		66		/* FAT32: Extended boot signature (BYTE) */
 368:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID32			67		/* FAT32: Volume serial number (DWORD) */
 369:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab32			71		/* FAT32: Volume label string (8-byte) */
 370:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType32		82		/* FAT32: File system type string (8-byte) */
 371:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCode32		90		/* FAT32: Boot code (420-byte) */
 372:Middlewares/Third_Party/FatFs/src/ff.c **** 
 373:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ZeroedEx		11		/* exFAT: MBZ field (53-byte) */
 374:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolOfsEx		64		/* exFAT: Volume offset from top of the drive [sector] (QWORD) */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 8


 375:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSecEx		72		/* exFAT: Volume size [sector] (QWORD) */
 376:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FatOfsEx		80		/* exFAT: FAT offset from top of the volume [sector] (DWORD) */
 377:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FatSzEx			84		/* exFAT: FAT size [sector] (DWORD) */
 378:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_DataOfsEx		88		/* exFAT: Data offset from top of the volume [sector] (DWORD) */
 379:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumClusEx		92		/* exFAT: Number of clusters (DWORD) */
 380:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClusEx		96		/* exFAT: Root directory start cluster (DWORD) */
 381:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolIDEx			100		/* exFAT: Volume serial number (DWORD) */
 382:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVerEx			104		/* exFAT: File system version (WORD) */
 383:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolFlagEx		106		/* exFAT: Volume flags (BYTE) */
 384:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ActFatEx		107		/* exFAT: Active FAT flags (BYTE) */
 385:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSecEx	108		/* exFAT: Log2 of sector size in unit of byte (BYTE) */
 386:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClusEx	109		/* exFAT: Log2 of cluster size in unit of sector (BYTE) */
 387:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATsEx		110		/* exFAT: Number of FATs (BYTE) */
 388:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_DrvNumEx		111		/* exFAT: Physical drive number for int13h (BYTE) */
 389:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_PercInUseEx		112		/* exFAT: Percent in use (BYTE) */
 390:Middlewares/Third_Party/FatFs/src/ff.c **** #define	BPB_RsvdEx			113		/* exFAT: Reserved (7-byte) */
 391:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCodeEx		120		/* exFAT: Boot code (390-byte) */
 392:Middlewares/Third_Party/FatFs/src/ff.c **** 
 393:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Name			0		/* Short file name (11-byte) */
 394:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Attr			11		/* Attribute (BYTE) */
 395:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_NTres			12		/* Lower case flag (BYTE) */
 396:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_CrtTime10		13		/* Created time sub-second (BYTE) */
 397:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_CrtTime			14		/* Created time (DWORD) */
 398:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_LstAccDate		18		/* Last accessed date (WORD) */
 399:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusHI		20		/* Higher 16-bit of first cluster (WORD) */
 400:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_ModTime			22		/* Modified time (DWORD) */
 401:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusLO		26		/* Lower 16-bit of first cluster (WORD) */
 402:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FileSize		28		/* File size (DWORD) */
 403:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Ord			0		/* LFN: LFN order and LLE flag (BYTE) */
 404:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Attr			11		/* LFN: LFN attribute (BYTE) */
 405:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Type			12		/* LFN: Entry type (BYTE) */
 406:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Chksum			13		/* LFN: Checksum of the SFN (BYTE) */
 407:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_FstClusLO		26		/* LFN: MBZ field (WORD) */
 408:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Type			0		/* exFAT: Type of exFAT directory entry (BYTE) */
 409:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumLabel		1		/* exFAT: Number of volume label characters (BYTE) */
 410:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Label			2		/* exFAT: Volume label (11-WORD) */
 411:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CaseSum		4		/* exFAT: Sum of case conversion table (DWORD) */
 412:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumSec			1		/* exFAT: Number of secondary entries (BYTE) */
 413:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_SetSum			2		/* exFAT: Sum of the set of directory entries (WORD) */
 414:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Attr			4		/* exFAT: File attribute (WORD) */
 415:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTime		8		/* exFAT: Created time (DWORD) */
 416:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTime		12		/* exFAT: Modified time (DWORD) */
 417:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_AccTime		16		/* exFAT: Last accessed time (DWORD) */
 418:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTime10		20		/* exFAT: Created time subsecond (BYTE) */
 419:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTime10		21		/* exFAT: Modified time subsecond (BYTE) */
 420:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTZ			22		/* exFAT: Created timezone (BYTE) */
 421:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTZ			23		/* exFAT: Modified timezone (BYTE) */
 422:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_AccTZ			24		/* exFAT: Last accessed timezone (BYTE) */
 423:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_GenFlags		33		/* exFAT: General secondary flags (WORD) */
 424:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumName		35		/* exFAT: Number of file name characters (BYTE) */
 425:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NameHash		36		/* exFAT: Hash of file name (WORD) */
 426:Middlewares/Third_Party/FatFs/src/ff.c **** #define XDIR_ValidFileSize	40		/* exFAT: Valid file size (QWORD) */
 427:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_FstClus		52		/* exFAT: First cluster of the file data (DWORD) */
 428:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_FileSize		56		/* exFAT: File/Directory size (QWORD) */
 429:Middlewares/Third_Party/FatFs/src/ff.c **** 
 430:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZDIRE				32		/* Size of a directory entry */
 431:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DDEM				0xE5	/* Deleted directory entry mark set to DIR_Name[0] */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 9


 432:Middlewares/Third_Party/FatFs/src/ff.c **** #define	RDDEM				0x05	/* Replacement of the character collides with DDEM */
 433:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LLEF				0x40	/* Last long entry flag in LDIR_Ord */
 434:Middlewares/Third_Party/FatFs/src/ff.c **** 
 435:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_LeadSig			0		/* FAT32 FSI: Leading signature (DWORD) */
 436:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_StrucSig		484		/* FAT32 FSI: Structure signature (DWORD) */
 437:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Free_Count		488		/* FAT32 FSI: Number of free clusters (DWORD) */
 438:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Nxt_Free		492		/* FAT32 FSI: Last allocated cluster (DWORD) */
 439:Middlewares/Third_Party/FatFs/src/ff.c **** 
 440:Middlewares/Third_Party/FatFs/src/ff.c **** #define MBR_Table			446		/* MBR: Offset of partition table in the MBR */
 441:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZ_PTE				16		/* MBR: Size of a partition table entry */
 442:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_Boot			0		/* MBR PTE: Boot indicator */
 443:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StHead			1		/* MBR PTE: Start head */
 444:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StSec			2		/* MBR PTE: Start sector */
 445:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StCyl			3		/* MBR PTE: Start cylinder */
 446:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_System			4		/* MBR PTE: System ID */
 447:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdHead			5		/* MBR PTE: End head */
 448:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdSec			6		/* MBR PTE: End sector */
 449:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdCyl			7		/* MBR PTE: End cylinder */
 450:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StLba			8		/* MBR PTE: Start in LBA */
 451:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_SizLba			12		/* MBR PTE: Size in LBA */
 452:Middlewares/Third_Party/FatFs/src/ff.c **** 
 453:Middlewares/Third_Party/FatFs/src/ff.c **** 
 454:Middlewares/Third_Party/FatFs/src/ff.c **** /* Post process after fatal error on file operation */
 455:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ABORT(fs, res)		{ fp->err = (BYTE)(res); LEAVE_FF(fs, res); }
 456:Middlewares/Third_Party/FatFs/src/ff.c **** 
 457:Middlewares/Third_Party/FatFs/src/ff.c **** 
 458:Middlewares/Third_Party/FatFs/src/ff.c **** /* Reentrancy related */
 459:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 460:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 461:Middlewares/Third_Party/FatFs/src/ff.c **** #error Static LFN work area cannot be used at thread-safe configuration
 462:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 463:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)		{ if (!lock_fs(fs)) return FR_TIMEOUT; }
 464:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LEAVE_FF(fs, res)	{ unlock_fs(fs, res); return res; }
 465:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 466:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)
 467:Middlewares/Third_Party/FatFs/src/ff.c **** #define LEAVE_FF(fs, res)	return res
 468:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 469:Middlewares/Third_Party/FatFs/src/ff.c **** 
 470:Middlewares/Third_Party/FatFs/src/ff.c **** 
 471:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of volume - partition conversion */
 472:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
 473:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PD(vol) VolToPart[vol].pd	/* Get physical drive number */
 474:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PT(vol) VolToPart[vol].pt	/* Get partition index */
 475:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 476:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PD(vol) (BYTE)(vol)	/* Each logical drive is bound to the same physical drive number */
 477:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PT(vol) 0			/* Find first valid partition or in SFD */
 478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 479:Middlewares/Third_Party/FatFs/src/ff.c **** 
 480:Middlewares/Third_Party/FatFs/src/ff.c **** 
 481:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of sector size */
 482:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_MAX_SS < _MIN_SS) || (_MAX_SS != 512 && _MAX_SS != 1024 && _MAX_SS != 2048 && _MAX_SS != 4096
 483:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong sector size configuration
 484:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 485:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS == _MIN_SS
 486:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((UINT)_MAX_SS)	/* Fixed sector size */
 487:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 488:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((fs)->ssize)	/* Variable sector size */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 10


 489:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 490:Middlewares/Third_Party/FatFs/src/ff.c **** 
 491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 492:Middlewares/Third_Party/FatFs/src/ff.c **** /* Timestamp */
 493:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_NORTC == 1
 494:Middlewares/Third_Party/FatFs/src/ff.c **** #if _NORTC_YEAR < 1980 || _NORTC_YEAR > 2107 || _NORTC_MON < 1 || _NORTC_MON > 12 || _NORTC_MDAY < 
 495:Middlewares/Third_Party/FatFs/src/ff.c **** #error Invalid _FS_NORTC settings
 496:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 497:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	((DWORD)(_NORTC_YEAR - 1980) << 25 | (DWORD)_NORTC_MON << 21 | (DWORD)_NORTC_
 498:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 499:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	get_fattime()
 500:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 501:Middlewares/Third_Party/FatFs/src/ff.c **** 
 502:Middlewares/Third_Party/FatFs/src/ff.c **** 
 503:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock controls */
 504:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 505:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_READONLY
 506:Middlewares/Third_Party/FatFs/src/ff.c **** #error _FS_LOCK must be 0 at read-only configuration
 507:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 508:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
 509:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;		/* Object ID 1, volume (NULL:blank entry) */
 510:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clu;		/* Object ID 2, containing directory (0:root) */
 511:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs;		/* Object ID 3, offset in the directory */
 512:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ctr;		/* Object open counter, 0:none, 0x01..0xFF:read mode open count, 0x100:write mode */
 513:Middlewares/Third_Party/FatFs/src/ff.c **** } FILESEM;
 514:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 515:Middlewares/Third_Party/FatFs/src/ff.c **** 
 516:Middlewares/Third_Party/FatFs/src/ff.c **** 
 517:Middlewares/Third_Party/FatFs/src/ff.c **** 
 518:Middlewares/Third_Party/FatFs/src/ff.c **** 
 519:Middlewares/Third_Party/FatFs/src/ff.c **** 
 520:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 521:Middlewares/Third_Party/FatFs/src/ff.c **** 
 522:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Work Area
 523:Middlewares/Third_Party/FatFs/src/ff.c **** 
 524:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 525:Middlewares/Third_Party/FatFs/src/ff.c **** 
 526:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remark: Variables defined here without initial value shall be guaranteed
 527:Middlewares/Third_Party/FatFs/src/ff.c **** /  zero/null at start-up. If not, the linker option or start-up routine is
 528:Middlewares/Third_Party/FatFs/src/ff.c **** /  not compliance with C standard. */
 529:Middlewares/Third_Party/FatFs/src/ff.c **** 
 530:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES < 1 || _VOLUMES > 10
 531:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _VOLUMES setting
 532:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 533:Middlewares/Third_Party/FatFs/src/ff.c **** static FATFS *FatFs[_VOLUMES];	/* Pointer to the file system objects (logical drives) */
 534:Middlewares/Third_Party/FatFs/src/ff.c **** static WORD Fsid;				/* File system mount ID */
 535:Middlewares/Third_Party/FatFs/src/ff.c **** 
 536:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0 && _VOLUMES >= 2
 537:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE CurrVol;			/* Current drive */
 538:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 539:Middlewares/Third_Party/FatFs/src/ff.c **** 
 540:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 541:Middlewares/Third_Party/FatFs/src/ff.c **** static FILESEM Files[_FS_LOCK];	/* Open object lock semaphores */
 542:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 543:Middlewares/Third_Party/FatFs/src/ff.c **** 
 544:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 0		/* Non-LFN configuration */
 545:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 11


 546:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)
 547:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 548:Middlewares/Third_Party/FatFs/src/ff.c **** 
 549:Middlewares/Third_Party/FatFs/src/ff.c **** #else					/* LFN configuration */
 550:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 12 || _MAX_LFN > 255
 551:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _MAX_LFN value
 552:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 553:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAXDIRB(nc)	((nc + 44U) / 15 * SZDIRE)
 554:Middlewares/Third_Party/FatFs/src/ff.c **** 
 555:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1		/* LFN enabled with static working buffer */
 556:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 557:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE	DirBuf[MAXDIRB(_MAX_LFN)];	/* Directory entry block scratchpad buffer */
 558:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 559:Middlewares/Third_Party/FatFs/src/ff.c **** static WCHAR LfnBuf[_MAX_LFN + 1];	/* LFN enabled with static working buffer */
 560:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF
 561:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)
 562:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 563:Middlewares/Third_Party/FatFs/src/ff.c **** 
 564:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 2 	/* LFN enabled with dynamic working buffer on the stack */
 565:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 566:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR lbuf[_MAX_LFN+1]; BYTE dbuf[MAXDIRB(_MAX_LFN)];
 567:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; (fs)->dirbuf = dbuf; }
 568:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 569:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 570:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR lbuf[_MAX_LFN+1];
 571:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; }
 572:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 573:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 574:Middlewares/Third_Party/FatFs/src/ff.c **** 
 575:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 3 	/* LFN enabled with dynamic working buffer on the heap */
 576:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 577:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR *lfn;
 578:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((_MAX_LFN+1)*2 + MAXDIRB(_MAX_LFN)); if (!lfn) LEAVE_FF
 579:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()	ff_memfree(lfn)
 580:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 581:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR *lfn;
 582:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((_MAX_LFN+1)*2); if (!lfn) LEAVE_FF(fs, FR_NOT_ENOUGH_C
 583:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()	ff_memfree(lfn)
 584:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 585:Middlewares/Third_Party/FatFs/src/ff.c **** 
 586:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 587:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _USE_LFN setting
 588:Middlewares/Third_Party/FatFs/src/ff.c **** 
 589:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 590:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* else _USE_LFN == 0 */
 591:Middlewares/Third_Party/FatFs/src/ff.c **** 
 592:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 593:Middlewares/Third_Party/FatFs/src/ff.c **** static const BYTE ExCvt[] = _EXCVT;	/* Upper conversion table for SBCS extended characters */
 594:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 595:Middlewares/Third_Party/FatFs/src/ff.c **** 
 596:Middlewares/Third_Party/FatFs/src/ff.c **** 
 597:Middlewares/Third_Party/FatFs/src/ff.c **** 
 598:Middlewares/Third_Party/FatFs/src/ff.c **** 
 599:Middlewares/Third_Party/FatFs/src/ff.c **** 
 600:Middlewares/Third_Party/FatFs/src/ff.c **** 
 601:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 602:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 12


 603:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Functions
 604:Middlewares/Third_Party/FatFs/src/ff.c **** 
 605:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 606:Middlewares/Third_Party/FatFs/src/ff.c **** 
 607:Middlewares/Third_Party/FatFs/src/ff.c **** 
 608:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 609:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load/Store multi-byte word in the FAT structure                       */
 610:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 611:Middlewares/Third_Party/FatFs/src/ff.c **** 
 612:Middlewares/Third_Party/FatFs/src/ff.c **** static
 613:Middlewares/Third_Party/FatFs/src/ff.c **** WORD ld_word (const BYTE* ptr)	/*	 Load a 2-byte little-endian word */
 614:Middlewares/Third_Party/FatFs/src/ff.c **** {
  27              		.loc 1 614 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 615:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD rv;
 616:Middlewares/Third_Party/FatFs/src/ff.c **** 
 617:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[1];
  33              		.loc 1 617 0
  34 0000 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
  35              	.LVL1:
 618:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
  36              		.loc 1 618 0
  37 0002 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  38              	.LVL2:
 619:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 620:Middlewares/Third_Party/FatFs/src/ff.c **** }
  39              		.loc 1 620 0
  40 0004 40EA0220 		orr	r0, r0, r2, lsl #8
  41              	.LVL3:
  42 0008 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE131:
  46              		.section	.text.ld_dword,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu fpv4-sp-d16
  53              	ld_dword:
  54              	.LFB132:
 621:Middlewares/Third_Party/FatFs/src/ff.c **** 
 622:Middlewares/Third_Party/FatFs/src/ff.c **** static
 623:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
 624:Middlewares/Third_Party/FatFs/src/ff.c **** {
  55              		.loc 1 624 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL4:
 625:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD rv;
 626:Middlewares/Third_Party/FatFs/src/ff.c **** 
 627:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[3];
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 13


  61              		.loc 1 627 0
  62 0000 C278     		ldrb	r2, [r0, #3]	@ zero_extendqisi2
  63              	.LVL5:
 628:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[2];
  64              		.loc 1 628 0
  65 0002 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
  66 0004 43EA0222 		orr	r2, r3, r2, lsl #8
  67              	.LVL6:
 629:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[1];
  68              		.loc 1 629 0
  69 0008 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  70 000a 43EA0223 		orr	r3, r3, r2, lsl #8
  71              	.LVL7:
 630:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
  72              		.loc 1 630 0
  73 000e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  74              	.LVL8:
 631:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 632:Middlewares/Third_Party/FatFs/src/ff.c **** }
  75              		.loc 1 632 0
  76 0010 40EA0320 		orr	r0, r0, r3, lsl #8
  77              	.LVL9:
  78 0014 7047     		bx	lr
  79              		.cfi_endproc
  80              	.LFE132:
  82              		.section	.text.st_word,"ax",%progbits
  83              		.align	1
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv4-sp-d16
  89              	st_word:
  90              	.LFB133:
 633:Middlewares/Third_Party/FatFs/src/ff.c **** 
 634:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 635:Middlewares/Third_Party/FatFs/src/ff.c **** static
 636:Middlewares/Third_Party/FatFs/src/ff.c **** QWORD ld_qword (const BYTE* ptr)	/* Load an 8-byte little-endian word */
 637:Middlewares/Third_Party/FatFs/src/ff.c **** {
 638:Middlewares/Third_Party/FatFs/src/ff.c **** 	QWORD rv;
 639:Middlewares/Third_Party/FatFs/src/ff.c **** 
 640:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[7];
 641:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[6];
 642:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[5];
 643:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[4];
 644:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[3];
 645:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[2];
 646:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[1];
 647:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
 648:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 649:Middlewares/Third_Party/FatFs/src/ff.c **** }
 650:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 651:Middlewares/Third_Party/FatFs/src/ff.c **** 
 652:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 653:Middlewares/Third_Party/FatFs/src/ff.c **** static
 654:Middlewares/Third_Party/FatFs/src/ff.c **** void st_word (BYTE* ptr, WORD val)	/* Store a 2-byte word in little-endian */
 655:Middlewares/Third_Party/FatFs/src/ff.c **** {
  91              		.loc 1 655 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 14


  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.LVL10:
 656:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
  97              		.loc 1 656 0
  98 0000 0170     		strb	r1, [r0]
  99              	.LVL11:
 657:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 100              		.loc 1 657 0
 101 0002 090A     		lsrs	r1, r1, #8
 102              	.LVL12:
 103 0004 4170     		strb	r1, [r0, #1]
 658:Middlewares/Third_Party/FatFs/src/ff.c **** }
 104              		.loc 1 658 0
 105 0006 7047     		bx	lr
 106              		.cfi_endproc
 107              	.LFE133:
 109              		.section	.text.st_dword,"ax",%progbits
 110              		.align	1
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv4-sp-d16
 116              	st_dword:
 117              	.LFB134:
 659:Middlewares/Third_Party/FatFs/src/ff.c **** 
 660:Middlewares/Third_Party/FatFs/src/ff.c **** static
 661:Middlewares/Third_Party/FatFs/src/ff.c **** void st_dword (BYTE* ptr, DWORD val)	/* Store a 4-byte word in little-endian */
 662:Middlewares/Third_Party/FatFs/src/ff.c **** {
 118              		.loc 1 662 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123              	.LVL13:
 663:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 124              		.loc 1 663 0
 125 0000 0170     		strb	r1, [r0]
 126              	.LVL14:
 664:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 127              		.loc 1 664 0
 128 0002 C1F30723 		ubfx	r3, r1, #8, #8
 129 0006 4370     		strb	r3, [r0, #1]
 130              	.LVL15:
 665:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 131              		.loc 1 665 0
 132 0008 C1F30743 		ubfx	r3, r1, #16, #8
 133 000c 8370     		strb	r3, [r0, #2]
 134              	.LVL16:
 666:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 135              		.loc 1 666 0
 136 000e 090E     		lsrs	r1, r1, #24
 137              	.LVL17:
 138 0010 C170     		strb	r1, [r0, #3]
 667:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 15


 139              		.loc 1 667 0
 140 0012 7047     		bx	lr
 141              		.cfi_endproc
 142              	.LFE134:
 144              		.section	.text.mem_cpy,"ax",%progbits
 145              		.align	1
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu fpv4-sp-d16
 151              	mem_cpy:
 152              	.LFB135:
 668:Middlewares/Third_Party/FatFs/src/ff.c **** 
 669:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 670:Middlewares/Third_Party/FatFs/src/ff.c **** static
 671:Middlewares/Third_Party/FatFs/src/ff.c **** void st_qword (BYTE* ptr, QWORD val)	/* Store an 8-byte word in little-endian */
 672:Middlewares/Third_Party/FatFs/src/ff.c **** {
 673:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 674:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 675:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 676:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 677:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 678:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 679:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 681:Middlewares/Third_Party/FatFs/src/ff.c **** }
 682:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 683:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
 684:Middlewares/Third_Party/FatFs/src/ff.c **** 
 685:Middlewares/Third_Party/FatFs/src/ff.c **** 
 686:Middlewares/Third_Party/FatFs/src/ff.c **** 
 687:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 688:Middlewares/Third_Party/FatFs/src/ff.c **** /* String functions                                                      */
 689:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 690:Middlewares/Third_Party/FatFs/src/ff.c **** 
 691:Middlewares/Third_Party/FatFs/src/ff.c **** /* Copy memory to memory */
 692:Middlewares/Third_Party/FatFs/src/ff.c **** static
 693:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_cpy (void* dst, const void* src, UINT cnt) {
 153              		.loc 1 693 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158              	.LVL18:
 694:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 695:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 696:Middlewares/Third_Party/FatFs/src/ff.c **** 
 697:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cnt) {
 159              		.loc 1 697 0
 160 0000 1346     		mov	r3, r2
 161 0002 2AB1     		cbz	r2, .L5
 162              	.LVL19:
 163              	.L7:
 698:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 699:Middlewares/Third_Party/FatFs/src/ff.c **** 			*d++ = *s++;
 164              		.loc 1 699 0 discriminator 1
 165 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 16


 166 0006 0270     		strb	r2, [r0]
 167              	.LVL20:
 168 0008 0130     		adds	r0, r0, #1
 169              	.LVL21:
 170 000a 0131     		adds	r1, r1, #1
 171              	.LVL22:
 700:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (--cnt);
 172              		.loc 1 700 0 discriminator 1
 173 000c 013B     		subs	r3, r3, #1
 174              	.LVL23:
 175 000e F9D1     		bne	.L7
 176              	.L5:
 701:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 702:Middlewares/Third_Party/FatFs/src/ff.c **** }
 177              		.loc 1 702 0
 178 0010 7047     		bx	lr
 179              		.cfi_endproc
 180              	.LFE135:
 182              		.section	.text.mem_set,"ax",%progbits
 183              		.align	1
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu fpv4-sp-d16
 189              	mem_set:
 190              	.LFB136:
 703:Middlewares/Third_Party/FatFs/src/ff.c **** 
 704:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill memory block */
 705:Middlewares/Third_Party/FatFs/src/ff.c **** static
 706:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_set (void* dst, int val, UINT cnt) {
 191              		.loc 1 706 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196              	.LVL24:
 197              	.L9:
 707:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 708:Middlewares/Third_Party/FatFs/src/ff.c **** 
 709:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 710:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = (BYTE)val;
 198              		.loc 1 710 0 discriminator 1
 199 0000 0170     		strb	r1, [r0]
 200              	.LVL25:
 201 0002 0130     		adds	r0, r0, #1
 202              	.LVL26:
 711:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt);
 203              		.loc 1 711 0 discriminator 1
 204 0004 013A     		subs	r2, r2, #1
 205              	.LVL27:
 206 0006 FBD1     		bne	.L9
 712:Middlewares/Third_Party/FatFs/src/ff.c **** }
 207              		.loc 1 712 0
 208 0008 7047     		bx	lr
 209              		.cfi_endproc
 210              	.LFE136:
 212              		.section	.text.mem_cmp,"ax",%progbits
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 17


 213              		.align	1
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu fpv4-sp-d16
 219              	mem_cmp:
 220              	.LFB137:
 713:Middlewares/Third_Party/FatFs/src/ff.c **** 
 714:Middlewares/Third_Party/FatFs/src/ff.c **** /* Compare memory block */
 715:Middlewares/Third_Party/FatFs/src/ff.c **** static
 716:Middlewares/Third_Party/FatFs/src/ff.c **** int mem_cmp (const void* dst, const void* src, UINT cnt) {	/* ZR:same, NZ:different */
 221              		.loc 1 716 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226              	.LVL28:
 227 0000 30B4     		push	{r4, r5}
 228              	.LCFI0:
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 4, -8
 231              		.cfi_offset 5, -4
 232              	.LVL29:
 233              	.L12:
 717:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 718:Middlewares/Third_Party/FatFs/src/ff.c **** 	int r = 0;
 719:Middlewares/Third_Party/FatFs/src/ff.c **** 
 720:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 		r = *d++ - *s++;
 234              		.loc 1 721 0 discriminator 2
 235 0002 451C     		adds	r5, r0, #1
 236              	.LVL30:
 237 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 238              	.LVL31:
 239 0006 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 240 0008 1B1A     		subs	r3, r3, r0
 241              	.LVL32:
 722:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt && r == 0);
 242              		.loc 1 722 0 discriminator 2
 243 000a 013A     		subs	r2, r2, #1
 244              	.LVL33:
 245 000c 04D0     		beq	.L10
 246 000e 4C1C     		adds	r4, r1, #1
 247              	.LVL34:
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt && r == 0);
 248              		.loc 1 721 0 discriminator 1
 249 0010 2846     		mov	r0, r5
 250 0012 2146     		mov	r1, r4
 251              		.loc 1 722 0 discriminator 1
 252 0014 002B     		cmp	r3, #0
 253 0016 F4D0     		beq	.L12
 254              	.LVL35:
 255              	.L10:
 723:Middlewares/Third_Party/FatFs/src/ff.c **** 
 724:Middlewares/Third_Party/FatFs/src/ff.c **** 	return r;
 725:Middlewares/Third_Party/FatFs/src/ff.c **** }
 256              		.loc 1 725 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 18


 257 0018 1846     		mov	r0, r3
 258 001a 30BC     		pop	{r4, r5}
 259              	.LCFI1:
 260              		.cfi_restore 5
 261              		.cfi_restore 4
 262              		.cfi_def_cfa_offset 0
 263              	.LVL36:
 264 001c 7047     		bx	lr
 265              		.cfi_endproc
 266              	.LFE137:
 268              		.section	.text.chk_chr,"ax",%progbits
 269              		.align	1
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv4-sp-d16
 275              	chk_chr:
 276              	.LFB138:
 726:Middlewares/Third_Party/FatFs/src/ff.c **** 
 727:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if chr is contained in the string */
 728:Middlewares/Third_Party/FatFs/src/ff.c **** static
 729:Middlewares/Third_Party/FatFs/src/ff.c **** int chk_chr (const char* str, int chr) {	/* NZ:contained, ZR:not contained */
 277              		.loc 1 729 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              		@ link register save eliminated.
 282              	.LVL37:
 730:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str && *str != chr) str++;
 283              		.loc 1 730 0
 284 0000 00E0     		b	.L15
 285              	.L17:
 286              		.loc 1 730 0 is_stmt 0 discriminator 3
 287 0002 0130     		adds	r0, r0, #1
 288              	.LVL38:
 289              	.L15:
 290              		.loc 1 730 0 discriminator 1
 291 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 292 0006 0BB1     		cbz	r3, .L16
 293              		.loc 1 730 0 discriminator 2
 294 0008 8B42     		cmp	r3, r1
 295 000a FAD1     		bne	.L17
 296              	.L16:
 731:Middlewares/Third_Party/FatFs/src/ff.c **** 	return *str;
 732:Middlewares/Third_Party/FatFs/src/ff.c **** }
 297              		.loc 1 732 0 is_stmt 1
 298 000c 1846     		mov	r0, r3
 299              	.LVL39:
 300 000e 7047     		bx	lr
 301              		.cfi_endproc
 302              	.LFE138:
 304              		.section	.text.chk_lock,"ax",%progbits
 305              		.align	1
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 19


 311              	chk_lock:
 312              	.LFB141:
 733:Middlewares/Third_Party/FatFs/src/ff.c **** 
 734:Middlewares/Third_Party/FatFs/src/ff.c **** 
 735:Middlewares/Third_Party/FatFs/src/ff.c **** 
 736:Middlewares/Third_Party/FatFs/src/ff.c **** 
 737:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 738:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 739:Middlewares/Third_Party/FatFs/src/ff.c **** /* Request/Release grant to access the volume                            */
 740:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 741:Middlewares/Third_Party/FatFs/src/ff.c **** static
 742:Middlewares/Third_Party/FatFs/src/ff.c **** int lock_fs (
 743:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 744:Middlewares/Third_Party/FatFs/src/ff.c **** )
 745:Middlewares/Third_Party/FatFs/src/ff.c **** {
 746:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (fs && ff_req_grant(fs->sobj)) ? 1 : 0;
 747:Middlewares/Third_Party/FatFs/src/ff.c **** }
 748:Middlewares/Third_Party/FatFs/src/ff.c **** 
 749:Middlewares/Third_Party/FatFs/src/ff.c **** 
 750:Middlewares/Third_Party/FatFs/src/ff.c **** static
 751:Middlewares/Third_Party/FatFs/src/ff.c **** void unlock_fs (
 752:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 753:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res		/* Result code to be returned */
 754:Middlewares/Third_Party/FatFs/src/ff.c **** )
 755:Middlewares/Third_Party/FatFs/src/ff.c **** {
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
 757:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 758:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 759:Middlewares/Third_Party/FatFs/src/ff.c **** }
 760:Middlewares/Third_Party/FatFs/src/ff.c **** 
 761:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 762:Middlewares/Third_Party/FatFs/src/ff.c **** 
 763:Middlewares/Third_Party/FatFs/src/ff.c **** 
 764:Middlewares/Third_Party/FatFs/src/ff.c **** 
 765:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 766:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 767:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock control functions                                           */
 768:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 769:Middlewares/Third_Party/FatFs/src/ff.c **** 
 770:Middlewares/Third_Party/FatFs/src/ff.c **** static
 771:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT chk_lock (	/* Check if the file can be accessed */
 772:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Directory object pointing the file to be checked */
 773:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc			/* Desired access type (0:Read, 1:Write, 2:Delete/Rename) */
 774:Middlewares/Third_Party/FatFs/src/ff.c **** )
 775:Middlewares/Third_Party/FatFs/src/ff.c **** {
 313              		.loc 1 775 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              		@ link register save eliminated.
 318              	.LVL40:
 319 0000 30B4     		push	{r4, r5}
 320              	.LCFI2:
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 4, -8
 323              		.cfi_offset 5, -4
 324              	.LVL41:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 20


 776:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, be;
 777:Middlewares/Third_Party/FatFs/src/ff.c **** 
 778:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Search file semaphore table */
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = be = 0; i < _FS_LOCK; i++) {
 325              		.loc 1 779 0
 326 0002 0025     		movs	r5, #0
 327 0004 2B46     		mov	r3, r5
 328 0006 01E0     		b	.L19
 329              	.LVL42:
 330              	.L25:
 780:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matched with an open object */
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 784:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 785:Middlewares/Third_Party/FatFs/src/ff.c **** 			be = 1;
 331              		.loc 1 785 0
 332 0008 0125     		movs	r5, #1
 333              	.LVL43:
 334              	.L20:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 335              		.loc 1 779 0 discriminator 2
 336 000a 0133     		adds	r3, r3, #1
 337              	.LVL44:
 338              	.L19:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 339              		.loc 1 779 0 is_stmt 0 discriminator 1
 340 000c 012B     		cmp	r3, #1
 341 000e 15D8     		bhi	.L21
 780:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 342              		.loc 1 780 0 is_stmt 1
 343 0010 1A01     		lsls	r2, r3, #4
 344 0012 174C     		ldr	r4, .L33
 345 0014 A258     		ldr	r2, [r4, r2]
 346 0016 002A     		cmp	r2, #0
 347 0018 F6D0     		beq	.L25
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 348              		.loc 1 781 0
 349 001a 0468     		ldr	r4, [r0]
 350 001c A242     		cmp	r2, r4
 351 001e F4D1     		bne	.L20
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 352              		.loc 1 782 0 discriminator 1
 353 0020 134A     		ldr	r2, .L33
 354 0022 02EB0312 		add	r2, r2, r3, lsl #4
 355 0026 5468     		ldr	r4, [r2, #4]
 356 0028 8268     		ldr	r2, [r0, #8]
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 357              		.loc 1 781 0 discriminator 1
 358 002a 9442     		cmp	r4, r2
 359 002c EDD1     		bne	.L20
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 360              		.loc 1 783 0
 361 002e 104A     		ldr	r2, .L33
 362 0030 02EB0312 		add	r2, r2, r3, lsl #4
 363 0034 9468     		ldr	r4, [r2, #8]
 364 0036 4269     		ldr	r2, [r0, #20]
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 21


 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 365              		.loc 1 782 0
 366 0038 9442     		cmp	r4, r2
 367 003a E6D1     		bne	.L20
 368              	.L21:
 786:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 787:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 788:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {	/* The object is not opened */
 369              		.loc 1 788 0
 370 003c 022B     		cmp	r3, #2
 371 003e 0AD0     		beq	.L31
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 790:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 791:Middlewares/Third_Party/FatFs/src/ff.c **** 
 792:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The object has been opened. Reject any open against writing file and all write mode open */
 793:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 372              		.loc 1 793 0
 373 0040 A1B9     		cbnz	r1, .L28
 374              		.loc 1 793 0 is_stmt 0 discriminator 2
 375 0042 0B4A     		ldr	r2, .L33
 376 0044 02EB0313 		add	r3, r2, r3, lsl #4
 377              	.LVL45:
 378 0048 9B89     		ldrh	r3, [r3, #12]
 379 004a B3F5807F 		cmp	r3, #256
 380 004e 07D0     		beq	.L32
 381              		.loc 1 793 0
 382 0050 0020     		movs	r0, #0
 383              	.LVL46:
 384              	.L24:
 794:Middlewares/Third_Party/FatFs/src/ff.c **** }
 385              		.loc 1 794 0 is_stmt 1
 386 0052 30BC     		pop	{r4, r5}
 387              	.LCFI3:
 388              		.cfi_remember_state
 389              		.cfi_restore 5
 390              		.cfi_restore 4
 391              		.cfi_def_cfa_offset 0
 392              	.LVL47:
 393 0054 7047     		bx	lr
 394              	.LVL48:
 395              	.L31:
 396              	.LCFI4:
 397              		.cfi_restore_state
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 398              		.loc 1 789 0
 399 0056 2DB9     		cbnz	r5, .L26
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 400              		.loc 1 789 0 is_stmt 0 discriminator 2
 401 0058 0229     		cmp	r1, #2
 402 005a 05D1     		bne	.L27
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 403              		.loc 1 789 0
 404 005c 0020     		movs	r0, #0
 405              	.LVL49:
 406 005e F8E7     		b	.L24
 407              	.LVL50:
 408              	.L32:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 22


 793:Middlewares/Third_Party/FatFs/src/ff.c **** }
 409              		.loc 1 793 0 is_stmt 1
 410 0060 1020     		movs	r0, #16
 411              	.LVL51:
 412 0062 F6E7     		b	.L24
 413              	.LVL52:
 414              	.L26:
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 415              		.loc 1 789 0
 416 0064 0020     		movs	r0, #0
 417              	.LVL53:
 418 0066 F4E7     		b	.L24
 419              	.LVL54:
 420              	.L27:
 421 0068 1220     		movs	r0, #18
 422              	.LVL55:
 423 006a F2E7     		b	.L24
 424              	.LVL56:
 425              	.L28:
 793:Middlewares/Third_Party/FatFs/src/ff.c **** }
 426              		.loc 1 793 0
 427 006c 1020     		movs	r0, #16
 428              	.LVL57:
 429 006e F0E7     		b	.L24
 430              	.L34:
 431              		.align	2
 432              	.L33:
 433 0070 00000000 		.word	.LANCHOR0
 434              		.cfi_endproc
 435              	.LFE141:
 437              		.section	.text.enq_lock,"ax",%progbits
 438              		.align	1
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 442              		.fpu fpv4-sp-d16
 444              	enq_lock:
 445              	.LFB142:
 795:Middlewares/Third_Party/FatFs/src/ff.c **** 
 796:Middlewares/Third_Party/FatFs/src/ff.c **** 
 797:Middlewares/Third_Party/FatFs/src/ff.c **** static
 798:Middlewares/Third_Party/FatFs/src/ff.c **** int enq_lock (void)	/* Check if an entry is available for a new object */
 799:Middlewares/Third_Party/FatFs/src/ff.c **** {
 446              		.loc 1 799 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 451              	.LVL58:
 800:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 801:Middlewares/Third_Party/FatFs/src/ff.c **** 
 802:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 452              		.loc 1 802 0
 453 0000 0020     		movs	r0, #0
 454 0002 00E0     		b	.L36
 455              	.LVL59:
 456              	.L38:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 23


 457              		.loc 1 802 0 is_stmt 0 discriminator 4
 458 0004 0130     		adds	r0, r0, #1
 459              	.LVL60:
 460              	.L36:
 461              		.loc 1 802 0 discriminator 1
 462 0006 0128     		cmp	r0, #1
 463 0008 04D8     		bhi	.L37
 464              		.loc 1 802 0 discriminator 3
 465 000a 0301     		lsls	r3, r0, #4
 466 000c 034A     		ldr	r2, .L39
 467 000e D358     		ldr	r3, [r2, r3]
 468 0010 002B     		cmp	r3, #0
 469 0012 F7D1     		bne	.L38
 470              	.L37:
 803:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
 804:Middlewares/Third_Party/FatFs/src/ff.c **** }
 471              		.loc 1 804 0 is_stmt 1
 472 0014 0238     		subs	r0, r0, #2
 473              	.LVL61:
 474 0016 18BF     		it	ne
 475 0018 0120     		movne	r0, #1
 476              	.LVL62:
 477 001a 7047     		bx	lr
 478              	.L40:
 479              		.align	2
 480              	.L39:
 481 001c 00000000 		.word	.LANCHOR0
 482              		.cfi_endproc
 483              	.LFE142:
 485              		.section	.text.inc_lock,"ax",%progbits
 486              		.align	1
 487              		.syntax unified
 488              		.thumb
 489              		.thumb_func
 490              		.fpu fpv4-sp-d16
 492              	inc_lock:
 493              	.LFB143:
 805:Middlewares/Third_Party/FatFs/src/ff.c **** 
 806:Middlewares/Third_Party/FatFs/src/ff.c **** 
 807:Middlewares/Third_Party/FatFs/src/ff.c **** static
 808:Middlewares/Third_Party/FatFs/src/ff.c **** UINT inc_lock (	/* Increment object open counter and returns its index (0:Internal error) */
 809:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,	/* Directory object pointing the file to register or increment */
 810:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc		/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
 811:Middlewares/Third_Party/FatFs/src/ff.c **** )
 812:Middlewares/Third_Party/FatFs/src/ff.c **** {
 494              		.loc 1 812 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498              		@ link register save eliminated.
 499              	.LVL63:
 500 0000 70B4     		push	{r4, r5, r6}
 501              	.LCFI5:
 502              		.cfi_def_cfa_offset 12
 503              		.cfi_offset 4, -12
 504              		.cfi_offset 5, -8
 505              		.cfi_offset 6, -4
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 24


 506              	.LVL64:
 813:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 814:Middlewares/Third_Party/FatFs/src/ff.c **** 
 815:Middlewares/Third_Party/FatFs/src/ff.c **** 
 816:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
 507              		.loc 1 816 0
 508 0002 0023     		movs	r3, #0
 509 0004 00E0     		b	.L42
 510              	.LVL65:
 511              	.L43:
 512              		.loc 1 816 0 is_stmt 0 discriminator 2
 513 0006 0133     		adds	r3, r3, #1
 514              	.LVL66:
 515              	.L42:
 516              		.loc 1 816 0 discriminator 1
 517 0008 012B     		cmp	r3, #1
 518 000a 13D8     		bhi	.L44
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 519              		.loc 1 817 0 is_stmt 1
 520 000c 1A01     		lsls	r2, r3, #4
 521 000e 244C     		ldr	r4, .L59
 522 0010 A458     		ldr	r4, [r4, r2]
 523 0012 0268     		ldr	r2, [r0]
 524 0014 9442     		cmp	r4, r2
 525 0016 F6D1     		bne	.L43
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 526              		.loc 1 818 0 discriminator 1
 527 0018 214A     		ldr	r2, .L59
 528 001a 02EB0312 		add	r2, r2, r3, lsl #4
 529 001e 5468     		ldr	r4, [r2, #4]
 530 0020 8268     		ldr	r2, [r0, #8]
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 531              		.loc 1 817 0 discriminator 1
 532 0022 9442     		cmp	r4, r2
 533 0024 EFD1     		bne	.L43
 819:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].ofs == dp->dptr) break;
 534              		.loc 1 819 0
 535 0026 1E4A     		ldr	r2, .L59
 536 0028 02EB0312 		add	r2, r2, r3, lsl #4
 537 002c 9468     		ldr	r4, [r2, #8]
 538 002e 4269     		ldr	r2, [r0, #20]
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 539              		.loc 1 818 0
 540 0030 9442     		cmp	r4, r2
 541 0032 E8D1     		bne	.L43
 542              	.L44:
 820:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 821:Middlewares/Third_Party/FatFs/src/ff.c **** 
 822:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {				/* Not opened. Register it as new. */
 543              		.loc 1 822 0
 544 0034 022B     		cmp	r3, #2
 545 0036 29D0     		beq	.L58
 546              	.LVL67:
 547              	.L47:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 825:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 25


 826:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 827:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ofs = dp->dptr;
 828:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 829:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 830:Middlewares/Third_Party/FatFs/src/ff.c **** 
 831:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 548              		.loc 1 831 0
 549 0038 21B1     		cbz	r1, .L51
 550              		.loc 1 831 0 is_stmt 0 discriminator 1
 551 003a 194A     		ldr	r2, .L59
 552 003c 02EB0312 		add	r2, r2, r3, lsl #4
 553 0040 9289     		ldrh	r2, [r2, #12]
 554 0042 52BB     		cbnz	r2, .L55
 555              	.L51:
 832:Middlewares/Third_Party/FatFs/src/ff.c **** 
 833:Middlewares/Third_Party/FatFs/src/ff.c **** 	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 556              		.loc 1 833 0 is_stmt 1
 557 0044 21BB     		cbnz	r1, .L56
 558              		.loc 1 833 0 is_stmt 0 discriminator 1
 559 0046 164A     		ldr	r2, .L59
 560 0048 02EB0312 		add	r2, r2, r3, lsl #4
 561 004c 9189     		ldrh	r1, [r2, #12]
 562              	.LVL68:
 563 004e 0131     		adds	r1, r1, #1
 564 0050 89B2     		uxth	r1, r1
 565              	.L52:
 566              		.loc 1 833 0 discriminator 4
 567 0052 134A     		ldr	r2, .L59
 568 0054 02EB0312 		add	r2, r2, r3, lsl #4
 569 0058 9181     		strh	r1, [r2, #12]	@ movhi
 834:Middlewares/Third_Party/FatFs/src/ff.c **** 
 835:Middlewares/Third_Party/FatFs/src/ff.c **** 	return i + 1;
 570              		.loc 1 835 0 is_stmt 1 discriminator 4
 571 005a 581C     		adds	r0, r3, #1
 572              	.L41:
 836:Middlewares/Third_Party/FatFs/src/ff.c **** }
 573              		.loc 1 836 0
 574 005c 70BC     		pop	{r4, r5, r6}
 575              	.LCFI6:
 576              		.cfi_remember_state
 577              		.cfi_restore 6
 578              		.cfi_restore 5
 579              		.cfi_restore 4
 580              		.cfi_def_cfa_offset 0
 581 005e 7047     		bx	lr
 582              	.LVL69:
 583              	.L49:
 584              	.LCFI7:
 585              		.cfi_restore_state
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 586              		.loc 1 823 0 discriminator 4
 587 0060 0133     		adds	r3, r3, #1
 588              	.LVL70:
 589              	.L46:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 590              		.loc 1 823 0 is_stmt 0 discriminator 1
 591 0062 012B     		cmp	r3, #1
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 26


 592 0064 04D8     		bhi	.L48
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 593              		.loc 1 823 0 discriminator 3
 594 0066 1A01     		lsls	r2, r3, #4
 595 0068 0D4C     		ldr	r4, .L59
 596 006a A258     		ldr	r2, [r4, r2]
 597 006c 002A     		cmp	r2, #0
 598 006e F7D1     		bne	.L49
 599              	.L48:
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 600              		.loc 1 824 0 is_stmt 1
 601 0070 022B     		cmp	r3, #2
 602 0072 10D0     		beq	.L54
 825:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 603              		.loc 1 825 0
 604 0074 0668     		ldr	r6, [r0]
 605 0076 0A4D     		ldr	r5, .L59
 606 0078 1C01     		lsls	r4, r3, #4
 607 007a 2A19     		adds	r2, r5, r4
 608 007c 2E51     		str	r6, [r5, r4]
 826:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ofs = dp->dptr;
 609              		.loc 1 826 0
 610 007e 8468     		ldr	r4, [r0, #8]
 611 0080 5460     		str	r4, [r2, #4]
 827:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 612              		.loc 1 827 0
 613 0082 4069     		ldr	r0, [r0, #20]
 614              	.LVL71:
 615 0084 9060     		str	r0, [r2, #8]
 828:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 616              		.loc 1 828 0
 617 0086 0020     		movs	r0, #0
 618 0088 9081     		strh	r0, [r2, #12]	@ movhi
 619 008a D5E7     		b	.L47
 620              	.LVL72:
 621              	.L58:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 622              		.loc 1 823 0
 623 008c 0023     		movs	r3, #0
 624              	.LVL73:
 625 008e E8E7     		b	.L46
 626              	.LVL74:
 627              	.L56:
 833:Middlewares/Third_Party/FatFs/src/ff.c **** 
 628              		.loc 1 833 0
 629 0090 4FF48071 		mov	r1, #256
 630              	.LVL75:
 631 0094 DDE7     		b	.L52
 632              	.LVL76:
 633              	.L54:
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 634              		.loc 1 824 0
 635 0096 0020     		movs	r0, #0
 636              	.LVL77:
 637 0098 E0E7     		b	.L41
 638              	.L55:
 831:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 27


 639              		.loc 1 831 0
 640 009a 0020     		movs	r0, #0
 641 009c DEE7     		b	.L41
 642              	.L60:
 643 009e 00BF     		.align	2
 644              	.L59:
 645 00a0 00000000 		.word	.LANCHOR0
 646              		.cfi_endproc
 647              	.LFE143:
 649              		.section	.text.dec_lock,"ax",%progbits
 650              		.align	1
 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 654              		.fpu fpv4-sp-d16
 656              	dec_lock:
 657              	.LFB144:
 837:Middlewares/Third_Party/FatFs/src/ff.c **** 
 838:Middlewares/Third_Party/FatFs/src/ff.c **** 
 839:Middlewares/Third_Party/FatFs/src/ff.c **** static
 840:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dec_lock (	/* Decrement object open counter */
 841:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i			/* Semaphore index (1..) */
 842:Middlewares/Third_Party/FatFs/src/ff.c **** )
 843:Middlewares/Third_Party/FatFs/src/ff.c **** {
 658              		.loc 1 843 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662              		@ link register save eliminated.
 663              	.LVL78:
 844:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD n;
 845:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 846:Middlewares/Third_Party/FatFs/src/ff.c **** 
 847:Middlewares/Third_Party/FatFs/src/ff.c **** 
 848:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (--i < _FS_LOCK) {	/* Shift index number origin from 0 */
 664              		.loc 1 848 0
 665 0000 0138     		subs	r0, r0, #1
 666              	.LVL79:
 667 0002 0128     		cmp	r0, #1
 668 0004 15D8     		bhi	.L64
 849:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = Files[i].ctr;
 669              		.loc 1 849 0
 670 0006 0D4B     		ldr	r3, .L67
 671 0008 03EB0013 		add	r3, r3, r0, lsl #4
 672 000c 9B89     		ldrh	r3, [r3, #12]
 673              	.LVL80:
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 674              		.loc 1 850 0
 675 000e B3F5807F 		cmp	r3, #256
 676 0012 03D0     		beq	.L65
 851:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
 677              		.loc 1 851 0
 678 0014 1BB1     		cbz	r3, .L63
 679              		.loc 1 851 0 is_stmt 0 discriminator 1
 680 0016 013B     		subs	r3, r3, #1
 681              	.LVL81:
 682 0018 9BB2     		uxth	r3, r3
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 28


 683              	.LVL82:
 684 001a 00E0     		b	.L63
 685              	.L65:
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 686              		.loc 1 850 0 is_stmt 1
 687 001c 0023     		movs	r3, #0
 688              	.LVL83:
 689              	.L63:
 852:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 690              		.loc 1 852 0
 691 001e 074A     		ldr	r2, .L67
 692 0020 02EB0012 		add	r2, r2, r0, lsl #4
 693 0024 9381     		strh	r3, [r2, #12]	@ movhi
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 694              		.loc 1 853 0
 695 0026 33B9     		cbnz	r3, .L66
 696              		.loc 1 853 0 is_stmt 0 discriminator 1
 697 0028 0301     		lsls	r3, r0, #4
 698              	.LVL84:
 699 002a 0020     		movs	r0, #0
 700              	.LVL85:
 701 002c 034A     		ldr	r2, .L67
 702              	.LVL86:
 703 002e D050     		str	r0, [r2, r3]
 704 0030 7047     		bx	lr
 705              	.LVL87:
 706              	.L64:
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 855:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 856:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;			/* Invalid index nunber */
 707              		.loc 1 856 0 is_stmt 1
 708 0032 0220     		movs	r0, #2
 709              	.LVL88:
 710 0034 7047     		bx	lr
 711              	.LVL89:
 712              	.L66:
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 713              		.loc 1 854 0
 714 0036 0020     		movs	r0, #0
 715              	.LVL90:
 857:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 858:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 859:Middlewares/Third_Party/FatFs/src/ff.c **** }
 716              		.loc 1 859 0
 717 0038 7047     		bx	lr
 718              	.L68:
 719 003a 00BF     		.align	2
 720              	.L67:
 721 003c 00000000 		.word	.LANCHOR0
 722              		.cfi_endproc
 723              	.LFE144:
 725              		.section	.text.clear_lock,"ax",%progbits
 726              		.align	1
 727              		.syntax unified
 728              		.thumb
 729              		.thumb_func
 730              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 29


 732              	clear_lock:
 733              	.LFB145:
 860:Middlewares/Third_Party/FatFs/src/ff.c **** 
 861:Middlewares/Third_Party/FatFs/src/ff.c **** 
 862:Middlewares/Third_Party/FatFs/src/ff.c **** static
 863:Middlewares/Third_Party/FatFs/src/ff.c **** void clear_lock (	/* Clear lock entries of the volume */
 864:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs
 865:Middlewares/Third_Party/FatFs/src/ff.c **** )
 866:Middlewares/Third_Party/FatFs/src/ff.c **** {
 734              		.loc 1 866 0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 0
 737              		@ frame_needed = 0, uses_anonymous_args = 0
 738              		@ link register save eliminated.
 739              	.LVL91:
 867:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 868:Middlewares/Third_Party/FatFs/src/ff.c **** 
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {
 740              		.loc 1 869 0
 741 0000 0023     		movs	r3, #0
 742 0002 03E0     		b	.L74
 743              	.LVL92:
 744              	.L81:
 745              	.LCFI8:
 746              		.cfi_def_cfa_offset 4
 747              		.cfi_offset 4, -4
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 871:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 872:Middlewares/Third_Party/FatFs/src/ff.c **** }
 748              		.loc 1 872 0
 749 0004 5DF8044B 		ldr	r4, [sp], #4
 750              	.LCFI9:
 751              		.cfi_restore 4
 752              		.cfi_def_cfa_offset 0
 753 0008 7047     		bx	lr
 754              	.L80:
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 755              		.loc 1 869 0
 756 000a 0133     		adds	r3, r3, #1
 757              	.LVL93:
 758              	.L74:
 759 000c 012B     		cmp	r3, #1
 760 000e 11D8     		bhi	.L79
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 761              		.loc 1 870 0
 762 0010 1A01     		lsls	r2, r3, #4
 763 0012 0949     		ldr	r1, .L82
 764 0014 8A58     		ldr	r2, [r1, r2]
 765 0016 8242     		cmp	r2, r0
 766 0018 F7D1     		bne	.L80
 866:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 767              		.loc 1 866 0
 768 001a 10B4     		push	{r4}
 769              	.LCFI10:
 770              		.cfi_def_cfa_offset 4
 771              		.cfi_offset 4, -4
 772              	.L75:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 30


 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 773              		.loc 1 870 0 discriminator 1
 774 001c 1A01     		lsls	r2, r3, #4
 775 001e 0024     		movs	r4, #0
 776 0020 8C50     		str	r4, [r1, r2]
 777              	.L71:
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 778              		.loc 1 869 0 discriminator 2
 779 0022 0133     		adds	r3, r3, #1
 780              	.LVL94:
 781 0024 012B     		cmp	r3, #1
 782 0026 EDD8     		bhi	.L81
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 783              		.loc 1 870 0
 784 0028 1A01     		lsls	r2, r3, #4
 785 002a 0349     		ldr	r1, .L82
 786 002c 8A58     		ldr	r2, [r1, r2]
 787 002e 8242     		cmp	r2, r0
 788 0030 F7D1     		bne	.L71
 789 0032 F3E7     		b	.L75
 790              	.L79:
 791              	.LCFI11:
 792              		.cfi_def_cfa_offset 0
 793              		.cfi_restore 4
 794 0034 7047     		bx	lr
 795              	.L83:
 796 0036 00BF     		.align	2
 797              	.L82:
 798 0038 00000000 		.word	.LANCHOR0
 799              		.cfi_endproc
 800              	.LFE145:
 802              		.section	.text.clust2sect,"ax",%progbits
 803              		.align	1
 804              		.syntax unified
 805              		.thumb
 806              		.thumb_func
 807              		.fpu fpv4-sp-d16
 809              	clust2sect:
 810              	.LFB149:
 873:Middlewares/Third_Party/FatFs/src/ff.c **** 
 874:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_LOCK != 0 */
 875:Middlewares/Third_Party/FatFs/src/ff.c **** 
 876:Middlewares/Third_Party/FatFs/src/ff.c **** 
 877:Middlewares/Third_Party/FatFs/src/ff.c **** 
 878:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 879:Middlewares/Third_Party/FatFs/src/ff.c **** /* Move/Flush disk access window in the file system object               */
 880:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 881:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 882:Middlewares/Third_Party/FatFs/src/ff.c **** static
 883:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERROR */
 884:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs			/* File system object */
 885:Middlewares/Third_Party/FatFs/src/ff.c **** )
 886:Middlewares/Third_Party/FatFs/src/ff.c **** {
 887:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 888:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nf;
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 890:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 31


 891:Middlewares/Third_Party/FatFs/src/ff.c **** 
 892:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->wflag) {	/* Write back the sector if it is dirty */
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 894:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 896:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 0;
 898:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 900:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 902:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 903:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 904:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 906:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 907:Middlewares/Third_Party/FatFs/src/ff.c **** }
 908:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 909:Middlewares/Third_Party/FatFs/src/ff.c **** 
 910:Middlewares/Third_Party/FatFs/src/ff.c **** 
 911:Middlewares/Third_Party/FatFs/src/ff.c **** static
 912:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT move_window (	/* Returns FR_OK or FR_DISK_ERROR */
 913:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* File system object */
 914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sector		/* Sector number to make appearance in the fs->win[] */
 915:Middlewares/Third_Party/FatFs/src/ff.c **** )
 916:Middlewares/Third_Party/FatFs/src/ff.c **** {
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 918:Middlewares/Third_Party/FatFs/src/ff.c **** 
 919:Middlewares/Third_Party/FatFs/src/ff.c **** 
 920:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sector != fs->winsect) {	/* Window offset changed? */
 921:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 922:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = sync_window(fs);		/* Write-back changes */
 923:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {			/* Fill sector window with new data */
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 928:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = sector;
 930:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 931:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 932:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 933:Middlewares/Third_Party/FatFs/src/ff.c **** }
 934:Middlewares/Third_Party/FatFs/src/ff.c **** 
 935:Middlewares/Third_Party/FatFs/src/ff.c **** 
 936:Middlewares/Third_Party/FatFs/src/ff.c **** 
 937:Middlewares/Third_Party/FatFs/src/ff.c **** 
 938:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 939:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 940:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize file system and strage device                             */
 941:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 942:Middlewares/Third_Party/FatFs/src/ff.c **** 
 943:Middlewares/Third_Party/FatFs/src/ff.c **** static
 944:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_fs (	/* FR_OK:succeeded, !=0:error */
 945:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 946:Middlewares/Third_Party/FatFs/src/ff.c **** )
 947:Middlewares/Third_Party/FatFs/src/ff.c **** {
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 32


 948:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 949:Middlewares/Third_Party/FatFs/src/ff.c **** 
 950:Middlewares/Third_Party/FatFs/src/ff.c **** 
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = sync_window(fs);
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 953:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSInfo sector if needed */
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
 955:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 956:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fs->win, 0, SS(fs));
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 962:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSInfo sector */
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = fs->volbase + 1;
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 966:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Make sure that no pending write process in the physical drive */
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK) res = FR_DISK_ERR;
 969:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 970:Middlewares/Third_Party/FatFs/src/ff.c **** 
 971:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 972:Middlewares/Third_Party/FatFs/src/ff.c **** }
 973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 974:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 975:Middlewares/Third_Party/FatFs/src/ff.c **** 
 976:Middlewares/Third_Party/FatFs/src/ff.c **** 
 977:Middlewares/Third_Party/FatFs/src/ff.c **** 
 978:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 979:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get sector# from cluster#                                             */
 980:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 981:Middlewares/Third_Party/FatFs/src/ff.c **** 
 982:Middlewares/Third_Party/FatFs/src/ff.c **** static
 983:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clust2sect (	/* !=0:Sector number, 0:Failed (invalid cluster#) */
 984:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 985:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst		/* Cluster# to be converted */
 986:Middlewares/Third_Party/FatFs/src/ff.c **** )
 987:Middlewares/Third_Party/FatFs/src/ff.c **** {
 811              		.loc 1 987 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 0
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815              		@ link register save eliminated.
 816              	.LVL95:
 988:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;
 817              		.loc 1 988 0
 818 0000 0239     		subs	r1, r1, #2
 819              	.LVL96:
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 820              		.loc 1 989 0
 821 0002 8369     		ldr	r3, [r0, #24]
 822 0004 023B     		subs	r3, r3, #2
 823 0006 8B42     		cmp	r3, r1
 824 0008 04D9     		bls	.L86
 990:Middlewares/Third_Party/FatFs/src/ff.c **** 	return clst * fs->csize + fs->database;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 33


 825              		.loc 1 990 0
 826 000a 4389     		ldrh	r3, [r0, #10]
 827 000c C06A     		ldr	r0, [r0, #44]
 828              	.LVL97:
 829 000e 01FB0300 		mla	r0, r1, r3, r0
 830 0012 7047     		bx	lr
 831              	.LVL98:
 832              	.L86:
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 833              		.loc 1 989 0
 834 0014 0020     		movs	r0, #0
 835              	.LVL99:
 991:Middlewares/Third_Party/FatFs/src/ff.c **** }
 836              		.loc 1 991 0
 837 0016 7047     		bx	lr
 838              		.cfi_endproc
 839              	.LFE149:
 841              		.section	.text.clmt_clust,"ax",%progbits
 842              		.align	1
 843              		.syntax unified
 844              		.thumb
 845              		.thumb_func
 846              		.fpu fpv4-sp-d16
 848              	clmt_clust:
 849              	.LFB154:
 992:Middlewares/Third_Party/FatFs/src/ff.c **** 
 993:Middlewares/Third_Party/FatFs/src/ff.c **** 
 994:Middlewares/Third_Party/FatFs/src/ff.c **** 
 995:Middlewares/Third_Party/FatFs/src/ff.c **** 
 996:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 997:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Read value of a FAT entry                                */
 998:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 999:Middlewares/Third_Party/FatFs/src/ff.c **** 
1000:Middlewares/Third_Party/FatFs/src/ff.c **** static
1001:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x7FFFFFFF:Cluster status */
1002:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,	/* Corresponding object */
1003:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst	/* Cluster number to get the value */
1004:Middlewares/Third_Party/FatFs/src/ff.c **** )
1005:Middlewares/Third_Party/FatFs/src/ff.c **** {
1006:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
1007:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val;
1008:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1009:Middlewares/Third_Party/FatFs/src/ff.c **** 
1010:Middlewares/Third_Party/FatFs/src/ff.c **** 
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
1013:Middlewares/Third_Party/FatFs/src/ff.c **** 
1014:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 0xFFFFFFFF;	/* Default value falls on disk error */
1016:Middlewares/Third_Party/FatFs/src/ff.c **** 
1017:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
1018:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
1019:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1020:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1023:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 34


1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
1025:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1026:Middlewares/Third_Party/FatFs/src/ff.c **** 
1027:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1031:Middlewares/Third_Party/FatFs/src/ff.c **** 
1032:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
1035:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1036:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1037:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_EXFAT :
1038:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->objsize) {
1039:Middlewares/Third_Party/FatFs/src/ff.c **** 				DWORD cofs = clst - obj->sclust;	/* Offset from start cluster */
1040:Middlewares/Third_Party/FatFs/src/ff.c **** 				DWORD clen = (DWORD)((obj->objsize - 1) / SS(fs)) / fs->csize;	/* Number of clusters - 1 */
1041:Middlewares/Third_Party/FatFs/src/ff.c **** 
1042:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat == 2) {	/* Is there no valid chain on the FAT? */
1043:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (cofs <= clen) {
1044:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = (cofs == clen) ? 0x7FFFFFFF : clst + 1;	/* Generate the value */
1045:Middlewares/Third_Party/FatFs/src/ff.c **** 						break;
1046:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1047:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1048:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat == 3 && cofs < obj->n_cont) {	/* Is it in the 1st fragment? */
1049:Middlewares/Third_Party/FatFs/src/ff.c **** 					val = clst + 1; 	/* Generate the value */
1050:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
1051:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1052:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat != 2) {	/* Get value from FAT if FAT chain is valid */
1053:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->n_frag != 0) {	/* Is it on the growing edge? */
1054:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = 0x7FFFFFFF;	/* Generate EOC */
1055:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
1056:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1057:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x7FFFFFFF;
1058:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1059:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
1060:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1061:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1062:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* go to default */
1063:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1064:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = 1;	/* Internal error */
1066:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1067:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1068:Middlewares/Third_Party/FatFs/src/ff.c **** 
1069:Middlewares/Third_Party/FatFs/src/ff.c **** 	return val;
1070:Middlewares/Third_Party/FatFs/src/ff.c **** }
1071:Middlewares/Third_Party/FatFs/src/ff.c **** 
1072:Middlewares/Third_Party/FatFs/src/ff.c **** 
1073:Middlewares/Third_Party/FatFs/src/ff.c **** 
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 
1075:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1076:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1077:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Change value of a FAT entry                              */
1078:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1079:Middlewares/Third_Party/FatFs/src/ff.c **** 
1080:Middlewares/Third_Party/FatFs/src/ff.c **** static
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 35


1081:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT put_fat (	/* FR_OK(0):succeeded, !=0:error */
1082:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* Corresponding file system object */
1083:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,		/* FAT index number (cluster number) to be changed */
1084:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val		/* New value to be set to the entry */
1085:Middlewares/Third_Party/FatFs/src/ff.c **** )
1086:Middlewares/Third_Party/FatFs/src/ff.c **** {
1087:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
1088:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_INT_ERR;
1090:Middlewares/Third_Party/FatFs/src/ff.c **** 
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
1093:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1096:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc++ % SS(fs);
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc % SS(fs);
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1106:Middlewares/Third_Party/FatFs/src/ff.c **** 
1107:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :	/* WORD aligned items */
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1113:Middlewares/Third_Party/FatFs/src/ff.c **** 
1114:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :	/* DWORD aligned items */
1115:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1116:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_EXFAT :
1117:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
1119:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1120:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1121:Middlewares/Third_Party/FatFs/src/ff.c **** 				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
1122:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1123:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + clst * 4 % SS(fs), val);
1124:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1125:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1126:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1127:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1128:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1129:Middlewares/Third_Party/FatFs/src/ff.c **** }
1130:Middlewares/Third_Party/FatFs/src/ff.c **** 
1131:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1132:Middlewares/Third_Party/FatFs/src/ff.c **** 
1133:Middlewares/Third_Party/FatFs/src/ff.c **** 
1134:Middlewares/Third_Party/FatFs/src/ff.c **** 
1135:Middlewares/Third_Party/FatFs/src/ff.c **** 
1136:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
1137:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 36


1138:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Accessing FAT and Allocation Bitmap                            */
1139:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1140:Middlewares/Third_Party/FatFs/src/ff.c **** 
1141:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------*/
1142:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find a contiguous free cluster block */
1143:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------*/
1144:Middlewares/Third_Party/FatFs/src/ff.c **** 
1145:Middlewares/Third_Party/FatFs/src/ff.c **** static
1146:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD find_bitmap (	/* 0:Not found, 2..:Cluster block found, 0xFFFFFFFF:Disk error */
1147:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
1148:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* Cluster number to scan from */
1149:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl	/* Number of contiguous clusters to find (1..) */
1150:Middlewares/Third_Party/FatFs/src/ff.c **** )
1151:Middlewares/Third_Party/FatFs/src/ff.c **** {
1152:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE bm, bv;
1153:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1154:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val, scl, ctr;
1155:Middlewares/Third_Party/FatFs/src/ff.c **** 
1156:Middlewares/Third_Party/FatFs/src/ff.c **** 
1157:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;	/* The first bit in the bitmap corresponds to cluster #2 */
1158:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) clst = 0;
1159:Middlewares/Third_Party/FatFs/src/ff.c **** 	scl = val = clst; ctr = 0;
1160:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1161:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fs->database + val / 8 / SS(fs)) != FR_OK) return 0xFFFFFFFF;	/* (assuming bi
1162:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = val / 8 % SS(fs); bm = 1 << (val % 8);
1163:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1164:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
1165:Middlewares/Third_Party/FatFs/src/ff.c **** 				bv = fs->win[i] & bm; bm <<= 1;		/* Get bit value */
1166:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++val >= fs->n_fatent - 2) {	/* Next cluster (with wrap-around) */
1167:Middlewares/Third_Party/FatFs/src/ff.c **** 					val = 0; bm = 0; i = SS(fs);
1168:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1169:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!bv) {	/* Is it a free cluster? */
1170:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (++ctr == ncl) return scl + 2;	/* Check if run length is sufficient for required */
1171:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
1172:Middlewares/Third_Party/FatFs/src/ff.c **** 					scl = val; ctr = 0;		/* Encountered a cluster in-use, restart to scan */
1173:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1174:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (val == clst) return 0;	/* All cluster scanned? */
1175:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (bm);
1176:Middlewares/Third_Party/FatFs/src/ff.c **** 			bm = 1;
1177:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (++i < SS(fs));
1178:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1179:Middlewares/Third_Party/FatFs/src/ff.c **** }
1180:Middlewares/Third_Party/FatFs/src/ff.c **** 
1181:Middlewares/Third_Party/FatFs/src/ff.c **** 
1182:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------*/
1183:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set/Clear a block of allocation bitmap */
1184:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------*/
1185:Middlewares/Third_Party/FatFs/src/ff.c **** 
1186:Middlewares/Third_Party/FatFs/src/ff.c **** static
1187:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT change_bitmap (
1188:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
1189:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* Cluster number to change from */
1190:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl,	/* Number of clusters to be changed */
1191:Middlewares/Third_Party/FatFs/src/ff.c **** 	int bv		/* bit value to be set (0 or 1) */
1192:Middlewares/Third_Party/FatFs/src/ff.c **** )
1193:Middlewares/Third_Party/FatFs/src/ff.c **** {
1194:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE bm;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 37


1195:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1196:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect;
1197:Middlewares/Third_Party/FatFs/src/ff.c **** 
1198:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;	/* The first bit corresponds to cluster #2 */
1199:Middlewares/Third_Party/FatFs/src/ff.c **** 	sect = fs->database + clst / 8 / SS(fs);	/* Sector address (assuming bitmap is located top of the 
1200:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = clst / 8 % SS(fs);						/* Byte offset in the sector */
1201:Middlewares/Third_Party/FatFs/src/ff.c **** 	bm = 1 << (clst % 8);						/* Bit mask in the byte */
1202:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1203:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, sect++) != FR_OK) return FR_DISK_ERR;
1204:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1205:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
1206:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (bv == (int)((fs->win[i] & bm) != 0)) return FR_INT_ERR;	/* Is the bit expected value? */
1207:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->win[i] ^= bm;	/* Flip the bit */
1208:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
1209:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (--ncl == 0) return FR_OK;	/* All bits processed? */
1210:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (bm <<= 1);		/* Next bit */
1211:Middlewares/Third_Party/FatFs/src/ff.c **** 			bm = 1;
1212:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (++i < SS(fs));		/* Next byte */
1213:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
1214:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1215:Middlewares/Third_Party/FatFs/src/ff.c **** }
1216:Middlewares/Third_Party/FatFs/src/ff.c **** 
1217:Middlewares/Third_Party/FatFs/src/ff.c **** 
1218:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1219:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill the first fragment of the FAT chain    */
1220:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1221:Middlewares/Third_Party/FatFs/src/ff.c **** 
1222:Middlewares/Third_Party/FatFs/src/ff.c **** static
1223:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT fill_first_frag (
1224:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj	/* Pointer to the corresponding object */
1225:Middlewares/Third_Party/FatFs/src/ff.c **** )
1226:Middlewares/Third_Party/FatFs/src/ff.c **** {
1227:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1228:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, n;
1229:Middlewares/Third_Party/FatFs/src/ff.c **** 
1230:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (obj->stat == 3) {	/* Has the object been changed 'fragmented'? */
1231:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (cl = obj->sclust, n = obj->n_cont; n; cl++, n--) {	/* Create cluster chain on the FAT */
1232:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(obj->fs, cl, cl + 1);
1233:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
1234:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1235:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->stat = 0;	/* Change status 'FAT chain is valid' */
1236:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1237:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1238:Middlewares/Third_Party/FatFs/src/ff.c **** }
1239:Middlewares/Third_Party/FatFs/src/ff.c **** 
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 
1241:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1242:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill the last fragment of the FAT chain     */
1243:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1244:Middlewares/Third_Party/FatFs/src/ff.c **** 
1245:Middlewares/Third_Party/FatFs/src/ff.c **** static
1246:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT fill_last_frag (
1247:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,	/* Pointer to the corresponding object */
1248:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD lcl,	/* Last cluster of the fragment */
1249:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD term	/* Value to set the last FAT entry */
1250:Middlewares/Third_Party/FatFs/src/ff.c **** )
1251:Middlewares/Third_Party/FatFs/src/ff.c **** {
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 38


1252:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1253:Middlewares/Third_Party/FatFs/src/ff.c **** 
1254:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (obj->n_frag > 0) {	/* Create the last chain on the FAT */
1255:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(obj->fs, lcl - obj->n_frag + 1, (obj->n_frag > 1) ? lcl - obj->n_frag + 2 : term);
1256:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
1257:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->n_frag--;
1258:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1259:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1260:Middlewares/Third_Party/FatFs/src/ff.c **** }
1261:Middlewares/Third_Party/FatFs/src/ff.c **** 
1262:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT && !_FS_READONLY */
1263:Middlewares/Third_Party/FatFs/src/ff.c **** 
1264:Middlewares/Third_Party/FatFs/src/ff.c **** 
1265:Middlewares/Third_Party/FatFs/src/ff.c **** 
1266:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1267:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1268:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Remove a cluster chain                                 */
1269:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1270:Middlewares/Third_Party/FatFs/src/ff.c **** static
1271:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT remove_chain (	/* FR_OK(0):succeeded, !=0:error */
1272:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,			/* Corresponding object */
1273:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,			/* Cluster to remove a chain from */
1274:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD pclst			/* Previous cluster of clst (0:an entire chain) */
1275:Middlewares/Third_Party/FatFs/src/ff.c **** )
1276:Middlewares/Third_Party/FatFs/src/ff.c **** {
1277:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
1278:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nxt;
1279:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1280:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
1281:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD scl = clst, ecl = clst;
1282:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1283:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1284:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD rt[2];
1285:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1286:Middlewares/Third_Party/FatFs/src/ff.c **** 
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
1288:Middlewares/Third_Party/FatFs/src/ff.c **** 
1289:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Mark the previous cluster 'EOC' on the FAT if it exists */
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (pclst && (!_FS_EXFAT || fs->fs_type != FS_EXFAT || obj->stat != 2)) {
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
1293:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1294:Middlewares/Third_Party/FatFs/src/ff.c **** 
1295:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Remove the chain */
1296:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1297:Middlewares/Third_Party/FatFs/src/ff.c **** 		nxt = get_fat(obj, clst);			/* Get cluster status */
1298:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
1301:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, 0);		/* Mark the cluster 'free' on the FAT */
1303:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
1304:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1305:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst < fs->n_fatent - 2) {	/* Update FSINFO */
1306:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst++;
1307:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
1308:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 39


1309:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
1310:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ecl + 1 == nxt) {	/* Is next cluster contiguous? */
1311:Middlewares/Third_Party/FatFs/src/ff.c **** 			ecl = nxt;
1312:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* End of contiguous cluster block */
1313:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1314:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
1315:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = change_bitmap(fs, scl, ecl - scl + 1, 0);	/* Mark the cluster block 'free' on the bitmap 
1316:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) return res;
1317:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1318:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1319:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1320:Middlewares/Third_Party/FatFs/src/ff.c **** 			rt[0] = clust2sect(fs, scl);					/* Start sector */
1321:Middlewares/Third_Party/FatFs/src/ff.c **** 			rt[1] = clust2sect(fs, ecl) + fs->csize - 1;	/* End sector */
1322:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_ioctl(fs->drv, CTRL_TRIM, rt);				/* Inform device the block can be erased */
1323:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1324:Middlewares/Third_Party/FatFs/src/ff.c **** 			scl = ecl = nxt;
1325:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1326:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = nxt;					/* Next cluster */
1328:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
1329:Middlewares/Third_Party/FatFs/src/ff.c **** 
1330:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1331:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
1332:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pclst == 0) {	/* Does the object have no chain? */
1333:Middlewares/Third_Party/FatFs/src/ff.c **** 			obj->stat = 0;		/* Change the object status 'initial' */
1334:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1335:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->stat == 3 && pclst >= obj->sclust && pclst <= obj->sclust + obj->n_cont) {	/* Did the c
1336:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = 2;	/* Change the object status 'contiguous' */
1337:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1338:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1339:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1340:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1341:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1342:Middlewares/Third_Party/FatFs/src/ff.c **** }
1343:Middlewares/Third_Party/FatFs/src/ff.c **** 
1344:Middlewares/Third_Party/FatFs/src/ff.c **** 
1345:Middlewares/Third_Party/FatFs/src/ff.c **** 
1346:Middlewares/Third_Party/FatFs/src/ff.c **** 
1347:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1348:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Stretch a chain or Create a new chain                  */
1349:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1350:Middlewares/Third_Party/FatFs/src/ff.c **** static
1351:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster
1352:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,			/* Corresponding object */
1353:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst			/* Cluster# to stretch, 0:Create a new chain */
1354:Middlewares/Third_Party/FatFs/src/ff.c **** )
1355:Middlewares/Third_Party/FatFs/src/ff.c **** {
1356:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
1357:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1359:Middlewares/Third_Party/FatFs/src/ff.c **** 
1360:Middlewares/Third_Party/FatFs/src/ff.c **** 
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Create a new chain */
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
1364:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1365:Middlewares/Third_Party/FatFs/src/ff.c **** 	else {				/* Stretch current chain */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 40


1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		cs = get_fat(obj, clst);			/* Check the cluster status */
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
1371:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1372:Middlewares/Third_Party/FatFs/src/ff.c **** 
1373:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1374:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
1375:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = find_bitmap(fs, scl, 1);				/* Find a free cluster */
1376:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0 || ncl == 0xFFFFFFFF) return ncl;	/* No free cluster or hard error? */
1377:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = change_bitmap(fs, ncl, 1, 1);			/* Mark the cluster 'in use' */
1378:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_INT_ERR) return 1;
1379:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_DISK_ERR) return 0xFFFFFFFF;
1380:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (clst == 0) {							/* Is it a new chain? */
1381:Middlewares/Third_Party/FatFs/src/ff.c **** 			obj->stat = 2;							/* Set status 'contiguous' */
1382:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {									/* It is a stretched chain */
1383:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->stat == 2 && ncl != scl + 1) {	/* Is the chain got fragmented? */
1384:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->n_cont = scl - obj->sclust;	/* Set size of the contiguous part */
1385:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = 3;						/* Change status 'just fragmented' */
1386:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1387:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1388:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (obj->stat != 2) {	/* Is the file non-contiguous? */
1389:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == clst + 1) {	/* Is the cluster next to previous one? */
1390:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->n_frag = obj->n_frag ? obj->n_frag + 1 : 2;	/* Increment size of last framgent */
1391:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* New fragment */
1392:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->n_frag == 0) obj->n_frag = 1;
1393:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = fill_last_frag(obj, clst, ncl);	/* Fill last fragment on the FAT and link it to new one *
1394:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) obj->n_frag = 1;
1395:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1396:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1397:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
1398:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1399:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = scl;	/* Start cluster */
1401:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl++;							/* Next cluster */
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = 2;
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl > scl) return 0;	/* No free cluster */
1406:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 			cs = get_fat(obj, ncl);			/* Get the cluster status */
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 0) break;				/* Found a free cluster */
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
1411:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1412:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, ncl, 0xFFFFFFFF);	/* Mark the new cluster 'EOC' */
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && clst != 0) {
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
1415:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1416:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1417:Middlewares/Third_Party/FatFs/src/ff.c **** 
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {			/* Update FSINFO if function succeeded. */
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = ncl;
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
1422:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 41


1423:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;	/* Failed. Generate error status */
1424:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1425:Middlewares/Third_Party/FatFs/src/ff.c **** 
1426:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ncl;		/* Return new cluster number or error status */
1427:Middlewares/Third_Party/FatFs/src/ff.c **** }
1428:Middlewares/Third_Party/FatFs/src/ff.c **** 
1429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1430:Middlewares/Third_Party/FatFs/src/ff.c **** 
1431:Middlewares/Third_Party/FatFs/src/ff.c **** 
1432:Middlewares/Third_Party/FatFs/src/ff.c **** 
1433:Middlewares/Third_Party/FatFs/src/ff.c **** 
1434:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
1435:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1436:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Convert offset into cluster with link map table        */
1437:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1438:Middlewares/Third_Party/FatFs/src/ff.c **** 
1439:Middlewares/Third_Party/FatFs/src/ff.c **** static
1440:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
1441:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
1442:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs		/* File offset to be converted to cluster# */
1443:Middlewares/Third_Party/FatFs/src/ff.c **** )
1444:Middlewares/Third_Party/FatFs/src/ff.c **** {
 850              		.loc 1 1444 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854              		@ link register save eliminated.
 855              	.LVL100:
1445:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, ncl, *tbl;
1446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = fp->obj.fs;
 856              		.loc 1 1446 0
 857 0000 0268     		ldr	r2, [r0]
 858              	.LVL101:
1447:Middlewares/Third_Party/FatFs/src/ff.c **** 
1448:Middlewares/Third_Party/FatFs/src/ff.c **** 
1449:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl = fp->cltbl + 1;	/* Top of CLMT */
 859              		.loc 1 1449 0
 860 0002 C36A     		ldr	r3, [r0, #44]
 861 0004 0433     		adds	r3, r3, #4
 862              	.LVL102:
1450:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
 863              		.loc 1 1450 0
 864 0006 490A     		lsrs	r1, r1, #9
 865              	.LVL103:
 866 0008 5289     		ldrh	r2, [r2, #10]
 867              	.LVL104:
 868 000a B1FBF2F1 		udiv	r1, r1, r2
 869              	.LVL105:
 870              	.L90:
1451:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1452:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
 871              		.loc 1 1452 0
 872 000e 1868     		ldr	r0, [r3]
 873              	.LVL106:
1453:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 874              		.loc 1 1453 0
 875 0010 30B1     		cbz	r0, .L87
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 42


1454:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 876              		.loc 1 1454 0
 877 0012 8142     		cmp	r1, r0
 878 0014 02D3     		bcc	.L89
1455:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
 879              		.loc 1 1455 0
 880 0016 091A     		subs	r1, r1, r0
 881              	.LVL107:
 882 0018 0833     		adds	r3, r3, #8
 883              	.LVL108:
1452:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 884              		.loc 1 1452 0
 885 001a F8E7     		b	.L90
 886              	.LVL109:
 887              	.L89:
1456:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1457:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl + *tbl;	/* Return the cluster number */
 888              		.loc 1 1457 0
 889 001c 5868     		ldr	r0, [r3, #4]
 890              	.LVL110:
 891 001e 0844     		add	r0, r0, r1
 892              	.L87:
1458:Middlewares/Third_Party/FatFs/src/ff.c **** }
 893              		.loc 1 1458 0
 894 0020 7047     		bx	lr
 895              		.cfi_endproc
 896              	.LFE154:
 898              		.section	.text.ld_clust,"ax",%progbits
 899              		.align	1
 900              		.syntax unified
 901              		.thumb
 902              		.thumb_func
 903              		.fpu fpv4-sp-d16
 905              	ld_clust:
 906              	.LFB158:
1459:Middlewares/Third_Party/FatFs/src/ff.c **** 
1460:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FASTSEEK */
1461:Middlewares/Third_Party/FatFs/src/ff.c **** 
1462:Middlewares/Third_Party/FatFs/src/ff.c **** 
1463:Middlewares/Third_Party/FatFs/src/ff.c **** 
1464:Middlewares/Third_Party/FatFs/src/ff.c **** 
1465:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1466:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Set directory index                              */
1467:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1468:Middlewares/Third_Party/FatFs/src/ff.c **** 
1469:Middlewares/Third_Party/FatFs/src/ff.c **** static
1470:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_sdi (	/* FR_OK(0):succeeded, !=0:error */
1471:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to directory object */
1472:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs		/* Offset of directory table */
1473:Middlewares/Third_Party/FatFs/src/ff.c **** )
1474:Middlewares/Third_Party/FatFs/src/ff.c **** {
1475:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD csz, clst;
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1477:Middlewares/Third_Party/FatFs/src/ff.c **** 
1478:Middlewares/Third_Party/FatFs/src/ff.c **** 
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE)
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 43


1481:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dptr = ofs;				/* Set current offset */
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
1486:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
1487:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1488:Middlewares/Third_Party/FatFs/src/ff.c **** 
1489:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
1491:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
1492:Middlewares/Third_Party/FatFs/src/ff.c **** 
1493:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {			/* Dynamic table (sub-directory or root-directory in FAT32+) */
1494:Middlewares/Third_Party/FatFs/src/ff.c **** 		csz = (DWORD)fs->csize * SS(fs);	/* Bytes per cluster */
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
1500:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = clust2sect(fs, clst);
1502:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1503:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->clust = clst;					/* Current cluster# */
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
1505:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
1506:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
1507:Middlewares/Third_Party/FatFs/src/ff.c **** 
1508:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1509:Middlewares/Third_Party/FatFs/src/ff.c **** }
1510:Middlewares/Third_Party/FatFs/src/ff.c **** 
1511:Middlewares/Third_Party/FatFs/src/ff.c **** 
1512:Middlewares/Third_Party/FatFs/src/ff.c **** 
1513:Middlewares/Third_Party/FatFs/src/ff.c **** 
1514:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1515:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Move directory table index next                  */
1516:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1517:Middlewares/Third_Party/FatFs/src/ff.c **** 
1518:Middlewares/Third_Party/FatFs/src/ff.c **** static
1519:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_next (	/* FR_OK(0):succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stretch */
1520:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1521:Middlewares/Third_Party/FatFs/src/ff.c **** 	int stretch		/* 0: Do not stretch table, 1: Stretch table if needed */
1522:Middlewares/Third_Party/FatFs/src/ff.c **** )
1523:Middlewares/Third_Party/FatFs/src/ff.c **** {
1524:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs, clst;
1525:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1526:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1527:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1529:Middlewares/Third_Party/FatFs/src/ff.c **** 
1530:Middlewares/Third_Party/FatFs/src/ff.c **** 	ofs = dp->dptr + SZDIRE;	/* Next entry */
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
1532:Middlewares/Third_Party/FatFs/src/ff.c **** 
1533:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ofs % SS(fs) == 0) {	/* Sector changed? */
1534:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;				/* Next sector */
1535:Middlewares/Third_Party/FatFs/src/ff.c **** 
1536:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->clust) {		/* Static table */
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 44


1538:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
1539:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1540:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1541:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {					/* Dynamic table */
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((ofs / SS(fs) & (fs->csize - 1)) == 0) {		/* Cluster changed? */
1543:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
1546:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
1547:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) {								/* If no stretch, report EOT */
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
1550:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&dp->obj, dp->clust);	/* Allocate a cluster */
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1555:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
1556:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_EXFAT) dp->obj.stat |= 4;			/* The directory needs to be updated */
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (sync_window(fs) != FR_OK) return FR_DISK_ERR;	/* Flush disk access window */
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill t
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
1562:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1563:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect -= n;							/* Restore window offset */
1564:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1565:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) dp->sect = 0;					/* (this line is to suppress compiler warning) */
1566:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sect = 0; return FR_NO_FILE;			/* Report EOT */
1567:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1569:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->clust = clst;		/* Initialize data for new cluster */
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(fs, clst);
1571:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1572:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1573:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1574:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dptr = ofs;						/* Current entry */
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
1576:Middlewares/Third_Party/FatFs/src/ff.c **** 
1577:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1578:Middlewares/Third_Party/FatFs/src/ff.c **** }
1579:Middlewares/Third_Party/FatFs/src/ff.c **** 
1580:Middlewares/Third_Party/FatFs/src/ff.c **** 
1581:Middlewares/Third_Party/FatFs/src/ff.c **** 
1582:Middlewares/Third_Party/FatFs/src/ff.c **** 
1583:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1584:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1585:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Reserve a block of directory entries             */
1586:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1587:Middlewares/Third_Party/FatFs/src/ff.c **** 
1588:Middlewares/Third_Party/FatFs/src/ff.c **** static
1589:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_alloc (	/* FR_OK(0):succeeded, !=0:error */
1590:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1591:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent		/* Number of contiguous entries to allocate */
1592:Middlewares/Third_Party/FatFs/src/ff.c **** )
1593:Middlewares/Third_Party/FatFs/src/ff.c **** {
1594:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 45


1595:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1596:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1597:Middlewares/Third_Party/FatFs/src/ff.c **** 
1598:Middlewares/Third_Party/FatFs/src/ff.c **** 
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
1602:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, dp->sect);
1604:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1605:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1606:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((fs->fs_type == FS_EXFAT) ? (int)((dp->dir[XDIR_Type] & 0x80) == 0) : (int)(dp->dir[DIR_Name
1607:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1608:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir[DIR_Name] == DDEM || dp->dir[DIR_Name] == 0) {
1609:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
1611:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = 0;					/* Not a blank entry. Restart to search */
1613:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 1);
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
1616:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1617:Middlewares/Third_Party/FatFs/src/ff.c **** 
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
1619:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1620:Middlewares/Third_Party/FatFs/src/ff.c **** }
1621:Middlewares/Third_Party/FatFs/src/ff.c **** 
1622:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
1623:Middlewares/Third_Party/FatFs/src/ff.c **** 
1624:Middlewares/Third_Party/FatFs/src/ff.c **** 
1625:Middlewares/Third_Party/FatFs/src/ff.c **** 
1626:Middlewares/Third_Party/FatFs/src/ff.c **** 
1627:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1628:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT: Directory handling - Load/Store start cluster number             */
1629:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1630:Middlewares/Third_Party/FatFs/src/ff.c **** 
1631:Middlewares/Third_Party/FatFs/src/ff.c **** static
1632:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_clust (	/* Returns the top cluster value of the SFN entry */
1633:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* Pointer to the fs object */
1634:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir	/* Pointer to the key entry */
1635:Middlewares/Third_Party/FatFs/src/ff.c **** )
1636:Middlewares/Third_Party/FatFs/src/ff.c **** {
 907              		.loc 1 1636 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 0
 910              		@ frame_needed = 0, uses_anonymous_args = 0
 911              	.LVL111:
 912 0000 70B5     		push	{r4, r5, r6, lr}
 913              	.LCFI12:
 914              		.cfi_def_cfa_offset 16
 915              		.cfi_offset 4, -16
 916              		.cfi_offset 5, -12
 917              		.cfi_offset 6, -8
 918              		.cfi_offset 14, -4
 919 0002 0646     		mov	r6, r0
 920 0004 0D46     		mov	r5, r1
1637:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 46


1638:Middlewares/Third_Party/FatFs/src/ff.c **** 
1639:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = ld_word(dir + DIR_FstClusLO);
 921              		.loc 1 1639 0
 922 0006 01F11A00 		add	r0, r1, #26
 923              	.LVL112:
 924 000a FFF7FEFF 		bl	ld_word
 925              	.LVL113:
1640:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 926              		.loc 1 1640 0
 927 000e 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 928 0010 032B     		cmp	r3, #3
 929 0012 00D0     		beq	.L94
 930              	.LVL114:
 931              	.L91:
1641:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
1642:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1643:Middlewares/Third_Party/FatFs/src/ff.c **** 
1644:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl;
1645:Middlewares/Third_Party/FatFs/src/ff.c **** }
 932              		.loc 1 1645 0
 933 0014 70BD     		pop	{r4, r5, r6, pc}
 934              	.LVL115:
 935              	.L94:
 936 0016 0446     		mov	r4, r0
1641:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 937              		.loc 1 1641 0
 938 0018 05F11400 		add	r0, r5, #20
 939              	.LVL116:
 940 001c FFF7FEFF 		bl	ld_word
 941              	.LVL117:
 942 0020 44EA0040 		orr	r0, r4, r0, lsl #16
 943              	.LVL118:
1644:Middlewares/Third_Party/FatFs/src/ff.c **** }
 944              		.loc 1 1644 0
 945 0024 F6E7     		b	.L91
 946              		.cfi_endproc
 947              	.LFE158:
 949              		.section	.text.st_clust,"ax",%progbits
 950              		.align	1
 951              		.syntax unified
 952              		.thumb
 953              		.thumb_func
 954              		.fpu fpv4-sp-d16
 956              	st_clust:
 957              	.LFB159:
1646:Middlewares/Third_Party/FatFs/src/ff.c **** 
1647:Middlewares/Third_Party/FatFs/src/ff.c **** 
1648:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1649:Middlewares/Third_Party/FatFs/src/ff.c **** static
1650:Middlewares/Third_Party/FatFs/src/ff.c **** void st_clust (
1651:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
1652:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,	/* Pointer to the key entry */
1653:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl	/* Value to be set */
1654:Middlewares/Third_Party/FatFs/src/ff.c **** )
1655:Middlewares/Third_Party/FatFs/src/ff.c **** {
 958              		.loc 1 1655 0
 959              		.cfi_startproc
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 47


 960              		@ args = 0, pretend = 0, frame = 0
 961              		@ frame_needed = 0, uses_anonymous_args = 0
 962              	.LVL119:
 963 0000 70B5     		push	{r4, r5, r6, lr}
 964              	.LCFI13:
 965              		.cfi_def_cfa_offset 16
 966              		.cfi_offset 4, -16
 967              		.cfi_offset 5, -12
 968              		.cfi_offset 6, -8
 969              		.cfi_offset 14, -4
 970 0002 0646     		mov	r6, r0
 971 0004 0C46     		mov	r4, r1
 972 0006 1546     		mov	r5, r2
1656:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dir + DIR_FstClusLO, (WORD)cl);
 973              		.loc 1 1656 0
 974 0008 91B2     		uxth	r1, r2
 975              	.LVL120:
 976 000a 04F11A00 		add	r0, r4, #26
 977              	.LVL121:
 978 000e FFF7FEFF 		bl	st_word
 979              	.LVL122:
1657:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 980              		.loc 1 1657 0
 981 0012 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 982 0014 032B     		cmp	r3, #3
 983 0016 00D0     		beq	.L98
 984              	.L95:
1658:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
1659:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1660:Middlewares/Third_Party/FatFs/src/ff.c **** }
 985              		.loc 1 1660 0
 986 0018 70BD     		pop	{r4, r5, r6, pc}
 987              	.LVL123:
 988              	.L98:
1658:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 989              		.loc 1 1658 0
 990 001a 290C     		lsrs	r1, r5, #16
 991 001c 04F11400 		add	r0, r4, #20
 992 0020 FFF7FEFF 		bl	st_word
 993              	.LVL124:
 994              		.loc 1 1660 0
 995 0024 F8E7     		b	.L95
 996              		.cfi_endproc
 997              	.LFE159:
 999              		.section	.text.get_fileinfo,"ax",%progbits
 1000              		.align	1
 1001              		.syntax unified
 1002              		.thumb
 1003              		.thumb_func
 1004              		.fpu fpv4-sp-d16
 1006              	get_fileinfo:
 1007              	.LFB164:
1661:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1662:Middlewares/Third_Party/FatFs/src/ff.c **** 
1663:Middlewares/Third_Party/FatFs/src/ff.c **** 
1664:Middlewares/Third_Party/FatFs/src/ff.c **** 
1665:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 48


1666:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------------------*/
1667:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: LFN handling                                                  */
1668:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------------------*/
1669:Middlewares/Third_Party/FatFs/src/ff.c **** static
1670:Middlewares/Third_Party/FatFs/src/ff.c **** const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	/* Offset of LFN characters in the direc
1671:Middlewares/Third_Party/FatFs/src/ff.c **** 
1672:Middlewares/Third_Party/FatFs/src/ff.c **** 
1673:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------*/
1674:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Compare a part of file name with an LFN entry */
1675:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------*/
1676:Middlewares/Third_Party/FatFs/src/ff.c **** static
1677:Middlewares/Third_Party/FatFs/src/ff.c **** int cmp_lfn (				/* 1:matched, 0:not matched */
1678:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfnbuf,	/* Pointer to the LFN working buffer to be compared */
1679:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir				/* Pointer to the directory entry containing the part of LFN */
1680:Middlewares/Third_Party/FatFs/src/ff.c **** )
1681:Middlewares/Third_Party/FatFs/src/ff.c **** {
1682:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1683:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1684:Middlewares/Third_Party/FatFs/src/ff.c **** 
1685:Middlewares/Third_Party/FatFs/src/ff.c **** 
1686:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO */
1687:Middlewares/Third_Party/FatFs/src/ff.c **** 
1688:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
1689:Middlewares/Third_Party/FatFs/src/ff.c **** 
1690:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1691:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1692:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {
1693:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
1694:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;					/* Not matched */
1695:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1696:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = uc;
1697:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1698:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1699:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1700:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1701:Middlewares/Third_Party/FatFs/src/ff.c **** 
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i]) return 0;	/* Last segment matched but different len
1703:Middlewares/Third_Party/FatFs/src/ff.c **** 
1704:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;		/* The part of LFN matched */
1705:Middlewares/Third_Party/FatFs/src/ff.c **** }
1706:Middlewares/Third_Party/FatFs/src/ff.c **** 
1707:Middlewares/Third_Party/FatFs/src/ff.c **** 
1708:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 || _USE_LABEL || _FS_EXFAT
1709:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------*/
1710:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Pick a part of file name from an LFN entry */
1711:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------*/
1712:Middlewares/Third_Party/FatFs/src/ff.c **** static
1713:Middlewares/Third_Party/FatFs/src/ff.c **** int pick_lfn (			/* 1:succeeded, 0:buffer overflow or invalid LFN entry */
1714:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR* lfnbuf,		/* Pointer to the LFN working buffer */
1715:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir			/* Pointer to the LFN entry */
1716:Middlewares/Third_Party/FatFs/src/ff.c **** )
1717:Middlewares/Third_Party/FatFs/src/ff.c **** {
1718:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1719:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1720:Middlewares/Third_Party/FatFs/src/ff.c **** 
1721:Middlewares/Third_Party/FatFs/src/ff.c **** 
1722:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO is 0 */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 49


1723:Middlewares/Third_Party/FatFs/src/ff.c **** 
1724:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & ~LLEF) - 1) * 13;	/* Offset in the LFN buffer */
1725:Middlewares/Third_Party/FatFs/src/ff.c **** 
1726:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1727:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1728:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {
1729:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
1730:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
1731:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1732:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1733:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1734:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1735:Middlewares/Third_Party/FatFs/src/ff.c **** 
1736:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dir[LDIR_Ord] & LLEF) {				/* Put terminator if it is the last LFN part */
1737:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
1738:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfnbuf[i] = 0;
1739:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1740:Middlewares/Third_Party/FatFs/src/ff.c **** 
1741:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;		/* The part of LFN is valid */
1742:Middlewares/Third_Party/FatFs/src/ff.c **** }
1743:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1744:Middlewares/Third_Party/FatFs/src/ff.c **** 
1745:Middlewares/Third_Party/FatFs/src/ff.c **** 
1746:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1747:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------*/
1748:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Create an entry of LFN entries */
1749:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------*/
1750:Middlewares/Third_Party/FatFs/src/ff.c **** static
1751:Middlewares/Third_Party/FatFs/src/ff.c **** void put_lfn (
1752:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to the LFN */
1753:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,			/* Pointer to the LFN entry to be created */
1754:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord,			/* LFN order (1-20) */
1755:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum			/* Checksum of the corresponding SFN */
1756:Middlewares/Third_Party/FatFs/src/ff.c **** )
1757:Middlewares/Third_Party/FatFs/src/ff.c **** {
1758:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1759:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1760:Middlewares/Third_Party/FatFs/src/ff.c **** 
1761:Middlewares/Third_Party/FatFs/src/ff.c **** 
1762:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Chksum] = sum;			/* Set checksum */
1763:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
1764:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Type] = 0;
1765:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dir + LDIR_FstClusLO, 0);
1766:Middlewares/Third_Party/FatFs/src/ff.c **** 
1767:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (ord - 1) * 13;				/* Get offset in the LFN working buffer */
1768:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = wc = 0;
1769:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1770:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
1771:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + LfnOfs[s], wc);		/* Put it */
1772:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc == 0) wc = 0xFFFF;		/* Padding characters for left locations */
1773:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);
1774:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (wc == 0xFFFF || !lfn[i]) ord |= LLEF;	/* Last LFN part is the start of LFN sequence */
1775:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Ord] = ord;			/* Set the LFN order */
1776:Middlewares/Third_Party/FatFs/src/ff.c **** }
1777:Middlewares/Third_Party/FatFs/src/ff.c **** 
1778:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
1779:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 50


1780:Middlewares/Third_Party/FatFs/src/ff.c **** 
1781:Middlewares/Third_Party/FatFs/src/ff.c **** 
1782:Middlewares/Third_Party/FatFs/src/ff.c **** 
1783:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0 && !_FS_READONLY
1784:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1785:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Create a Numbered SFN                                        */
1786:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1787:Middlewares/Third_Party/FatFs/src/ff.c **** 
1788:Middlewares/Third_Party/FatFs/src/ff.c **** static
1789:Middlewares/Third_Party/FatFs/src/ff.c **** void gen_numname (
1790:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dst,			/* Pointer to the buffer to store numbered SFN */
1791:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* src,	/* Pointer to SFN */
1792:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to LFN */
1793:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT seq			/* Sequence number */
1794:Middlewares/Third_Party/FatFs/src/ff.c **** )
1795:Middlewares/Third_Party/FatFs/src/ff.c **** {
1796:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns[8], c;
1797:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
1798:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1799:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sr;
1800:Middlewares/Third_Party/FatFs/src/ff.c **** 
1801:Middlewares/Third_Party/FatFs/src/ff.c **** 
1802:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dst, src, 11);
1803:Middlewares/Third_Party/FatFs/src/ff.c **** 
1804:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number 
1805:Middlewares/Third_Party/FatFs/src/ff.c **** 		sr = seq;
1806:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*lfn) {	/* Create a CRC */
1807:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = *lfn++;
1808:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < 16; i++) {
1809:Middlewares/Third_Party/FatFs/src/ff.c **** 				sr = (sr << 1) + (wc & 1);
1810:Middlewares/Third_Party/FatFs/src/ff.c **** 				wc >>= 1;
1811:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sr & 0x10000) sr ^= 0x11021;
1812:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1813:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1814:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq = (UINT)sr;
1815:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1816:Middlewares/Third_Party/FatFs/src/ff.c **** 
1817:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* itoa (hexdecimal) */
1818:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = 7;
1819:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1820:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)((seq % 16) + '0');
1821:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c > '9') c += 7;
1822:Middlewares/Third_Party/FatFs/src/ff.c **** 		ns[i--] = c;
1823:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq /= 16;
1824:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (seq);
1825:Middlewares/Third_Party/FatFs/src/ff.c **** 	ns[i] = '~';
1826:Middlewares/Third_Party/FatFs/src/ff.c **** 
1827:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Append the number */
1828:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (j = 0; j < i && dst[j] != ' '; j++) {
1829:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(dst[j])) {
1830:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (j == i - 1) break;
1831:Middlewares/Third_Party/FatFs/src/ff.c **** 			j++;
1832:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1833:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1834:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1835:Middlewares/Third_Party/FatFs/src/ff.c **** 		dst[j++] = (i < 8) ? ns[i++] : ' ';
1836:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (j < 8);
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 51


1837:Middlewares/Third_Party/FatFs/src/ff.c **** }
1838:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 && !_FS_READONLY */
1839:Middlewares/Third_Party/FatFs/src/ff.c **** 
1840:Middlewares/Third_Party/FatFs/src/ff.c **** 
1841:Middlewares/Third_Party/FatFs/src/ff.c **** 
1842:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
1843:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1844:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Calculate checksum of an SFN entry                           */
1845:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1846:Middlewares/Third_Party/FatFs/src/ff.c **** 
1847:Middlewares/Third_Party/FatFs/src/ff.c **** static
1848:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE sum_sfn (
1849:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Pointer to the SFN entry */
1850:Middlewares/Third_Party/FatFs/src/ff.c **** )
1851:Middlewares/Third_Party/FatFs/src/ff.c **** {
1852:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum = 0;
1853:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n = 11;
1854:Middlewares/Third_Party/FatFs/src/ff.c **** 
1855:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1856:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = (sum >> 1) + (sum << 7) + *dir++;
1857:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--n);
1858:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1859:Middlewares/Third_Party/FatFs/src/ff.c **** }
1860:Middlewares/Third_Party/FatFs/src/ff.c **** 
1861:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 */
1862:Middlewares/Third_Party/FatFs/src/ff.c **** 
1863:Middlewares/Third_Party/FatFs/src/ff.c **** 
1864:Middlewares/Third_Party/FatFs/src/ff.c **** 
1865:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1866:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1867:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Checksum                                                       */
1868:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1869:Middlewares/Third_Party/FatFs/src/ff.c **** 
1870:Middlewares/Third_Party/FatFs/src/ff.c **** static
1871:Middlewares/Third_Party/FatFs/src/ff.c **** WORD xdir_sum (			/* Get checksum of the directoly block */
1872:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Directory entry block to be calculated */
1873:Middlewares/Third_Party/FatFs/src/ff.c **** )
1874:Middlewares/Third_Party/FatFs/src/ff.c **** {
1875:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, szblk;
1876:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD sum;
1877:Middlewares/Third_Party/FatFs/src/ff.c **** 
1878:Middlewares/Third_Party/FatFs/src/ff.c **** 
1879:Middlewares/Third_Party/FatFs/src/ff.c **** 	szblk = (dir[XDIR_NumSec] + 1) * SZDIRE;
1880:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = sum = 0; i < szblk; i++) {
1881:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == XDIR_SetSum) {	/* Skip sum field */
1882:Middlewares/Third_Party/FatFs/src/ff.c **** 			i++;
1883:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1884:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + dir[i];
1885:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1886:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1887:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1888:Middlewares/Third_Party/FatFs/src/ff.c **** }
1889:Middlewares/Third_Party/FatFs/src/ff.c **** 
1890:Middlewares/Third_Party/FatFs/src/ff.c **** 
1891:Middlewares/Third_Party/FatFs/src/ff.c **** 
1892:Middlewares/Third_Party/FatFs/src/ff.c **** static
1893:Middlewares/Third_Party/FatFs/src/ff.c **** WORD xname_sum (		/* Get check sum (to be used as hash) of the name */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 52


1894:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* name	/* File name to be calculated */
1895:Middlewares/Third_Party/FatFs/src/ff.c **** )
1896:Middlewares/Third_Party/FatFs/src/ff.c **** {
1897:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
1898:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD sum = 0;
1899:Middlewares/Third_Party/FatFs/src/ff.c **** 
1900:Middlewares/Third_Party/FatFs/src/ff.c **** 
1901:Middlewares/Third_Party/FatFs/src/ff.c **** 	while ((chr = *name++) != 0) {
1902:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = ff_wtoupper(chr);		/* File name needs to be ignored case */
1903:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr & 0xFF);
1904:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr >> 8);
1905:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1906:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1907:Middlewares/Third_Party/FatFs/src/ff.c **** }
1908:Middlewares/Third_Party/FatFs/src/ff.c **** 
1909:Middlewares/Third_Party/FatFs/src/ff.c **** 
1910:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _USE_MKFS
1911:Middlewares/Third_Party/FatFs/src/ff.c **** static
1912:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD xsum32 (
1913:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE  dat,	/* Data to be sumed */
1914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sum	/* Previous value */
1915:Middlewares/Third_Party/FatFs/src/ff.c **** )
1916:Middlewares/Third_Party/FatFs/src/ff.c **** {
1917:Middlewares/Third_Party/FatFs/src/ff.c **** 	sum = ((sum & 1) ? 0x80000000 : 0) + (sum >> 1) + dat;
1918:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1919:Middlewares/Third_Party/FatFs/src/ff.c **** }
1920:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1921:Middlewares/Third_Party/FatFs/src/ff.c **** 
1922:Middlewares/Third_Party/FatFs/src/ff.c **** 
1923:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
1924:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------*/
1925:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Get object information from a directory block */
1926:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------*/
1927:Middlewares/Third_Party/FatFs/src/ff.c **** 
1928:Middlewares/Third_Party/FatFs/src/ff.c **** static
1929:Middlewares/Third_Party/FatFs/src/ff.c **** void get_xdir_info (
1930:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block 85+C0+C1s */
1931:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Buffer to store the extracted file information */
1932:Middlewares/Third_Party/FatFs/src/ff.c **** )
1933:Middlewares/Third_Party/FatFs/src/ff.c **** {
1934:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT di, si;
1935:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
1936:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
1937:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nc;
1938:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1939:Middlewares/Third_Party/FatFs/src/ff.c **** 
1940:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get file name */
1941:Middlewares/Third_Party/FatFs/src/ff.c **** 	di = 0;
1942:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
1943:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = SZDIRE * 2; di < dirb[XDIR_NumName]; si += 2, di++) {
1944:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
1945:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ld_word(dirb + si);					/* Get a character */
1946:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN) { di = 0; break; }	/* Buffer overflow --> inaccessible object name */
1947:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[di] = w;						/* Store it */
1948:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1949:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1950:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = SZDIRE * 2, nc = 0; nc < dirb[XDIR_NumName]; si += 2, nc++) {
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 53


1951:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
1952:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(ld_word(dirb + si), 0);	/* Get a character and Unicode -> OEM */
1953:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {				/* Is it a double byte char? (always false at SBCS cfg) */
1954:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[di++] = (char)(w >> 8);	/* Put 1st byte of the DBC */
1955:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1956:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == 0 || di >= _MAX_LFN) { di = 0; break; }	/* Invalid char or buffer overflow --> inaccessi
1957:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[di++] = (char)w;
1958:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1959:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1960:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (di == 0) fno->fname[di++] = '?';	/* Inaccessible object name? */
1961:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[di] = 0;						/* Terminate file name */
1962:Middlewares/Third_Party/FatFs/src/ff.c **** 
1963:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->altname[0] = 0;							/* No SFN */
1964:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fattrib = dirb[XDIR_Attr];					/* Attribute */
1965:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fsize = (fno->fattrib & AM_DIR) ? 0 : ld_qword(dirb + XDIR_FileSize);	/* Size */
1966:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->ftime = ld_word(dirb + XDIR_ModTime + 0);	/* Time */
1967:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fdate = ld_word(dirb + XDIR_ModTime + 2);	/* Date */
1968:Middlewares/Third_Party/FatFs/src/ff.c **** }
1969:Middlewares/Third_Party/FatFs/src/ff.c **** 
1970:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
1971:Middlewares/Third_Party/FatFs/src/ff.c **** 
1972:Middlewares/Third_Party/FatFs/src/ff.c **** 
1973:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------*/
1974:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Get a directry entry block */
1975:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------*/
1976:Middlewares/Third_Party/FatFs/src/ff.c **** 
1977:Middlewares/Third_Party/FatFs/src/ff.c **** static
1978:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT load_xdir (	/* FR_INT_ERR: invalid entry block */
1979:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the reading direcotry object pointing the 85 entry */
1980:Middlewares/Third_Party/FatFs/src/ff.c **** )
1981:Middlewares/Third_Party/FatFs/src/ff.c **** {
1982:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1983:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, sz_ent;
1984:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the on-memory direcotry entry block 85+C0+C1s */
1985:Middlewares/Third_Party/FatFs/src/ff.c **** 
1986:Middlewares/Third_Party/FatFs/src/ff.c **** 
1987:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load 85 entry */
1988:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
1989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1990:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->dir[XDIR_Type] != 0x85) return FR_INT_ERR;
1991:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dirb + 0, dp->dir, SZDIRE);
1992:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_ent = (dirb[XDIR_NumSec] + 1) * SZDIRE;
1993:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sz_ent < 3 * SZDIRE || sz_ent > 19 * SZDIRE) return FR_INT_ERR;
1994:Middlewares/Third_Party/FatFs/src/ff.c **** 
1995:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load C0 entry */
1996:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_next(dp, 0);
1997:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1998:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
1999:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
2000:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->dir[XDIR_Type] != 0xC0) return FR_INT_ERR;
2001:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dirb + SZDIRE, dp->dir, SZDIRE);
2002:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (MAXDIRB(dirb[XDIR_NumName]) > sz_ent) return FR_INT_ERR;
2003:Middlewares/Third_Party/FatFs/src/ff.c **** 
2004:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load C1 entries */
2005:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = SZDIRE * 2;	/* C1 offset */
2006:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2007:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 54


2008:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2009:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2010:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2011:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->dir[XDIR_Type] != 0xC1) return FR_INT_ERR;
2012:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i < MAXDIRB(_MAX_LFN)) mem_cpy(dirb + i, dp->dir, SZDIRE);
2013:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while ((i += SZDIRE) < sz_ent);
2014:Middlewares/Third_Party/FatFs/src/ff.c **** 
2015:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Sanity check (do it when accessible object name) */
2016:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i <= MAXDIRB(_MAX_LFN)) {
2017:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (xdir_sum(dirb) != ld_word(dirb + XDIR_SetSum)) return FR_INT_ERR;
2018:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2019:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2020:Middlewares/Third_Party/FatFs/src/ff.c **** }
2021:Middlewares/Third_Party/FatFs/src/ff.c **** 
2022:Middlewares/Third_Party/FatFs/src/ff.c **** 
2023:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY || _FS_RPATH != 0
2024:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------*/
2025:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Load the object's directory entry block */
2026:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------*/
2027:Middlewares/Third_Party/FatFs/src/ff.c **** static
2028:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT load_obj_dir (
2029:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Blank directory object to be used to access containing direcotry */
2030:Middlewares/Third_Party/FatFs/src/ff.c **** 	const _FDID* obj	/* Object with its containing directory information */
2031:Middlewares/Third_Party/FatFs/src/ff.c **** )
2032:Middlewares/Third_Party/FatFs/src/ff.c **** {
2033:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2034:Middlewares/Third_Party/FatFs/src/ff.c **** 
2035:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Open object containing directory */
2036:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.fs = obj->fs;
2037:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.sclust = obj->c_scl;
2038:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.stat = (BYTE)obj->c_size;
2039:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.objsize = obj->c_size & 0xFFFFFF00;
2040:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->blk_ofs = obj->c_ofs;
2041:Middlewares/Third_Party/FatFs/src/ff.c **** 
2042:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);	/* Goto object's entry block */
2043:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2044:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = load_xdir(dp);		/* Load the object's entry block */
2045:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2046:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2047:Middlewares/Third_Party/FatFs/src/ff.c **** }
2048:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2049:Middlewares/Third_Party/FatFs/src/ff.c **** 
2050:Middlewares/Third_Party/FatFs/src/ff.c **** 
2051:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2052:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------*/
2053:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Store the directory block to the media */
2054:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------*/
2055:Middlewares/Third_Party/FatFs/src/ff.c **** static
2056:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT store_xdir (
2057:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Pointer to the direcotry object */
2058:Middlewares/Third_Party/FatFs/src/ff.c **** )
2059:Middlewares/Third_Party/FatFs/src/ff.c **** {
2060:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2061:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent;
2062:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the direcotry entry block 85+C0+C1s */
2063:Middlewares/Third_Party/FatFs/src/ff.c **** 
2064:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create set sum */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 55


2065:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dirb + XDIR_SetSum, xdir_sum(dirb));
2066:Middlewares/Third_Party/FatFs/src/ff.c **** 	nent = dirb[XDIR_NumSec] + 1;
2067:Middlewares/Third_Party/FatFs/src/ff.c **** 
2068:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Store the set of directory to the volume */
2069:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);
2070:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (res == FR_OK) {
2071:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2072:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2073:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(dp->dir, dirb, SZDIRE);
2074:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.fs->wflag = 1;
2075:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (--nent == 0) break;
2076:Middlewares/Third_Party/FatFs/src/ff.c **** 		dirb += SZDIRE;
2077:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);
2078:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2079:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (res == FR_OK || res == FR_DISK_ERR) ? res : FR_INT_ERR;
2080:Middlewares/Third_Party/FatFs/src/ff.c **** }
2081:Middlewares/Third_Party/FatFs/src/ff.c **** 
2082:Middlewares/Third_Party/FatFs/src/ff.c **** 
2083:Middlewares/Third_Party/FatFs/src/ff.c **** 
2084:Middlewares/Third_Party/FatFs/src/ff.c **** /*-------------------------------------------*/
2085:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Create a new directory enrty block */
2086:Middlewares/Third_Party/FatFs/src/ff.c **** /*-------------------------------------------*/
2087:Middlewares/Third_Party/FatFs/src/ff.c **** 
2088:Middlewares/Third_Party/FatFs/src/ff.c **** static
2089:Middlewares/Third_Party/FatFs/src/ff.c **** void create_xdir (
2090:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block buffer */
2091:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn	/* Pointer to the nul terminated file name */
2092:Middlewares/Third_Party/FatFs/src/ff.c **** )
2093:Middlewares/Third_Party/FatFs/src/ff.c **** {
2094:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2095:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE nb, nc;
2096:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
2097:Middlewares/Third_Party/FatFs/src/ff.c **** 
2098:Middlewares/Third_Party/FatFs/src/ff.c **** 
2099:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create 85+C0 entry */
2100:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dirb, 0, 2 * SZDIRE);
2101:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_Type] = 0x85;
2102:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_Type + SZDIRE] = 0xC0;
2103:Middlewares/Third_Party/FatFs/src/ff.c **** 
2104:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create C1 entries */
2105:Middlewares/Third_Party/FatFs/src/ff.c **** 	nc = 0; nb = 1; chr = 1; i = SZDIRE * 2;
2106:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2107:Middlewares/Third_Party/FatFs/src/ff.c **** 		dirb[i++] = 0xC1; dirb[i++] = 0;	/* Entry type C1 */
2108:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {	/* Fill name field */
2109:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chr && (chr = lfn[nc]) != 0) nc++;	/* Get a character if exist */
2110:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(dirb + i, chr); 		/* Store it */
2111:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while ((i += 2) % SZDIRE != 0);
2112:Middlewares/Third_Party/FatFs/src/ff.c **** 		nb++;
2113:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (lfn[nc]);	/* Fill next entry if any char follows */
2114:Middlewares/Third_Party/FatFs/src/ff.c **** 
2115:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_NumName] = nc;	/* Set name length */
2116:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_NumSec] = nb;		/* Set block length */
2117:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dirb + XDIR_NameHash, xname_sum(lfn));	/* Set name hash */
2118:Middlewares/Third_Party/FatFs/src/ff.c **** }
2119:Middlewares/Third_Party/FatFs/src/ff.c **** 
2120:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
2121:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 56


2122:Middlewares/Third_Party/FatFs/src/ff.c **** 
2123:Middlewares/Third_Party/FatFs/src/ff.c **** 
2124:Middlewares/Third_Party/FatFs/src/ff.c **** 
2125:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 || _USE_LABEL || _FS_EXFAT
2126:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2127:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read an object from the directory                                     */
2128:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2129:Middlewares/Third_Party/FatFs/src/ff.c **** 
2130:Middlewares/Third_Party/FatFs/src/ff.c **** static
2131:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_read (
2132:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
2133:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol			/* Filtered by 0:file/directory or 1:volume label */
2134:Middlewares/Third_Party/FatFs/src/ff.c **** )
2135:Middlewares/Third_Party/FatFs/src/ff.c **** {
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_NO_FILE;
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2138:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c;
2139:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2140:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord = 0xFF, sum = 0xFF;
2141:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2142:Middlewares/Third_Party/FatFs/src/ff.c **** 
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (dp->sect) {
2144:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) {
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
2149:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2150:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2151:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_USE_LABEL && vol) {
2153:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c == 0x83) break;	/* Volume label entry? */
2154:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2155:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c == 0x85) {		/* Start of the file entry block? */
2156:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->blk_ofs = dp->dptr;	/* Get location of the block */
2157:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = load_xdir(dp);	/* Load the entry block */
2158:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
2159:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->obj.attr = fs->dirbuf[XDIR_Attr] & AM_MASK;	/* Get attribute */
2160:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2161:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
2162:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2163:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2164:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else
2165:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2166:Middlewares/Third_Party/FatFs/src/ff.c **** 		{	/* On the FAT12/16/32 volume */
2167:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;	/* Get attribute */
2168:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2169:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == DDEM || c == '.' || (int)((a & ~AM_ARC) == AM_VOL) != vol) {	/* An entry without valid 
2170:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF;
2171:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2172:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (a == AM_LFN) {			/* An LFN entry is found */
2173:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {			/* Is it start of an LFN sequence? */
2174:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2175:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;
2176:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;
2177:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2178:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check LFN validity and capture it */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 57


2179:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && pick_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0
2180:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* An SFN entry is found */
2181:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ord || sum != sum_sfn(dp->dir)) {	/* Is there a valid LFN? */
2182:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = 0xFFFFFFFF;			/* It has no LFN. */
2183:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2184:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
2185:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2186:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2187:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != DDEM && c != '.' && a != AM_LFN && (int)((a & ~AM_ARC) == AM_VOL) == vol) {	/* Is it a 
2189:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2190:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2191:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2192:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);		/* Next entry */
2194:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2195:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2196:Middlewares/Third_Party/FatFs/src/ff.c **** 
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) dp->sect = 0;		/* Terminate the read operation on error or EOT */
2198:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2199:Middlewares/Third_Party/FatFs/src/ff.c **** }
2200:Middlewares/Third_Party/FatFs/src/ff.c **** 
2201:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2 */
2202:Middlewares/Third_Party/FatFs/src/ff.c **** 
2203:Middlewares/Third_Party/FatFs/src/ff.c **** 
2204:Middlewares/Third_Party/FatFs/src/ff.c **** 
2205:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2206:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Find an object in the directory                  */
2207:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2208:Middlewares/Third_Party/FatFs/src/ff.c **** 
2209:Middlewares/Third_Party/FatFs/src/ff.c **** static
2210:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_find (	/* FR_OK(0):succeeded, !=0:error */
2211:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the directory object with the file name */
2212:Middlewares/Third_Party/FatFs/src/ff.c **** )
2213:Middlewares/Third_Party/FatFs/src/ff.c **** {
2214:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2216:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c;
2217:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2218:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, ord, sum;
2219:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2220:Middlewares/Third_Party/FatFs/src/ff.c **** 
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);			/* Rewind directory object */
2222:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
2223:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2224:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2225:Middlewares/Third_Party/FatFs/src/ff.c **** 		BYTE nc;
2226:Middlewares/Third_Party/FatFs/src/ff.c **** 		UINT di, ni;
2227:Middlewares/Third_Party/FatFs/src/ff.c **** 		WORD hash = xname_sum(fs->lfnbuf);		/* Hash value of the name to find */
2228:Middlewares/Third_Party/FatFs/src/ff.c **** 
2229:Middlewares/Third_Party/FatFs/src/ff.c **** 		while ((res = dir_read(dp, 0)) == FR_OK) {	/* Read an item */
2230:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 255
2231:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->dirbuf[XDIR_NumName] > _MAX_LFN) continue;			/* Skip comparison if inaccessible object n
2232:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2233:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->dirbuf + XDIR_NameHash) != hash) continue;	/* Skip comparison if hash mismatched
2234:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (nc = fs->dirbuf[XDIR_NumName], di = SZDIRE * 2, ni = 0; nc; nc--, di += 2, ni++) {	/* Compa
2235:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((di % SZDIRE) == 0) di += 2;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 58


2236:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ff_wtoupper(ld_word(fs->dirbuf + di)) != ff_wtoupper(fs->lfnbuf[ni])) break;
2237:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2238:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nc == 0 && !fs->lfnbuf[ni]) break;	/* Name matched? */
2239:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2240:Middlewares/Third_Party/FatFs/src/ff.c **** 		return res;
2241:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2242:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2243:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* On the FAT12/16/32 volume */
2244:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2245:Middlewares/Third_Party/FatFs/src/ff.c **** 	ord = sum = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2246:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2247:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2248:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2250:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];
2251:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
2252:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2253:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
2254:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
2255:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2256:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
2257:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
2258:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_NOLFN)) {
2259:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {		/* Is it start of LFN sequence? */
2260:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2261:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;	/* LFN start order */
2262:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
2263:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2264:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check validity of the LFN entry and compare it with given name */
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0x
2266:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2267:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
2268:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!ord && sum == sum_sfn(dp->dir)) break;	/* LFN matched? */
2269:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
2270:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2271:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2272:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2273:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
2274:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.attr = dp->dir[DIR_Attr] & AM_MASK;
2275:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
2276:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2277:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);	/* Next entry */
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
2279:Middlewares/Third_Party/FatFs/src/ff.c **** 
2280:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2281:Middlewares/Third_Party/FatFs/src/ff.c **** }
2282:Middlewares/Third_Party/FatFs/src/ff.c **** 
2283:Middlewares/Third_Party/FatFs/src/ff.c **** 
2284:Middlewares/Third_Party/FatFs/src/ff.c **** 
2285:Middlewares/Third_Party/FatFs/src/ff.c **** 
2286:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2287:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2288:Middlewares/Third_Party/FatFs/src/ff.c **** /* Register an object to the directory                                   */
2289:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2290:Middlewares/Third_Party/FatFs/src/ff.c **** 
2291:Middlewares/Third_Party/FatFs/src/ff.c **** static
2292:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_register (	/* FR_OK:succeeded, FR_DENIED:no free entry or too many SFN collision, FR_DI
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 59


2293:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Target directory with object name to be created */
2294:Middlewares/Third_Party/FatFs/src/ff.c **** )
2295:Middlewares/Third_Party/FatFs/src/ff.c **** {
2296:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2297:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2298:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2299:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n, nlen, nent;
2300:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sn[12], sum;
2301:Middlewares/Third_Party/FatFs/src/ff.c **** 
2302:Middlewares/Third_Party/FatFs/src/ff.c **** 
2303:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
2304:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
2305:Middlewares/Third_Party/FatFs/src/ff.c **** 
2306:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2307:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2308:Middlewares/Third_Party/FatFs/src/ff.c **** 		DIR dj;
2309:Middlewares/Third_Party/FatFs/src/ff.c **** 
2310:Middlewares/Third_Party/FatFs/src/ff.c **** 		nent = (nlen + 14) / 15 + 2;	/* Number of entries to allocate (85+C0+C1s) */
2311:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_alloc(dp, nent);		/* Allocate entries */
2312:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2313:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->blk_ofs = dp->dptr - SZDIRE * (nent - 1);	/* Set the allocated entry block offset */
2314:Middlewares/Third_Party/FatFs/src/ff.c **** 
2315:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->obj.sclust != 0 && (dp->obj.stat & 4)) {	/* Has the sub-directory been stretched? */
2316:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.objsize += (DWORD)fs->csize * SS(fs);	/* Increase the directory size by cluster size */
2317:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = fill_first_frag(&dp->obj);				/* Fill first fragment on the FAT if needed */
2318:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2319:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = fill_last_frag(&dp->obj, dp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if neede
2320:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2321:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = load_obj_dir(&dj, &dp->obj);				/* Load the object status */
2322:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2323:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_qword(fs->dirbuf + XDIR_FileSize, dp->obj.objsize);		/* Update the allocation status */
2324:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_qword(fs->dirbuf + XDIR_ValidFileSize, dp->obj.objsize);
2325:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbuf[XDIR_GenFlags] = dp->obj.stat | 1;
2326:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = store_xdir(&dj);							/* Store the object status */
2327:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2328:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2329:Middlewares/Third_Party/FatFs/src/ff.c **** 
2330:Middlewares/Third_Party/FatFs/src/ff.c **** 		create_xdir(fs->dirbuf, fs->lfnbuf);	/* Create on-memory directory block to be written later */
2331:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2333:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2334:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* On the FAT12/16/32 volume */
2335:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(sn, dp->fn, 12);
2336:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
2337:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < 100; n++) {
2339:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
2340:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Check if the name collides with existing SFN */
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2342:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2343:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
2344:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
2345:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = sn[NSFLAG];
2346:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2347:Middlewares/Third_Party/FatFs/src/ff.c **** 
2348:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create an SFN with/without LFNs. */
2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 60


2350:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
2351:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
2352:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, dp->dptr - nent * SZDIRE);
2353:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2354:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
2355:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {					/* Store LFN entries in bottom first */
2356:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, dp->sect);
2357:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
2358:Middlewares/Third_Party/FatFs/src/ff.c **** 				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
2359:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
2360:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);	/* Next entry */
2361:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (res == FR_OK && --nent);
2362:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2364:Middlewares/Third_Party/FatFs/src/ff.c **** 
2365:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non LFN configuration */
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, 1);		/* Allocate an entry for SFN */
2367:Middlewares/Third_Party/FatFs/src/ff.c **** 
2368:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2369:Middlewares/Third_Party/FatFs/src/ff.c **** 
2370:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set SFN entry */
2371:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
2375:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
2376:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2377:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->dir[DIR_NTres] = dp->fn[NSFLAG] & (NS_BODY | NS_EXT);	/* Put NT flag */
2378:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
2380:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2381:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2382:Middlewares/Third_Party/FatFs/src/ff.c **** 
2383:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2384:Middlewares/Third_Party/FatFs/src/ff.c **** }
2385:Middlewares/Third_Party/FatFs/src/ff.c **** 
2386:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
2387:Middlewares/Third_Party/FatFs/src/ff.c **** 
2388:Middlewares/Third_Party/FatFs/src/ff.c **** 
2389:Middlewares/Third_Party/FatFs/src/ff.c **** 
2390:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE == 0
2391:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2392:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remove an object from the directory                                   */
2393:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2394:Middlewares/Third_Party/FatFs/src/ff.c **** 
2395:Middlewares/Third_Party/FatFs/src/ff.c **** static
2396:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_remove (	/* FR_OK:Succeeded, FR_DISK_ERR:A disk error */
2397:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Directory object pointing the entry to be removed */
2398:Middlewares/Third_Party/FatFs/src/ff.c **** )
2399:Middlewares/Third_Party/FatFs/src/ff.c **** {
2400:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2401:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2402:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2403:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD last = dp->dptr;
2404:Middlewares/Third_Party/FatFs/src/ff.c **** 
2405:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = (dp->blk_ofs == 0xFFFFFFFF) ? FR_OK : dir_sdi(dp, dp->blk_ofs);	/* Goto top of the entry blo
2406:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 61


2407:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
2408:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, dp->sect);
2409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2410:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Mark an entry 'deleted' */
2411:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2412:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->dir[XDIR_Type] &= 0x7F;
2413:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* On the FAT12/16/32 volume */
2414:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->dir[DIR_Name] = DDEM;
2415:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2416:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
2417:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dptr >= last) break;	/* If reached last entry then all entries of the object has been de
2418:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 0);	/* Next entry */
2419:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
2420:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
2421:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2422:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Non LFN configuration */
2423:Middlewares/Third_Party/FatFs/src/ff.c **** 
2424:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(fs, dp->sect);
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2426:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir[DIR_Name] = DDEM;
2427:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
2428:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2430:Middlewares/Third_Party/FatFs/src/ff.c **** 
2431:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2432:Middlewares/Third_Party/FatFs/src/ff.c **** }
2433:Middlewares/Third_Party/FatFs/src/ff.c **** 
2434:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY && _FS_MINIMIZE == 0 */
2435:Middlewares/Third_Party/FatFs/src/ff.c **** 
2436:Middlewares/Third_Party/FatFs/src/ff.c **** 
2437:Middlewares/Third_Party/FatFs/src/ff.c **** 
2438:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
2439:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2440:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get file information from directory entry                             */
2441:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2442:Middlewares/Third_Party/FatFs/src/ff.c **** 
2443:Middlewares/Third_Party/FatFs/src/ff.c **** static
2444:Middlewares/Third_Party/FatFs/src/ff.c **** void get_fileinfo (		/* No return code */
2445:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	 	/* Pointer to the file information to be filled */
2447:Middlewares/Third_Party/FatFs/src/ff.c **** )
2448:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1008              		.loc 1 2448 0
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 0
 1011              		@ frame_needed = 0, uses_anonymous_args = 0
 1012              	.LVL125:
2449:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
2450:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c;
2451:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
2452:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2453:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, lfv;
2454:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2455:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2456:Middlewares/Third_Party/FatFs/src/ff.c **** 
2457:Middlewares/Third_Party/FatFs/src/ff.c **** 
2458:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[0] = 0;		/* Invaidate file info */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 62


 1013              		.loc 1 2458 0
 1014 0000 0023     		movs	r3, #0
 1015 0002 4B72     		strb	r3, [r1, #9]
2459:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return;	/* Exit if read pointer has reached end of directory */
 1016              		.loc 1 2459 0
 1017 0004 C369     		ldr	r3, [r0, #28]
 1018 0006 73B3     		cbz	r3, .L108
2448:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
 1019              		.loc 1 2448 0
 1020 0008 70B5     		push	{r4, r5, r6, lr}
 1021              	.LCFI14:
 1022              		.cfi_def_cfa_offset 16
 1023              		.cfi_offset 4, -16
 1024              		.cfi_offset 5, -12
 1025              		.cfi_offset 6, -8
 1026              		.cfi_offset 14, -4
2460:Middlewares/Third_Party/FatFs/src/ff.c **** 
2461:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2462:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2463:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2464:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_xdir_info(fs->dirbuf, fno);
2465:Middlewares/Third_Party/FatFs/src/ff.c **** 		return;
2466:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
2467:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2468:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
2469:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->blk_ofs != 0xFFFFFFFF) {	/* Get LFN if available */
2470:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = j = 0;
2471:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((w = fs->lfnbuf[j++]) != 0) {	/* Get an LFN character */
2472:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2473:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(w, 0);		/* Unicode -> OEM */
2474:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w == 0) { i = 0; break; }	/* No LFN if it could not be converted */
2475:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (_DF1S && w >= 0x100) {	/* Put 1st byte if it is a DBC (always false at SBCS cfg) */
2476:Middlewares/Third_Party/FatFs/src/ff.c **** 					fno->fname[i++] = (char)(w >> 8);
2477:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2479:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i >= _MAX_LFN) { i = 0; break; }	/* No LFN if buffer overflow */
2480:Middlewares/Third_Party/FatFs/src/ff.c **** 				fno->fname[i++] = (TCHAR)w;
2481:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2482:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[i] = 0;	/* Terminate the LFN */
2483:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2484:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2485:Middlewares/Third_Party/FatFs/src/ff.c **** 
2486:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = j = 0;
2487:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfv = fno->fname[i];	/* LFN is exist if non-zero */
2488:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
2489:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
2490:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
2491:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
2492:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) {						/* Insert a . if extension is exist */
2493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!lfv) fno->fname[j] = '.';
2494:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->altname[j++] = '.';
2495:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2496:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
2497:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c) && i != 8 && i != 11 && IsDBCS2(dp->dir[i])) {
2498:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = c << 8 | dp->dir[i++];
2499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2500:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 63


2501:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
2502:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2503:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->altname[j] = c;
2504:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!lfv) {
2505:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c) && (dp->dir[DIR_NTres] & ((i >= 9) ? NS_EXT : NS_BODY))) {
2506:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
2507:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2508:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[j] = c;
2509:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2510:Middlewares/Third_Party/FatFs/src/ff.c **** 		j++;
2511:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2512:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!lfv) {
2513:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j] = 0;
2514:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->dir[DIR_NTres]) j = 0;	/* Altname is no longer needed if neither LFN nor case info is ex
2515:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2516:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->altname[j] = 0;	/* Terminate the SFN */
2517:Middlewares/Third_Party/FatFs/src/ff.c **** 
2518:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non-LFN configuration */
2519:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = j = 0;
 1027              		.loc 1 2519 0
 1028 000a 0022     		movs	r2, #0
 1029 000c 1346     		mov	r3, r2
 1030 000e 05E0     		b	.L101
 1031              	.LVL126:
 1032              	.L103:
2520:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
2521:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
2522:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
2523:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
2524:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) fno->fname[j++] = '.';	/* Insert a . if extension is exist */
 1033              		.loc 1 2524 0
 1034 0010 092C     		cmp	r4, #9
 1035 0012 0ED0     		beq	.L111
 1036              	.L104:
 1037              	.LVL127:
2525:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j++] = c;
 1038              		.loc 1 2525 0
 1039 0014 8D18     		adds	r5, r1, r2
 1040 0016 6B72     		strb	r3, [r5, #9]
 1041 0018 0132     		adds	r2, r2, #1
 1042              	.LVL128:
 1043              	.L102:
 1044 001a 2346     		mov	r3, r4
 1045              	.LVL129:
 1046              	.L101:
2520:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
 1047              		.loc 1 2520 0
 1048 001c 0A2B     		cmp	r3, #10
 1049 001e 0DD8     		bhi	.L112
2521:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
 1050              		.loc 1 2521 0
 1051 0020 056A     		ldr	r5, [r0, #32]
 1052 0022 5C1C     		adds	r4, r3, #1
 1053              	.LVL130:
 1054 0024 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 1055              	.LVL131:
2522:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 64


 1056              		.loc 1 2522 0
 1057 0026 202B     		cmp	r3, #32
 1058 0028 F7D0     		beq	.L102
2523:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) fno->fname[j++] = '.';	/* Insert a . if extension is exist */
 1059              		.loc 1 2523 0
 1060 002a 052B     		cmp	r3, #5
 1061 002c F0D1     		bne	.L103
 1062 002e E523     		movs	r3, #229
 1063              	.LVL132:
 1064 0030 EEE7     		b	.L103
 1065              	.LVL133:
 1066              	.L111:
2524:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j++] = c;
 1067              		.loc 1 2524 0 discriminator 1
 1068 0032 8D18     		adds	r5, r1, r2
 1069 0034 2E26     		movs	r6, #46
 1070 0036 6E72     		strb	r6, [r5, #9]
 1071 0038 0132     		adds	r2, r2, #1
 1072              	.LVL134:
 1073 003a EBE7     		b	.L104
 1074              	.LVL135:
 1075              	.L112:
 1076 003c 0D46     		mov	r5, r1
 1077 003e 0446     		mov	r4, r0
2526:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2527:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[j] = 0;
 1078              		.loc 1 2527 0
 1079 0040 0A44     		add	r2, r2, r1
 1080              	.LVL136:
 1081 0042 0023     		movs	r3, #0
 1082              	.LVL137:
 1083 0044 5372     		strb	r3, [r2, #9]
2528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2529:Middlewares/Third_Party/FatFs/src/ff.c **** 
2530:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fattrib = dp->dir[DIR_Attr];				/* Attribute */
 1084              		.loc 1 2530 0
 1085 0046 036A     		ldr	r3, [r0, #32]
 1086 0048 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 1087 004a 0B72     		strb	r3, [r1, #8]
2531:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fsize = ld_dword(dp->dir + DIR_FileSize);	/* Size */
 1088              		.loc 1 2531 0
 1089 004c 006A     		ldr	r0, [r0, #32]
 1090              	.LVL138:
 1091 004e 1C30     		adds	r0, r0, #28
 1092 0050 FFF7FEFF 		bl	ld_dword
 1093              	.LVL139:
 1094 0054 2860     		str	r0, [r5]
2532:Middlewares/Third_Party/FatFs/src/ff.c **** 	tm = ld_dword(dp->dir + DIR_ModTime);			/* Timestamp */
 1095              		.loc 1 2532 0
 1096 0056 206A     		ldr	r0, [r4, #32]
 1097 0058 1630     		adds	r0, r0, #22
 1098 005a FFF7FEFF 		bl	ld_dword
 1099              	.LVL140:
2533:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->ftime = (WORD)tm; fno->fdate = (WORD)(tm >> 16);
 1100              		.loc 1 2533 0
 1101 005e E880     		strh	r0, [r5, #6]	@ movhi
 1102 0060 000C     		lsrs	r0, r0, #16
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 65


 1103              	.LVL141:
 1104 0062 A880     		strh	r0, [r5, #4]	@ movhi
2534:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1105              		.loc 1 2534 0
 1106 0064 70BD     		pop	{r4, r5, r6, pc}
 1107              	.LVL142:
 1108              	.L108:
 1109              	.LCFI15:
 1110              		.cfi_def_cfa_offset 0
 1111              		.cfi_restore 4
 1112              		.cfi_restore 5
 1113              		.cfi_restore 6
 1114              		.cfi_restore 14
 1115 0066 7047     		bx	lr
 1116              		.cfi_endproc
 1117              	.LFE164:
 1119              		.section	.text.create_name,"ax",%progbits
 1120              		.align	1
 1121              		.syntax unified
 1122              		.thumb
 1123              		.thumb_func
 1124              		.fpu fpv4-sp-d16
 1126              	create_name:
 1127              	.LFB165:
2535:Middlewares/Third_Party/FatFs/src/ff.c **** 
2536:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
2537:Middlewares/Third_Party/FatFs/src/ff.c **** 
2538:Middlewares/Third_Party/FatFs/src/ff.c **** 
2539:Middlewares/Third_Party/FatFs/src/ff.c **** 
2540:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND && _FS_MINIMIZE <= 1
2541:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2542:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pattern matching                                                      */
2543:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2544:Middlewares/Third_Party/FatFs/src/ff.c **** 
2545:Middlewares/Third_Party/FatFs/src/ff.c **** static
2546:Middlewares/Third_Party/FatFs/src/ff.c **** WCHAR get_achar (		/* Get a character and advances ptr 1 or 2 */
2547:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** ptr	/* Pointer to pointer to the SBCS/DBCS/Unicode string */
2548:Middlewares/Third_Party/FatFs/src/ff.c **** )
2549:Middlewares/Third_Party/FatFs/src/ff.c **** {
2550:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2551:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
2552:Middlewares/Third_Party/FatFs/src/ff.c **** 
2553:Middlewares/Third_Party/FatFs/src/ff.c **** 	chr = (BYTE)*(*ptr)++;					/* Get a byte */
2554:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsLower(chr)) chr -= 0x20;			/* To upper ASCII char */
2555:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2556:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (chr >= 0x80) chr = ExCvt[chr - 0x80];	/* To upper SBCS extended char */
2557:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2558:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsDBCS1(chr) && IsDBCS2(**ptr)) {		/* Get DBC 2nd byte if needed */
2559:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = chr << 8 | (BYTE)*(*ptr)++;
2560:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2561:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2562:Middlewares/Third_Party/FatFs/src/ff.c **** 	return chr;
2563:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2564:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ff_wtoupper(*(*ptr)++);			/* Get a word and to upper */
2565:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2566:Middlewares/Third_Party/FatFs/src/ff.c **** }
2567:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 66


2568:Middlewares/Third_Party/FatFs/src/ff.c **** 
2569:Middlewares/Third_Party/FatFs/src/ff.c **** static
2570:Middlewares/Third_Party/FatFs/src/ff.c **** int pattern_matching (	/* 0:not matched, 1:matched */
2571:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pat,	/* Matching pattern */
2572:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* nam,	/* String to be tested */
2573:Middlewares/Third_Party/FatFs/src/ff.c **** 	int skip,			/* Number of pre-skip chars (number of ?s) */
2574:Middlewares/Third_Party/FatFs/src/ff.c **** 	int inf				/* Infinite search (* specified) */
2575:Middlewares/Third_Party/FatFs/src/ff.c **** )
2576:Middlewares/Third_Party/FatFs/src/ff.c **** {
2577:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *pp, *np;
2578:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR pc, nc;
2579:Middlewares/Third_Party/FatFs/src/ff.c **** 	int nm, nx;
2580:Middlewares/Third_Party/FatFs/src/ff.c **** 
2581:Middlewares/Third_Party/FatFs/src/ff.c **** 
2582:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (skip--) {				/* Pre-skip name chars */
2583:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!get_achar(&nam)) return 0;	/* Branch mismatched if less name chars */
2584:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2585:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!*pat && inf) return 1;		/* (short circuit) */
2586:Middlewares/Third_Party/FatFs/src/ff.c **** 
2587:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2588:Middlewares/Third_Party/FatFs/src/ff.c **** 		pp = pat; np = nam;			/* Top of pattern and name to match */
2589:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2590:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (*pp == '?' || *pp == '*') {	/* Wildcard? */
2591:Middlewares/Third_Party/FatFs/src/ff.c **** 				nm = nx = 0;
2592:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {				/* Analyze the wildcard chars */
2593:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (*pp++ == '?') nm++; else nx = 1;
2594:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (*pp == '?' || *pp == '*');
2595:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (pattern_matching(pp, np, nm, nx)) return 1;	/* Test new branch (recurs upto number of wildc
2596:Middlewares/Third_Party/FatFs/src/ff.c **** 				nc = *np; break;	/* Branch mismatched */
2597:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2598:Middlewares/Third_Party/FatFs/src/ff.c **** 			pc = get_achar(&pp);	/* Get a pattern char */
2599:Middlewares/Third_Party/FatFs/src/ff.c **** 			nc = get_achar(&np);	/* Get a name char */
2600:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc != nc) break;	/* Branch mismatched? */
2601:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc == 0) return 1;	/* Branch matched? (matched at end of both strings) */
2602:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2603:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_achar(&nam);			/* nam++ */
2604:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (inf && nc);			/* Retry until end of name if infinite search is specified */
2605:Middlewares/Third_Party/FatFs/src/ff.c **** 
2606:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 0;
2607:Middlewares/Third_Party/FatFs/src/ff.c **** }
2608:Middlewares/Third_Party/FatFs/src/ff.c **** 
2609:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FIND && _FS_MINIMIZE <= 1 */
2610:Middlewares/Third_Party/FatFs/src/ff.c **** 
2611:Middlewares/Third_Party/FatFs/src/ff.c **** 
2612:Middlewares/Third_Party/FatFs/src/ff.c **** 
2613:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2614:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pick a top segment and create the object name in directory form       */
2615:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2616:Middlewares/Third_Party/FatFs/src/ff.c **** 
2617:Middlewares/Third_Party/FatFs/src/ff.c **** static
2618:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT create_name (	/* FR_OK: successful, FR_INVALID_NAME: could not create */
2619:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2620:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the segment in the path string */
2621:Middlewares/Third_Party/FatFs/src/ff.c **** )
2622:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1128              		.loc 1 2622 0
 1129              		.cfi_startproc
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 67


 1130              		@ args = 0, pretend = 0, frame = 0
 1131              		@ frame_needed = 0, uses_anonymous_args = 0
 1132              	.LVL143:
 1133 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1134              	.LCFI16:
 1135              		.cfi_def_cfa_offset 40
 1136              		.cfi_offset 3, -40
 1137              		.cfi_offset 4, -36
 1138              		.cfi_offset 5, -32
 1139              		.cfi_offset 6, -28
 1140              		.cfi_offset 7, -24
 1141              		.cfi_offset 8, -20
 1142              		.cfi_offset 9, -16
 1143              		.cfi_offset 10, -12
 1144              		.cfi_offset 11, -8
 1145              		.cfi_offset 14, -4
 1146 0004 8246     		mov	r10, r0
 1147 0006 8B46     		mov	fp, r1
2623:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2624:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE b, cf;
2625:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, *lfn;
2626:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, ni, si, di;
2627:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *p;
2628:Middlewares/Third_Party/FatFs/src/ff.c **** 
2629:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create LFN in Unicode */
2630:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = *path; lfn = dp->obj.fs->lfnbuf; si = di = 0;
2631:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2632:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = p[si++];					/* Get a character */
2633:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < ' ') break;				/* Break if end of the path name */
2634:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == '/' || w == '\\') {	/* Break if a separator is found */
2635:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
2636:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
2637:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2638:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN) return FR_INVALID_NAME;	/* Reject too long name */
2639:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2640:Middlewares/Third_Party/FatFs/src/ff.c **** 		w &= 0xFF;
2641:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(w)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
2642:Middlewares/Third_Party/FatFs/src/ff.c **** 			b = (BYTE)p[si++];			/* Get 2nd byte */
2643:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = (w << 8) + b;			/* Create a DBC */
2644:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(b)) return FR_INVALID_NAME;	/* Reject invalid sequence */
2645:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2646:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
2647:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
2648:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2649:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) return FR_INVALID_NAME;	/* Reject illegal characters
2650:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode character */
2651:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2652:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = &p[si];						/* Return pointer to the next segment */
2653:Middlewares/Third_Party/FatFs/src/ff.c **** 	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
2654:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2655:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((di == 1 && lfn[di - 1] == '.') ||
2656:Middlewares/Third_Party/FatFs/src/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {	/* Is this segment a dot name? */
2657:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di] = 0;
2658:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 11; i++)		/* Create dot name for SFN entry */
2659:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
2660:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
2661:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 68


2662:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2663:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2664:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di) {						/* Snip off trailing spaces and dots if exist */
2665:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[di - 1];
2666:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w != ' ' && w != '.') break;
2667:Middlewares/Third_Party/FatFs/src/ff.c **** 		di--;
2668:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2669:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfn[di] = 0;						/* LFN is created */
2670:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (di == 0) return FR_INVALID_NAME;	/* Reject nul name */
2671:Middlewares/Third_Party/FatFs/src/ff.c **** 
2672:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create SFN in directory form */
2673:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dp->fn, ' ', 11);
2674:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
2675:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
2676:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
2677:Middlewares/Third_Party/FatFs/src/ff.c **** 
2678:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = b = 0; ni = 8;
2679:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2680:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[si++];					/* Get an LFN character */
2681:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) break;					/* Break on end of the LFN */
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
2683:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
2684:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2685:Middlewares/Third_Party/FatFs/src/ff.c **** 
2686:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= ni || si == di) {		/* Extension or end of SFN */
2687:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11) {				/* Long extension */
2688:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; break;
2689:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2690:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
2691:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si > di) break;			/* No extension */
2692:Middlewares/Third_Party/FatFs/src/ff.c **** 			si = di; i = 8; ni = 11;	/* Enter extension section */
2693:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
2694:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2695:Middlewares/Third_Party/FatFs/src/ff.c **** 
2696:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w >= 0x80) {				/* Non ASCII character */
2697:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2698:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 0);		/* Unicode -> OEM code */
2699:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
2700:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2701:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(ff_wtoupper(w), 0);	/* Upper converted Unicode -> OEM code */
2702:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2703:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LFN;				/* Force create LFN entry */
2704:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2705:Middlewares/Third_Party/FatFs/src/ff.c **** 
2706:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {		/* Is this DBC? (always false at SBCS cfg) */
2707:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= ni - 1) {
2708:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; i = ni; continue;
2709:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2710:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i++] = (BYTE)(w >> 8);
2711:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2712:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
2713:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
2714:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2715:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsUpper(w)) {		/* ASCII large capital */
2716:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 2;
2717:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
2718:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (IsLower(w)) {	/* ASCII small capital */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 69


2719:Middlewares/Third_Party/FatFs/src/ff.c **** 						b |= 1; w -= 0x20;
2720:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2721:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2722:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2723:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2724:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i++] = (BYTE)w;
2725:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2726:Middlewares/Third_Party/FatFs/src/ff.c **** 
2727:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with DDEM, replace it
2728:Middlewares/Third_Party/FatFs/src/ff.c **** 
2729:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ni == 8) b <<= 2;
2730:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* Create LFN entry when there are com
2731:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are c
2732:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
2733:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
2734:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2735:Middlewares/Third_Party/FatFs/src/ff.c **** 
2736:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->fn[NSFLAG] = cf;	/* SFN is created */
2737:Middlewares/Third_Party/FatFs/src/ff.c **** 
2738:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2739:Middlewares/Third_Party/FatFs/src/ff.c **** 
2740:Middlewares/Third_Party/FatFs/src/ff.c **** 
2741:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* _USE_LFN != 0 : Non-LFN configuration */
2742:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c, d, *sfn;
2743:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT ni, si, i;
2744:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *p;
2745:Middlewares/Third_Party/FatFs/src/ff.c **** 
2746:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create file name in directory form */
2747:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = *path; sfn = dp->fn;
 1148              		.loc 1 2747 0
 1149 0008 0F68     		ldr	r7, [r1]
 1150              	.LVL144:
 1151 000a 00F12409 		add	r9, r0, #36
 1152              	.LVL145:
2748:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(sfn, ' ', 11);
 1153              		.loc 1 2748 0
 1154 000e 0B22     		movs	r2, #11
 1155 0010 2021     		movs	r1, #32
 1156              	.LVL146:
 1157 0012 4846     		mov	r0, r9
 1158              	.LVL147:
 1159 0014 FFF7FEFF 		bl	mem_set
 1160              	.LVL148:
2749:Middlewares/Third_Party/FatFs/src/ff.c **** 	si = i = 0; ni = 8;
 1161              		.loc 1 2749 0
 1162 0018 0026     		movs	r6, #0
 1163 001a 3346     		mov	r3, r6
 1164 001c 4FF00808 		mov	r8, #8
 1165 0020 2CE0     		b	.L114
 1166              	.LVL149:
 1167              	.L119:
2750:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2751:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (p[si] == '.') { /* Is this a dot entry? */
2752:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2753:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (BYTE)p[si++];
2754:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != '.' || si >= 3) break;
2755:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 70


2756:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2757:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
2758:Middlewares/Third_Party/FatFs/src/ff.c **** 		*path = p + si;								/* Return pointer to the next segment */
2759:Middlewares/Third_Party/FatFs/src/ff.c **** 		sfn[NSFLAG] = (c <= ' ') ? NS_LAST | NS_DOT : NS_DOT;	/* Set last segment flag if end of the path
2760:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2761:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2762:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2763:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2764:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)p[si++];
2765:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
2766:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
2767:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 1168              		.loc 1 2767 0 discriminator 4
 1169 0022 0135     		adds	r5, r5, #1
 1170              	.LVL150:
 1171              	.L118:
 1172              		.loc 1 2767 0 is_stmt 0 discriminator 1
 1173 0024 7B5D     		ldrb	r3, [r7, r5]	@ zero_extendqisi2
 1174 0026 2F2B     		cmp	r3, #47
 1175 0028 FBD0     		beq	.L119
 1176              		.loc 1 2767 0 discriminator 3
 1177 002a 5C2B     		cmp	r3, #92
 1178 002c F9D0     		beq	.L119
 1179              	.L115:
2768:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
2769:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2770:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '.' || i >= ni) {		/* End of body or over size? */
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Over size or invalid dot */
2772:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
2773:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
2774:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2775:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {				/* Extended character? */
2776:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2777:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = ExCvt[c - 0x80];		/* To upper extended characters (SBCS cfg) */
2778:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2779:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_DF1S
2780:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;		/* Reject extended characters (ASCII only cfg) */
2781:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2782:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2783:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2784:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {				/* Check if it is a DBC 1st byte (always false at SBCS cfg.) */
2785:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
2786:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(d) || i >= ni - 1) return FR_INVALID_NAME;	/* Reject invalid DBC */
2787:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2788:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = d;
2789:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c)) return FR_INVALID_NAME;	/* Reject illegal chrs for SFN */
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
2792:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2793:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2794:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2795:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = p + si;						/* Return pointer to the next segment */
 1180              		.loc 1 2795 0 is_stmt 1
 1181 002e 3D44     		add	r5, r5, r7
 1182              	.LVL151:
 1183 0030 CBF80050 		str	r5, [fp]
2796:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == 0) return FR_INVALID_NAME;	/* Reject nul string */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 71


 1184              		.loc 1 2796 0
 1185 0034 002E     		cmp	r6, #0
 1186 0036 43D0     		beq	.L131
2797:Middlewares/Third_Party/FatFs/src/ff.c **** 
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with 
 1187              		.loc 1 2798 0
 1188 0038 9AF82430 		ldrb	r3, [r10, #36]	@ zero_extendqisi2
 1189 003c E52B     		cmp	r3, #229
 1190 003e 35D0     		beq	.L135
 1191              	.L126:
2799:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 1192              		.loc 1 2799 0
 1193 0040 202C     		cmp	r4, #32
 1194 0042 37D8     		bhi	.L132
 1195 0044 0423     		movs	r3, #4
 1196              	.L127:
 1197              		.loc 1 2799 0 is_stmt 0 discriminator 4
 1198 0046 8AF82F30 		strb	r3, [r10, #47]
2800:Middlewares/Third_Party/FatFs/src/ff.c **** 
2801:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
 1199              		.loc 1 2801 0 is_stmt 1 discriminator 4
 1200 004a 0020     		movs	r0, #0
 1201 004c 28E0     		b	.L122
 1202              	.LVL152:
 1203              	.L137:
2772:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
 1204              		.loc 1 2772 0
 1205 004e 0826     		movs	r6, #8
 1206              	.LVL153:
 1207 0050 4FF00B08 		mov	r8, #11
 1208              	.LVL154:
 1209 0054 11E0     		b	.L123
 1210              	.LVL155:
 1211              	.L121:
2775:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 1212              		.loc 1 2775 0
 1213 0056 14F0800F 		tst	r4, #128
 1214 005a 23D1     		bne	.L136
 1215              	.L124:
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
 1216              		.loc 1 2790 0
 1217 005c 2146     		mov	r1, r4
 1218 005e 1948     		ldr	r0, .L138
 1219 0060 FFF7FEFF 		bl	chk_chr
 1220              	.LVL156:
 1221 0064 50BB     		cbnz	r0, .L130
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
 1222              		.loc 1 2791 0
 1223 0066 A4F16103 		sub	r3, r4, #97
 1224 006a DBB2     		uxtb	r3, r3
 1225 006c 192B     		cmp	r3, #25
 1226 006e 01D8     		bhi	.L125
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
 1227              		.loc 1 2791 0 is_stmt 0 discriminator 1
 1228 0070 203C     		subs	r4, r4, #32
 1229              	.LVL157:
 1230 0072 E4B2     		uxtb	r4, r4
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 72


 1231              	.LVL158:
 1232              	.L125:
2792:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1233              		.loc 1 2792 0 is_stmt 1
 1234 0074 09F80640 		strb	r4, [r9, r6]
 1235 0078 0136     		adds	r6, r6, #1
 1236              	.LVL159:
 1237              	.L123:
 1238 007a 2B46     		mov	r3, r5
 1239              	.LVL160:
 1240              	.L114:
2764:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 1241              		.loc 1 2764 0
 1242 007c 5D1C     		adds	r5, r3, #1
 1243              	.LVL161:
 1244 007e FC5C     		ldrb	r4, [r7, r3]	@ zero_extendqisi2
 1245              	.LVL162:
2765:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
 1246              		.loc 1 2765 0
 1247 0080 202C     		cmp	r4, #32
 1248 0082 D4D9     		bls	.L115
2766:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 1249              		.loc 1 2766 0
 1250 0084 2F2C     		cmp	r4, #47
 1251 0086 CDD0     		beq	.L118
2766:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 1252              		.loc 1 2766 0 is_stmt 0 discriminator 1
 1253 0088 5C2C     		cmp	r4, #92
 1254 008a CBD0     		beq	.L118
2770:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Over size or invalid dot */
 1255              		.loc 1 2770 0 is_stmt 1
 1256 008c 2E2C     		cmp	r4, #46
 1257 008e 01D0     		beq	.L120
2770:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Over size or invalid dot */
 1258              		.loc 1 2770 0 is_stmt 0 discriminator 1
 1259 0090 B045     		cmp	r8, r6
 1260 0092 E0D8     		bhi	.L121
 1261              	.L120:
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
 1262              		.loc 1 2771 0 is_stmt 1
 1263 0094 B8F10B0F 		cmp	r8, #11
 1264 0098 0ED0     		beq	.L128
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
 1265              		.loc 1 2771 0 is_stmt 0 discriminator 2
 1266 009a 2E2C     		cmp	r4, #46
 1267 009c D7D0     		beq	.L137
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
 1268              		.loc 1 2771 0
 1269 009e 0620     		movs	r0, #6
 1270              	.LVL163:
 1271              	.L122:
2802:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LFN != 0 */
2803:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1272              		.loc 1 2803 0 is_stmt 1
 1273 00a0 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1274              	.LVL164:
 1275              	.L136:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 73


2777:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 1276              		.loc 1 2777 0
 1277 00a4 803C     		subs	r4, r4, #128
 1278              	.LVL165:
 1279 00a6 084B     		ldr	r3, .L138+4
 1280 00a8 1C5D     		ldrb	r4, [r3, r4]	@ zero_extendqisi2
 1281              	.LVL166:
 1282 00aa D7E7     		b	.L124
 1283              	.LVL167:
 1284              	.L135:
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 1285              		.loc 1 2798 0 discriminator 1
 1286 00ac 0523     		movs	r3, #5
 1287 00ae 8AF82430 		strb	r3, [r10, #36]
 1288 00b2 C5E7     		b	.L126
 1289              	.L132:
2799:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1290              		.loc 1 2799 0
 1291 00b4 0023     		movs	r3, #0
 1292 00b6 C6E7     		b	.L127
 1293              	.LVL168:
 1294              	.L128:
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
 1295              		.loc 1 2771 0
 1296 00b8 0620     		movs	r0, #6
 1297 00ba F1E7     		b	.L122
 1298              	.L130:
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
 1299              		.loc 1 2790 0
 1300 00bc 0620     		movs	r0, #6
 1301 00be EFE7     		b	.L122
 1302              	.LVL169:
 1303              	.L131:
2796:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1304              		.loc 1 2796 0
 1305 00c0 0620     		movs	r0, #6
 1306 00c2 EDE7     		b	.L122
 1307              	.L139:
 1308              		.align	2
 1309              	.L138:
 1310 00c4 00000000 		.word	.LC0
 1311 00c8 00000000 		.word	.LANCHOR1
 1312              		.cfi_endproc
 1313              	.LFE165:
 1315              		.section	.text.get_ldnumber,"ax",%progbits
 1316              		.align	1
 1317              		.syntax unified
 1318              		.thumb
 1319              		.thumb_func
 1320              		.fpu fpv4-sp-d16
 1322              	get_ldnumber:
 1323              	.LFB167:
2804:Middlewares/Third_Party/FatFs/src/ff.c **** 
2805:Middlewares/Third_Party/FatFs/src/ff.c **** 
2806:Middlewares/Third_Party/FatFs/src/ff.c **** 
2807:Middlewares/Third_Party/FatFs/src/ff.c **** 
2808:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 74


2809:Middlewares/Third_Party/FatFs/src/ff.c **** /* Follow a file path                                                    */
2810:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2811:Middlewares/Third_Party/FatFs/src/ff.c **** 
2812:Middlewares/Third_Party/FatFs/src/ff.c **** static
2813:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
2814:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Directory object to return last directory and found object */
2815:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Full-path string to find a file or directory */
2816:Middlewares/Third_Party/FatFs/src/ff.c **** )
2817:Middlewares/Third_Party/FatFs/src/ff.c **** {
2818:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2819:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns;
2820:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID *obj = &dp->obj;
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
2822:Middlewares/Third_Party/FatFs/src/ff.c **** 
2823:Middlewares/Third_Party/FatFs/src/ff.c **** 
2824:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2825:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path != '/' && *path != '\\') {	/* Without heading separator */
2826:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = fs->cdir;				/* Start from current directory */
2827:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
2828:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2829:Middlewares/Third_Party/FatFs/src/ff.c **** 	{										/* With heading separator */
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*path == '/' || *path == '\\') path++;	/* Strip heading separator */
2831:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
2832:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2833:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2834:Middlewares/Third_Party/FatFs/src/ff.c **** 	obj->n_frag = 0;	/* Invalidate last fragment counter of the object */
2835:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2836:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT && obj->sclust) {	/* Retrieve the sub-directory status if needed */
2837:Middlewares/Third_Party/FatFs/src/ff.c **** 		DIR dj;
2838:Middlewares/Third_Party/FatFs/src/ff.c **** 
2839:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_scl = fs->cdc_scl;
2840:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_size = fs->cdc_size;
2841:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_ofs = fs->cdc_ofs;
2842:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = load_obj_dir(&dj, obj);
2843:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2844:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->objsize = ld_dword(fs->dirbuf + XDIR_FileSize);
2845:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
2846:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2847:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2848:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2849:Middlewares/Third_Party/FatFs/src/ff.c **** 
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
2852:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
2853:Middlewares/Third_Party/FatFs/src/ff.c **** 
2854:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Follow path */
2855:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = create_name(dp, &path);	/* Get a segment name of the path */
2857:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
2862:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
2863:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
2864:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fn[NSFLAG] = NS_NONAME;
2865:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_OK;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 75


2866:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {							/* Could not find the object */
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
2868:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2869:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2870:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2871:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2872:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
2873:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get into the sub-directory */
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(obj->attr & AM_DIR)) {		/* It is not a sub-directory and cannot follow */
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
2876:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2877:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2878:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {		/* Save containing directory information for next dir */
2879:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_scl = obj->sclust;
2880:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_size = ((DWORD)obj->objsize & 0xFFFFFF00) | obj->stat;
2881:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_ofs = dp->blk_ofs;
2882:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Open next directory */
2883:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
2884:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
2885:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
2886:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2887:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
2888:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
2889:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2890:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2891:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2892:Middlewares/Third_Party/FatFs/src/ff.c **** 
2893:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2894:Middlewares/Third_Party/FatFs/src/ff.c **** }
2895:Middlewares/Third_Party/FatFs/src/ff.c **** 
2896:Middlewares/Third_Party/FatFs/src/ff.c **** 
2897:Middlewares/Third_Party/FatFs/src/ff.c **** 
2898:Middlewares/Third_Party/FatFs/src/ff.c **** 
2899:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2900:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get logical drive number from path name                               */
2901:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2902:Middlewares/Third_Party/FatFs/src/ff.c **** 
2903:Middlewares/Third_Party/FatFs/src/ff.c **** static
2904:Middlewares/Third_Party/FatFs/src/ff.c **** int get_ldnumber (		/* Returns logical drive number (-1:invalid drive) */
2905:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the path name */
2906:Middlewares/Third_Party/FatFs/src/ff.c **** )
2907:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1324              		.loc 1 2907 0
 1325              		.cfi_startproc
 1326              		@ args = 0, pretend = 0, frame = 0
 1327              		@ frame_needed = 0, uses_anonymous_args = 0
 1328              		@ link register save eliminated.
 1329              	.LVL170:
2908:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
2909:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2910:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol = -1;
2911:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
2912:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char* const volid[] = {_VOLUME_STRS};
2913:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *sp;
2914:Middlewares/Third_Party/FatFs/src/ff.c **** 	char c;
2915:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR tc;
2916:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 76


2917:Middlewares/Third_Party/FatFs/src/ff.c **** 
2918:Middlewares/Third_Party/FatFs/src/ff.c **** 
2919:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path) {	/* If the pointer is not a null */
 1330              		.loc 1 2919 0
 1331 0000 0168     		ldr	r1, [r0]
 1332 0002 09B1     		cbz	r1, .L154
2920:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the pa
 1333              		.loc 1 2920 0
 1334 0004 0A46     		mov	r2, r1
 1335 0006 03E0     		b	.L141
 1336              	.L154:
2910:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1337              		.loc 1 2910 0
 1338 0008 4FF0FF33 		mov	r3, #-1
 1339 000c 08E0     		b	.L151
 1340              	.LVL171:
 1341              	.L144:
 1342              		.loc 1 2920 0 discriminator 4
 1343 000e 0132     		adds	r2, r2, #1
 1344              	.LVL172:
 1345              	.L141:
 1346              		.loc 1 2920 0 is_stmt 0 discriminator 1
 1347 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1348 0012 202B     		cmp	r3, #32
 1349 0014 01D9     		bls	.L143
 1350              		.loc 1 2920 0 discriminator 3
 1351 0016 3A2B     		cmp	r3, #58
 1352 0018 F9D1     		bne	.L144
 1353              	.L143:
2921:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (*tt == ':') {	/* If a ':' is exist in the path name */
 1354              		.loc 1 2921 0 is_stmt 1
 1355 001a 3A2B     		cmp	r3, #58
 1356 001c 02D0     		beq	.L155
2922:Middlewares/Third_Party/FatFs/src/ff.c **** 			tp = *path;
2923:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = *tp++ - '0';
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
2925:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2926:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2927:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = ++tt;
2928:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2929:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2930:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID
2931:Middlewares/Third_Party/FatFs/src/ff.c **** 			 else {	/* No numeric drive number, find string drive id */
2932:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = 0; tt++;
2933:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
2934:Middlewares/Third_Party/FatFs/src/ff.c **** 					sp = volid[i]; tp = *path;
2935:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {	/* Compare a string drive id with path name */
2936:Middlewares/Third_Party/FatFs/src/ff.c **** 						c = *sp++; tc = *tp++;
2937:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsLower(tc)) tc -= 0x20;
2938:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (c && (TCHAR)c == tc);
2939:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while ((c || tp != tt) && ++i < _VOLUMES);	/* Repeat for each id until pattern match */
2940:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2941:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2942:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = tt;
2943:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2944:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2945:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 77


2946:Middlewares/Third_Party/FatFs/src/ff.c **** 			return vol;
2947:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2948:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0 && _VOLUMES >= 2
2949:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = CurrVol;	/* Current drive */
2950:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2951:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = 0;		/* Drive 0 */
 1357              		.loc 1 2951 0
 1358 001e 0023     		movs	r3, #0
 1359              	.LVL173:
 1360              	.L151:
2952:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2953:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2954:Middlewares/Third_Party/FatFs/src/ff.c **** 	return vol;
2955:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1361              		.loc 1 2955 0
 1362 0020 1846     		mov	r0, r3
 1363              	.LVL174:
 1364 0022 7047     		bx	lr
 1365              	.LVL175:
 1366              	.L155:
2907:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
 1367              		.loc 1 2907 0
 1368 0024 10B4     		push	{r4}
 1369              	.LCFI17:
 1370              		.cfi_def_cfa_offset 4
 1371              		.cfi_offset 4, -4
 1372              	.LVL176:
2923:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
 1373              		.loc 1 2923 0
 1374 0026 4C1C     		adds	r4, r1, #1
 1375              	.LVL177:
 1376 0028 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1377 002a 303B     		subs	r3, r3, #48
 1378              	.LVL178:
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 1379              		.loc 1 2924 0
 1380 002c 092B     		cmp	r3, #9
 1381 002e 08D8     		bhi	.L147
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 1382              		.loc 1 2924 0 is_stmt 0 discriminator 1
 1383 0030 A242     		cmp	r2, r4
 1384 0032 09D1     		bne	.L148
2925:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
 1385              		.loc 1 2925 0 is_stmt 1
 1386 0034 5BB9     		cbnz	r3, .L149
 1387              	.LVL179:
2927:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1388              		.loc 1 2927 0
 1389 0036 0132     		adds	r2, r2, #1
 1390              	.LVL180:
 1391 0038 0260     		str	r2, [r0]
 1392              	.LVL181:
 1393              	.L140:
 1394              		.loc 1 2955 0
 1395 003a 1846     		mov	r0, r3
 1396              	.LVL182:
 1397 003c 5DF8044B 		ldr	r4, [sp], #4
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 78


 1398              	.LCFI18:
 1399              		.cfi_remember_state
 1400              		.cfi_restore 4
 1401              		.cfi_def_cfa_offset 0
 1402              	.LVL183:
 1403 0040 7047     		bx	lr
 1404              	.LVL184:
 1405              	.L147:
 1406              	.LCFI19:
 1407              		.cfi_restore_state
2910:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1408              		.loc 1 2910 0
 1409 0042 4FF0FF33 		mov	r3, #-1
 1410              	.LVL185:
 1411 0046 F8E7     		b	.L140
 1412              	.LVL186:
 1413              	.L148:
 1414 0048 4FF0FF33 		mov	r3, #-1
 1415              	.LVL187:
 1416 004c F5E7     		b	.L140
 1417              	.LVL188:
 1418              	.L149:
 1419 004e 4FF0FF33 		mov	r3, #-1
 1420              	.LVL189:
 1421 0052 F2E7     		b	.L140
 1422              		.cfi_endproc
 1423              	.LFE167:
 1425              		.section	.text.putc_init,"ax",%progbits
 1426              		.align	1
 1427              		.syntax unified
 1428              		.thumb
 1429              		.thumb_func
 1430              		.fpu fpv4-sp-d16
 1432              	putc_init:
 1433              	.LFB191:
2956:Middlewares/Third_Party/FatFs/src/ff.c **** 
2957:Middlewares/Third_Party/FatFs/src/ff.c **** 
2958:Middlewares/Third_Party/FatFs/src/ff.c **** 
2959:Middlewares/Third_Party/FatFs/src/ff.c **** 
2960:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2961:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load a sector and check if it is an FAT boot sector                   */
2962:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2963:Middlewares/Third_Party/FatFs/src/ff.c **** 
2964:Middlewares/Third_Party/FatFs/src/ff.c **** static
2965:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE check_fs (	/* 0:FAT, 1:exFAT, 2:Valid BS but not FAT, 3:Not a BS, 4:Disk error */
2966:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
2967:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect	/* Sector# (lba) to load and check if it is an FAT-VBR or not */
2968:Middlewares/Third_Party/FatFs/src/ff.c **** )
2969:Middlewares/Third_Party/FatFs/src/ff.c **** {
2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
2972:Middlewares/Third_Party/FatFs/src/ff.c **** 
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always placed 
2974:Middlewares/Third_Party/FatFs/src/ff.c **** 
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->win[BS_JmpBoot] == 0xE9 || (fs->win[BS_JmpBoot] == 0xEB && fs->win[BS_JmpBoot + 2] == 0x90
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 79


2978:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2979:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2980:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!mem_cmp(fs->win + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11)) return 1;
2981:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2982:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 2;
2983:Middlewares/Third_Party/FatFs/src/ff.c **** }
2984:Middlewares/Third_Party/FatFs/src/ff.c **** 
2985:Middlewares/Third_Party/FatFs/src/ff.c **** 
2986:Middlewares/Third_Party/FatFs/src/ff.c **** 
2987:Middlewares/Third_Party/FatFs/src/ff.c **** 
2988:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2989:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find logical drive and check if the volume is mounted                 */
2990:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2991:Middlewares/Third_Party/FatFs/src/ff.c **** 
2992:Middlewares/Third_Party/FatFs/src/ff.c **** static
2993:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT find_volume (	/* FR_OK(0): successful, !=0: any error occurred */
2994:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path,	/* Pointer to pointer to the path name (drive number) */
2995:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** rfs,		/* Pointer to pointer to the found file system object */
2996:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* !=0: Check write protection for write access */
2997:Middlewares/Third_Party/FatFs/src/ff.c **** )
2998:Middlewares/Third_Party/FatFs/src/ff.c **** {
2999:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
3000:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3001:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
3002:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];
3003:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD nrsv;
3004:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3005:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
3006:Middlewares/Third_Party/FatFs/src/ff.c **** 
3007:Middlewares/Third_Party/FatFs/src/ff.c **** 
3008:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = 0;
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3012:Middlewares/Third_Party/FatFs/src/ff.c **** 
3013:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check if the file system object is valid or not */
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];					/* Get pointer to the file system object */
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
3016:Middlewares/Third_Party/FatFs/src/ff.c **** 
3017:Middlewares/Third_Party/FatFs/src/ff.c **** 	ENTER_FF(fs);						/* Lock the volume */
3018:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
3019:Middlewares/Third_Party/FatFs/src/ff.c **** 
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
3022:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
3023:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
3026:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_OK;				/* The file system object is valid */
3028:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3029:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3030:Middlewares/Third_Party/FatFs/src/ff.c **** 
3031:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The file system object is not valid. */
3032:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Following code attempts to mount the volume. (analyze BPB and initialize the fs object) */
3033:Middlewares/Third_Party/FatFs/src/ff.c **** 
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;					/* Clear the file system object */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 80


3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
3039:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
3041:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
3042:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3043:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS					/* Get sector size (multiple sector size cfg only) */
3044:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(fs->drv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK) return FR_DISK_ERR;
3045:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (SS(fs) > _MAX_SS || SS(fs) < _MIN_SS || (SS(fs) & (SS(fs) - 1))) return FR_DISK_ERR;
3046:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3047:Middlewares/Third_Party/FatFs/src/ff.c **** 
3048:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Find an FAT partition on the drive. Supports only generic partitioning rules, FDISK and SFD. */
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 	bsect = 0;
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
3055:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3056:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = LD2PT(vol);					/* Partition number: 0:auto, 1-4:forced */
3057:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i) i--;
3058:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {							/* Find an FAT volume */
3059:Middlewares/Third_Party/FatFs/src/ff.c **** 			bsect = br[i];
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
3062:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
3065:Middlewares/Third_Party/FatFs/src/ff.c **** 
3066:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* An FAT volume is found (bsect). Following code initializes the file system object */
3067:Middlewares/Third_Party/FatFs/src/ff.c **** 
3068:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3069:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 1) {
3070:Middlewares/Third_Party/FatFs/src/ff.c **** 		QWORD maxlba;
3071:Middlewares/Third_Party/FatFs/src/ff.c **** 
3072:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = BPB_ZeroedEx; i < BPB_ZeroedEx + 53 && fs->win[i] == 0; i++) ;	/* Check zero filler */
3073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i < BPB_ZeroedEx + 53) return FR_NO_FILESYSTEM;
3074:Middlewares/Third_Party/FatFs/src/ff.c **** 
3075:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(fs->win + BPB_FSVerEx) != 0x100) return FR_NO_FILESYSTEM;	/* Check exFAT revision (Mu
3076:Middlewares/Third_Party/FatFs/src/ff.c **** 
3077:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (1 << fs->win[BPB_BytsPerSecEx] != SS(fs)) {	/* (BPB_BytsPerSecEx must be equal to the physica
3078:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_NO_FILESYSTEM;
3079:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3080:Middlewares/Third_Party/FatFs/src/ff.c **** 
3081:Middlewares/Third_Party/FatFs/src/ff.c **** 		maxlba = ld_qword(fs->win + BPB_TotSecEx) + bsect;	/* Last LBA + 1 of the volume */
3082:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (maxlba >= 0x100000000) return FR_NO_FILESYSTEM;	/* (It cannot be handled in 32-bit LBA) */
3083:Middlewares/Third_Party/FatFs/src/ff.c **** 
3084:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = ld_dword(fs->win + BPB_FatSzEx);	/* Number of sectors per FAT */
3085:Middlewares/Third_Party/FatFs/src/ff.c **** 
3086:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATsEx];			/* Number of FATs */
3087:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1) return FR_NO_FILESYSTEM;	/* (Supports only 1 FAT) */
3088:Middlewares/Third_Party/FatFs/src/ff.c **** 
3089:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->csize = 1 << fs->win[BPB_SecPerClusEx];		/* Cluster size */
3090:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0)	return FR_NO_FILESYSTEM;	/* (Must be 1..32768) */
3091:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 81


3092:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = ld_dword(fs->win + BPB_NumClusEx);		/* Number of clusters */
3093:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst > MAX_EXFAT) return FR_NO_FILESYSTEM;	/* (Too many clusters) */
3094:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fatent = nclst + 2;
3095:Middlewares/Third_Party/FatFs/src/ff.c **** 
3096:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Boundaries and Limits */
3097:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;
3098:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + ld_dword(fs->win + BPB_DataOfsEx);
3099:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + ld_dword(fs->win + BPB_FatOfsEx);
3100:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (maxlba < (QWORD)fs->database + nclst * fs->csize) return FR_NO_FILESYSTEM;	/* (Volume size mu
3101:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = ld_dword(fs->win + BPB_RootClusEx);
3102:Middlewares/Third_Party/FatFs/src/ff.c **** 
3103:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Check if bitmap location is in assumption (at the first cluster) */
3104:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, clust2sect(fs, fs->dirbase)) != FR_OK) return FR_DISK_ERR;
3105:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < SS(fs); i += SZDIRE) {
3106:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->win[i] == 0x81 && ld_dword(fs->win + i + 20) == 2) break;	/* 81 entry with cluster #2? *
3107:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3108:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == SS(fs)) return FR_NO_FILESYSTEM;
3109:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3110:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3111:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3112:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_EXFAT;			/* FAT sub-type */
3113:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
3114:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
3115:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must
3117:Middlewares/Third_Party/FatFs/src/ff.c **** 
3118:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize = ld_word(fs->win + BPB_FATSz16);		/* Number of sectors per FAT */
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
3121:Middlewares/Third_Party/FatFs/src/ff.c **** 
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
3125:Middlewares/Third_Party/FatFs/src/ff.c **** 
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
3128:Middlewares/Third_Party/FatFs/src/ff.c **** 
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 		tsect = ld_word(fs->win + BPB_TotSec16);		/* Number of sectors on the volume */
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
3134:Middlewares/Third_Party/FatFs/src/ff.c **** 
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 		nrsv = ld_word(fs->win + BPB_RsvdSecCnt);		/* Number of reserved sectors */
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
3137:Middlewares/Third_Party/FatFs/src/ff.c **** 
3138:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Determine the FAT sub type */
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
3145:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
3146:Middlewares/Third_Party/FatFs/src/ff.c **** 
3147:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Boundaries and Limits */
3148:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 82


3149:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
3156:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
3157:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;/* (BPB_RootEntCnt must not be 0) */
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
3160:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
3162:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not
3164:Middlewares/Third_Party/FatFs/src/ff.c **** 
3165:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3166:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get FSINFO if available */
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3168:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0x80;
3169:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo32 == 1 */
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
3172:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
3173:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
3174:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
3175:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
3177:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
3178:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3179:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 1) == 0
3180:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
3181:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3182:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 2) == 0
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
3184:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3185:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3186:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3187:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* (_FS_NOFSINFO & 3) != 3 */
3188:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
3189:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3190:Middlewares/Third_Party/FatFs/src/ff.c **** 
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = fmt;		/* FAT sub-type */
3192:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
3193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
3194:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->lfnbuf = LfnBuf;	/* Static LFN working buffer */
3195:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3196:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->dirbuf = DirBuf;	/* Static directory block scratchpad buuffer */
3197:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3198:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3199:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
3200:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->cdir = 0;			/* Initialize current directory */
3201:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3202:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0			/* Clear file lock semaphores */
3203:Middlewares/Third_Party/FatFs/src/ff.c **** 	clear_lock(fs);
3204:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3205:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 83


3206:Middlewares/Third_Party/FatFs/src/ff.c **** }
3207:Middlewares/Third_Party/FatFs/src/ff.c **** 
3208:Middlewares/Third_Party/FatFs/src/ff.c **** 
3209:Middlewares/Third_Party/FatFs/src/ff.c **** 
3210:Middlewares/Third_Party/FatFs/src/ff.c **** 
3211:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3212:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if the file/directory object is valid or not                    */
3213:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3214:Middlewares/Third_Party/FatFs/src/ff.c **** 
3215:Middlewares/Third_Party/FatFs/src/ff.c **** static
3216:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT validate (	/* Returns FR_OK or FR_INVALID_OBJECT */
3217:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,		/* Pointer to the _OBJ, the 1st member in the FIL/DIR object, to check validity */
3218:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fs		/* Pointer to pointer to the owner file system object to return */
3219:Middlewares/Third_Party/FatFs/src/ff.c **** )
3220:Middlewares/Third_Party/FatFs/src/ff.c **** {
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3222:Middlewares/Third_Party/FatFs/src/ff.c **** 
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!obj || !obj->fs || !obj->fs->fs_type || obj->fs->id != obj->id || (disk_status(obj->fs->drv) 
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
3225:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INVALID_OBJECT;	/* The object is invalid */
3226:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
3227:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = obj->fs;			/* Owner file sytem object */
3228:Middlewares/Third_Party/FatFs/src/ff.c **** 		ENTER_FF(obj->fs);		/* Lock file system */
3229:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;			/* Valid object */
3230:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3231:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3232:Middlewares/Third_Party/FatFs/src/ff.c **** }
3233:Middlewares/Third_Party/FatFs/src/ff.c **** 
3234:Middlewares/Third_Party/FatFs/src/ff.c **** 
3235:Middlewares/Third_Party/FatFs/src/ff.c **** 
3236:Middlewares/Third_Party/FatFs/src/ff.c **** 
3237:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------------------------------------
3238:Middlewares/Third_Party/FatFs/src/ff.c **** 
3239:Middlewares/Third_Party/FatFs/src/ff.c ****    Public Functions (FatFs API)
3240:Middlewares/Third_Party/FatFs/src/ff.c **** 
3241:Middlewares/Third_Party/FatFs/src/ff.c **** ----------------------------------------------------------------------------*/
3242:Middlewares/Third_Party/FatFs/src/ff.c **** 
3243:Middlewares/Third_Party/FatFs/src/ff.c **** 
3244:Middlewares/Third_Party/FatFs/src/ff.c **** 
3245:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3246:Middlewares/Third_Party/FatFs/src/ff.c **** /* Mount/Unmount a Logical Drive                                         */
3247:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3248:Middlewares/Third_Party/FatFs/src/ff.c **** 
3249:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mount (
3250:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
3251:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
3252:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
3253:Middlewares/Third_Party/FatFs/src/ff.c **** )
3254:Middlewares/Third_Party/FatFs/src/ff.c **** {
3255:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
3256:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3257:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3258:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *rp = path;
3259:Middlewares/Third_Party/FatFs/src/ff.c **** 
3260:Middlewares/Third_Party/FatFs/src/ff.c **** 
3261:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3262:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&rp);
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 84


3263:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3264:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
3265:Middlewares/Third_Party/FatFs/src/ff.c **** 
3266:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cfs) {
3267:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3268:Middlewares/Third_Party/FatFs/src/ff.c **** 		clear_lock(cfs);
3269:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3270:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Discard sync object of the current volume */
3271:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
3272:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 		cfs->fs_type = 0;				/* Clear old fs object */
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3275:Middlewares/Third_Party/FatFs/src/ff.c **** 
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs) {
3277:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
3278:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
3279:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
3280:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3281:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 	FatFs[vol] = fs;					/* Register new fs object */
3283:Middlewares/Third_Party/FatFs/src/ff.c **** 
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
3285:Middlewares/Third_Party/FatFs/src/ff.c **** 
3286:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
3287:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3288:Middlewares/Third_Party/FatFs/src/ff.c **** }
3289:Middlewares/Third_Party/FatFs/src/ff.c **** 
3290:Middlewares/Third_Party/FatFs/src/ff.c **** 
3291:Middlewares/Third_Party/FatFs/src/ff.c **** 
3292:Middlewares/Third_Party/FatFs/src/ff.c **** 
3293:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3294:Middlewares/Third_Party/FatFs/src/ff.c **** /* Open or Create a File                                                 */
3295:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3296:Middlewares/Third_Party/FatFs/src/ff.c **** 
3297:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_open (
3298:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the blank file object */
3299:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file name */
3300:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* Access mode and file open mode flags */
3301:Middlewares/Third_Party/FatFs/src/ff.c **** )
3302:Middlewares/Third_Party/FatFs/src/ff.c **** {
3303:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3304:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3305:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3306:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3307:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw, cl, bcs, clst, sc;
3308:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs;
3309:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3310:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3311:Middlewares/Third_Party/FatFs/src/ff.c **** 
3312:Middlewares/Third_Party/FatFs/src/ff.c **** 
3313:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fp) return FR_INVALID_OBJECT;
3314:Middlewares/Third_Party/FatFs/src/ff.c **** 
3315:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3316:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= _FS_READONLY ? FA_READ : FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_CREATE_NEW | FA_OPEN_A
3317:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, mode);
3318:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3319:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 85


3320:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3321:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
3322:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
3325:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3326:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3327:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3328:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
3330:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3331:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3333:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create or Open a file */
3334:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
3336:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
3337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3338:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
3339:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3340:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&dj);
3341:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3342:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3343:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_CREATE_ALWAYS;		/* File is created */
3344:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3345:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {								/* Any object is already existing */
3346:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
3347:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
3348:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3349:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
3350:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3351:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
3353:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
3354:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3355:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3356:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get current allocation info */
3357:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.fs = fs;
3358:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = ld_dword(fs->dirbuf + XDIR_FstClus);
3359:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
3360:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3361:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.n_frag = 0;
3362:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Initialize directory entry block */
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_CrtTime, dw);	/* Set created time */
3364:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_CrtTime10] = 0;
3365:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, dw);	/* Set modified time */
3366:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_ModTime10] = 0;
3367:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_ARC;				/* Reset attribute */
3368:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, 0);		/* Reset file allocation info */
3369:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_qword(fs->dirbuf + XDIR_FileSize, 0);
3370:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_qword(fs->dirbuf + XDIR_ValidFileSize, 0);
3371:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 1;
3372:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = store_xdir(&dj);
3373:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK && fp->obj.sclust) {		/* Remove the cluster chain if exist */
3374:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&fp->obj, fp->obj.sclust, 0);
3375:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->last_clst = fp->obj.sclust - 1;		/* Reuse the cluster hole */
3376:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 86


3377:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
3378:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3379:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
3380:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean directory info */
3381:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_CrtTime, dw);	/* Set created time */
3382:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
3383:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
3384:Middlewares/Third_Party/FatFs/src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
3385:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
3386:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
3387:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
3388:Middlewares/Third_Party/FatFs/src/ff.c **** 
3389:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (cl) {							/* Remove the cluster chain if exist */
3390:Middlewares/Third_Party/FatFs/src/ff.c **** 						dw = fs->winsect;
3391:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3393:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, dw);
3394:Middlewares/Third_Party/FatFs/src/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
3395:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3396:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3397:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3398:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3399:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3400:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {	/* Open an existing file */
3401:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Following succeeded */
3402:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
3403:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
3404:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((mode & FA_WRITE) && (dj.obj.attr & AM_RDO)) { /* R/O violation */
3406:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
3407:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3408:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3409:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3411:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3412:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
3413:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_MODIFIED;
3414:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
3415:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dj.dir;
3416:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
3418:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
3419:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3420:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3421:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* R/O configuration */
3422:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3423:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
3424:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3425:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3426:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
3427:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
3428:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3429:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3430:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3431:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3432:Middlewares/Third_Party/FatFs/src/ff.c **** 
3433:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 87


3434:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3435:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3436:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_scl = dj.obj.sclust;							/* Get containing directory info */
3437:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3438:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_ofs = dj.blk_ofs;
3439:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Get object allocation info */
3440:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
3441:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3442:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
3443:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3444:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3445:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
3446:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
3447:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3448:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3449:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->cltbl = 0;			/* Disable fast seek mode */
3450:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3451:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.fs = fs;	 	/* Validate the file object */
3452:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.id = fs->id;
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
3454:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;			/* Clear error flag */
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
3456:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
3457:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3458:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3459:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fp->buf, 0, _MAX_SS);	/* Clear sector buffer */
3460:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((mode & FA_SEEKEND) && fp->obj.objsize > 0) {	/* Seek to end of file if FA_OPEN_APPEND is sp
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
3463:Middlewares/Third_Party/FatFs/src/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
3468:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
3469:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3470:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
3472:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
3473:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_INT_ERR;
3474:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
3475:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->sect = sc + (DWORD)(ofs / SS(fs));
3476:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3477:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_read(fs->drv, fp->buf, fp->sect, 1) != RES_OK) res = FR_DISK_ERR;
3478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3479:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3480:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3481:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3482:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3483:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3484:Middlewares/Third_Party/FatFs/src/ff.c **** 
3485:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3486:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3487:Middlewares/Third_Party/FatFs/src/ff.c **** 
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) fp->obj.fs = 0;	/* Invalidate file object on error */
3489:Middlewares/Third_Party/FatFs/src/ff.c **** 
3490:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 88


3491:Middlewares/Third_Party/FatFs/src/ff.c **** }
3492:Middlewares/Third_Party/FatFs/src/ff.c **** 
3493:Middlewares/Third_Party/FatFs/src/ff.c **** 
3494:Middlewares/Third_Party/FatFs/src/ff.c **** 
3495:Middlewares/Third_Party/FatFs/src/ff.c **** 
3496:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3497:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read File                                                             */
3498:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 
3500:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_read (
3501:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 	/* Pointer to the file object */
3502:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* buff,	/* Pointer to data buffer */
3503:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btr,	/* Number of bytes to read */
3504:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* br	/* Pointer to number of bytes read */
3505:Middlewares/Third_Party/FatFs/src/ff.c **** )
3506:Middlewares/Third_Party/FatFs/src/ff.c **** {
3507:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3508:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3509:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
3510:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t remain;
3511:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, cc, csect;
3512:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *rbuff = (BYTE*)buff;
3513:Middlewares/Third_Party/FatFs/src/ff.c **** 
3514:Middlewares/Third_Party/FatFs/src/ff.c **** 
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 	*br = 0;	/* Clear read byte counter */
3516:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
3519:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
3521:Middlewares/Third_Party/FatFs/src/ff.c **** 
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btr;								/* Repeat until all data read */
3523:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
3526:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
3530:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl) {
3532:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3533:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3534:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3535:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(&fp->obj, fp->clust);	/* Follow cluster chain on the FAT */
3537:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3538:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst < 2) ABORT(fs, FR_INT_ERR);
3540:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
3541:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
3542:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fs, fp->clust);	/* Get current sector */
3544:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
3545:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
3546:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
3547:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {							/* Read maximum contiguous sectors directly */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 89


3548:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
3549:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
3550:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3551:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fs->drv, rbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
3552:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
3553:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3554:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->wflag && fs->winsect - sect < cc) {
3555:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fs->winsect - sect) * SS(fs)), fs->win, SS(fs));
3556:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3557:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((fp->flag & FA_DIRTY) && fp->sect - sect < cc) {
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
3560:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3561:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3562:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3563:Middlewares/Third_Party/FatFs/src/ff.c **** 				rcnt = SS(fs) * cc;				/* Number of bytes transferred */
3564:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
3565:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3566:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3567:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->sect != sect) {			/* Load data sector if not in cache */
3568:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
3572:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3573:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fs->drv, fp->buf, sect, 1) != RES_OK)	ABORT(fs, FR_DISK_ERR);	/* Fill sector cach
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3576:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3577:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = sect;
3578:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
3580:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
3581:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3582:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3583:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, fs->win + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3584:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3585:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, fp->buf + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3586:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3587:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3588:Middlewares/Third_Party/FatFs/src/ff.c **** 
3589:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
3590:Middlewares/Third_Party/FatFs/src/ff.c **** }
3591:Middlewares/Third_Party/FatFs/src/ff.c **** 
3592:Middlewares/Third_Party/FatFs/src/ff.c **** 
3593:Middlewares/Third_Party/FatFs/src/ff.c **** 
3594:Middlewares/Third_Party/FatFs/src/ff.c **** 
3595:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3596:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3597:Middlewares/Third_Party/FatFs/src/ff.c **** /* Write File                                                            */
3598:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3599:Middlewares/Third_Party/FatFs/src/ff.c **** 
3600:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_write (
3601:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
3602:Middlewares/Third_Party/FatFs/src/ff.c **** 	const void* buff,	/* Pointer to the data to be written */
3603:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btw,			/* Number of bytes to write */
3604:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bw			/* Pointer to number of bytes written */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 90


3605:Middlewares/Third_Party/FatFs/src/ff.c **** )
3606:Middlewares/Third_Party/FatFs/src/ff.c **** {
3607:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3608:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3609:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
3610:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wcnt, cc, csect;
3611:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *wbuff = (const BYTE*)buff;
3612:Middlewares/Third_Party/FatFs/src/ff.c **** 
3613:Middlewares/Third_Party/FatFs/src/ff.c **** 
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bw = 0;	/* Clear write byte counter */
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
3618:Middlewares/Third_Party/FatFs/src/ff.c **** 
3619:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check fptr wrap-around (file size cannot reach 4GiB on FATxx) */
3620:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((!_FS_EXFAT || fs->fs_type != FS_EXFAT) && (DWORD)(fp->fptr + btw) < (DWORD)fp->fptr) {
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
3622:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3623:Middlewares/Third_Party/FatFs/src/ff.c **** 
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btw;							/* Repeat until all data written */
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {				/* On the cluster boundary? */
3629:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
3630:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;	/* Follow from the origin */
3631:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) {		/* If no cluster is allocated, */
3632:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
3633:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3634:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* On the middle or end of the file */
3635:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3636:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl) {
3637:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3638:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3639:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3640:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, fp->clust);	/* Follow or stretch cluster chain on the FAT */
3642:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
3646:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
3649:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3650:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3651:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->winsect == fp->sect && sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Write-back s
3652:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back sector cache */
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
3655:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
3656:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3657:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fs, fp->clust);	/* Get current sector */
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
3660:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
3661:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 91


3662:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {						/* Write maximum contiguous sectors directly */
3663:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
3664:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
3665:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3666:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, wbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
3667:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3668:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3669:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct writ
3670:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fs->win, wbuff + ((fs->winsect - sect) * SS(fs)), SS(fs));
3671:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 0;
3672:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3673:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3674:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->sect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write *
3675:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
3677:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3678:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3679:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3680:Middlewares/Third_Party/FatFs/src/ff.c **** 				wcnt = SS(fs) * cc;		/* Number of bytes transferred */
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
3682:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3683:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3684:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fptr >= fp->obj.objsize) {	/* Avoid silly cache filling on the growing edge */
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);
3686:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->winsect = sect;
3687:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3688:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->sect != sect && 		/* Fill sector cache with file data */
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fs, FR_DISK_ERR);
3693:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3694:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = sect;
3696:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 		wcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
3698:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
3699:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(fs->win + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3702:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
3703:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(fp->buf + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3705:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_DIRTY;
3706:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3707:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3708:Middlewares/Third_Party/FatFs/src/ff.c **** 
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->flag |= FA_MODIFIED;				/* Set file change flag */
3710:Middlewares/Third_Party/FatFs/src/ff.c **** 
3711:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
3712:Middlewares/Third_Party/FatFs/src/ff.c **** }
3713:Middlewares/Third_Party/FatFs/src/ff.c **** 
3714:Middlewares/Third_Party/FatFs/src/ff.c **** 
3715:Middlewares/Third_Party/FatFs/src/ff.c **** 
3716:Middlewares/Third_Party/FatFs/src/ff.c **** 
3717:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3718:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize the File                                                  */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 92


3719:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3720:Middlewares/Third_Party/FatFs/src/ff.c **** 
3721:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_sync (
3722:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
3723:Middlewares/Third_Party/FatFs/src/ff.c **** )
3724:Middlewares/Third_Party/FatFs/src/ff.c **** {
3725:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3726:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3727:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
3728:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
3729:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3730:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3731:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3732:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3733:Middlewares/Third_Party/FatFs/src/ff.c **** 
3734:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
3735:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3736:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
3737:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3738:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {	/* Write-back cached data if needed */
3739:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
3740:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
3741:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3742:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3743:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Update the directory entry */
3744:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();				/* Modified time */
3745:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3746:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3747:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = fill_first_frag(&fp->obj);	/* Fill first fragment on the FAT if needed */
3748:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3749:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if nee
3750:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3751:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3752:Middlewares/Third_Party/FatFs/src/ff.c **** 					INIT_NAMBUF(fs);
3753:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = load_obj_dir(&dj, &fp->obj);	/* Load directory entry block */
3754:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
3755:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_Attr] |= AM_ARC;				/* Set archive bit */
3756:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_GenFlags] = fp->obj.stat | 1;	/* Update file allocation info */
3757:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_FstClus, fp->obj.sclust);
3758:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_qword(fs->dirbuf + XDIR_FileSize, fp->obj.objsize);
3759:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_qword(fs->dirbuf + XDIR_ValidFileSize, fp->obj.objsize);
3760:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_ModTime, tm);		/* Update modified time */
3761:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_ModTime10] = 0;
3762:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_AccTime, 0);
3763:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = store_xdir(&dj);	/* Restore it to the directory */
3764:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3765:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = sync_fs(fs);
3766:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->flag &= (BYTE)~FA_MODIFIED;
3767:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3768:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3769:Middlewares/Third_Party/FatFs/src/ff.c **** 					FREE_NAMBUF();
3770:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3771:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
3772:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3773:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3774:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, fp->dir_sect);
3775:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 93


3776:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = fp->dir_ptr;
3777:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
3778:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
3779:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
3780:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
3781:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
3782:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
3783:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
3784:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
3785:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3786:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3787:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3788:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3789:Middlewares/Third_Party/FatFs/src/ff.c **** 
3790:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3791:Middlewares/Third_Party/FatFs/src/ff.c **** }
3792:Middlewares/Third_Party/FatFs/src/ff.c **** 
3793:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
3794:Middlewares/Third_Party/FatFs/src/ff.c **** 
3795:Middlewares/Third_Party/FatFs/src/ff.c **** 
3796:Middlewares/Third_Party/FatFs/src/ff.c **** 
3797:Middlewares/Third_Party/FatFs/src/ff.c **** 
3798:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3799:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close File                                                            */
3800:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3801:Middlewares/Third_Party/FatFs/src/ff.c **** 
3802:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_close (
3803:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object to be closed */
3804:Middlewares/Third_Party/FatFs/src/ff.c **** )
3805:Middlewares/Third_Party/FatFs/src/ff.c **** {
3806:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3807:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3808:Middlewares/Third_Party/FatFs/src/ff.c **** 
3809:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3810:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_sync(fp);					/* Flush cached data */
3811:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
3812:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3813:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = validate(&fp->obj, &fs);	/* Lock volume */
3815:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3816:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3817:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(fp->obj.lockid);	/* Decrement file open counter */
3818:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
3819:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3820:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.fs = 0;			/* Invalidate file object */
3822:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3823:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
3824:Middlewares/Third_Party/FatFs/src/ff.c **** 			unlock_fs(fs, FR_OK);		/* Unlock volume */
3825:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3826:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3827:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3829:Middlewares/Third_Party/FatFs/src/ff.c **** }
3830:Middlewares/Third_Party/FatFs/src/ff.c **** 
3831:Middlewares/Third_Party/FatFs/src/ff.c **** 
3832:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 94


3833:Middlewares/Third_Party/FatFs/src/ff.c **** 
3834:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 1
3835:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3836:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Current Directory or Current Drive, Get Current Directory      */
3837:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3838:Middlewares/Third_Party/FatFs/src/ff.c **** 
3839:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
3840:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdrive (
3841:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Drive number */
3842:Middlewares/Third_Party/FatFs/src/ff.c **** )
3843:Middlewares/Third_Party/FatFs/src/ff.c **** {
3844:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3845:Middlewares/Third_Party/FatFs/src/ff.c **** 
3846:Middlewares/Third_Party/FatFs/src/ff.c **** 
3847:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3848:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
3849:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3850:Middlewares/Third_Party/FatFs/src/ff.c **** 
3851:Middlewares/Third_Party/FatFs/src/ff.c **** 	CurrVol = (BYTE)vol;	/* Set it as current volume */
3852:Middlewares/Third_Party/FatFs/src/ff.c **** 
3853:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
3854:Middlewares/Third_Party/FatFs/src/ff.c **** }
3855:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3856:Middlewares/Third_Party/FatFs/src/ff.c **** 
3857:Middlewares/Third_Party/FatFs/src/ff.c **** 
3858:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdir (
3859:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
3860:Middlewares/Third_Party/FatFs/src/ff.c **** )
3861:Middlewares/Third_Party/FatFs/src/ff.c **** {
3862:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3863:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3864:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3865:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3866:Middlewares/Third_Party/FatFs/src/ff.c **** 
3867:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3868:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
3869:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3870:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3871:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3872:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
3873:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* Follow completed */
3874:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
3875:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->cdir = dj.obj.sclust;	/* It is the start directory itself */
3876:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3877:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3878:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_scl = dj.obj.c_scl;
3879:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_size = dj.obj.c_size;
3880:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_ofs = dj.obj.c_ofs;
3881:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3882:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3883:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3884:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {	/* It is a sub-directory */
3885:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3886:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
3887:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdir = ld_dword(fs->dirbuf + XDIR_FstClus);		/* Sub-directory cluster */
3888:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_scl = dj.obj.sclust;						/* Save containing directory information */
3889:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 95


3890:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_ofs = dj.blk_ofs;
3891:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3892:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3893:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3894:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdir = ld_clust(fs, dj.dir);					/* Sub-directory cluster */
3895:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3896:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3897:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;		/* Reached but a file */
3898:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3899:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3900:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3901:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3902:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
3903:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3904:Middlewares/Third_Party/FatFs/src/ff.c **** 
3905:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3906:Middlewares/Third_Party/FatFs/src/ff.c **** }
3907:Middlewares/Third_Party/FatFs/src/ff.c **** 
3908:Middlewares/Third_Party/FatFs/src/ff.c **** 
3909:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 2
3910:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getcwd (
3911:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the directory path */
3912:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len		/* Size of path */
3913:Middlewares/Third_Party/FatFs/src/ff.c **** )
3914:Middlewares/Third_Party/FatFs/src/ff.c **** {
3915:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3916:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3917:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3918:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n;
3919:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ccl;
3920:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR *tp;
3921:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO fno;
3922:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3923:Middlewares/Third_Party/FatFs/src/ff.c **** 
3924:Middlewares/Third_Party/FatFs/src/ff.c **** 
3925:Middlewares/Third_Party/FatFs/src/ff.c **** 	*buff = 0;
3926:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3927:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume((const TCHAR**)&buff, &fs, 0);	/* Get current volume */
3928:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3929:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3930:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3931:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = len;			/* Bottom of buffer (directory stack base) */
3932:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {	/* (Cannot do getcwd on exFAT and returns root path)
3933:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.sclust = fs->cdir;				/* Start to follow upper directory from current directory */
3934:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((ccl = dj.obj.sclust) != 0) {	/* Repeat while current directory is a sub-directory */
3935:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(&dj, 1 * SZDIRE);	/* Get parent directory */
3936:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3937:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, dj.sect);
3938:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3939:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.obj.sclust = ld_clust(fs, dj.dir);	/* Goto parent directory */
3940:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(&dj, 0);
3941:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3942:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {							/* Find the entry links to the child directory */
3943:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_read(&dj, 0);
3944:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
3945:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ccl == ld_clust(fs, dj.dir)) break;	/* Found the entry */
3946:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_next(&dj, 0);
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 96


3947:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (res == FR_OK);
3948:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
3949:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3950:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(&dj, &fno);		/* Get the directory name and push it to the buffer */
3951:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = 0; fno.fname[n]; n++) ;
3952:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < n + 3) {
3953:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NOT_ENOUGH_CORE; break;
3954:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3955:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (n) buff[--i] = fno.fname[--n];
3956:Middlewares/Third_Party/FatFs/src/ff.c **** 				buff[--i] = '/';
3957:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3958:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3959:Middlewares/Third_Party/FatFs/src/ff.c **** 		tp = buff;
3960:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3961:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
3962:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = '0' + CurrVol;			/* Put drive number */
3963:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = ':';
3964:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3965:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i == len) {					/* Root-directory */
3966:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tp++ = '/';
3967:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* Sub-directroy */
3968:Middlewares/Third_Party/FatFs/src/ff.c **** 				do		/* Add stacked path str */
3969:Middlewares/Third_Party/FatFs/src/ff.c **** 					*tp++ = buff[i++];
3970:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (i < len);
3971:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3972:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3973:Middlewares/Third_Party/FatFs/src/ff.c **** 		*tp = 0;
3974:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3975:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3976:Middlewares/Third_Party/FatFs/src/ff.c **** 
3977:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3978:Middlewares/Third_Party/FatFs/src/ff.c **** }
3979:Middlewares/Third_Party/FatFs/src/ff.c **** 
3980:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 2 */
3981:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 1 */
3982:Middlewares/Third_Party/FatFs/src/ff.c **** 
3983:Middlewares/Third_Party/FatFs/src/ff.c **** 
3984:Middlewares/Third_Party/FatFs/src/ff.c **** 
3985:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3986:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3987:Middlewares/Third_Party/FatFs/src/ff.c **** /* Seek File R/W Pointer                                                 */
3988:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3989:Middlewares/Third_Party/FatFs/src/ff.c **** 
3990:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_lseek (
3991:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
3992:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs		/* File pointer from top of file */
3993:Middlewares/Third_Party/FatFs/src/ff.c **** )
3994:Middlewares/Third_Party/FatFs/src/ff.c **** {
3995:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3996:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3997:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, bcs, nsect;
3998:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ifptr;
3999:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
4000:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, pcl, ncl, tcl, dsc, tlen, ulen, *tbl;
4001:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4002:Middlewares/Third_Party/FatFs/src/ff.c **** 
4003:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 97


4004:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
4005:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
4006:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && fs->fs_type == FS_EXFAT) {
4007:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if needed
4008:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4009:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4010:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
4011:Middlewares/Third_Party/FatFs/src/ff.c **** 
4012:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
4013:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->cltbl) {	/* Fast seek */
4014:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
4015:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
4016:Middlewares/Third_Party/FatFs/src/ff.c **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
4017:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
4018:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
4019:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
4020:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get a fragment */
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 					tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
4022:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4023:Middlewares/Third_Party/FatFs/src/ff.c **** 						pcl = cl; ncl++;
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(&fp->obj, cl);
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
4028:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
4029:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
4030:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4031:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (cl < fs->n_fatent);	/* Repeat until end of chain */
4032:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4033:Middlewares/Third_Party/FatFs/src/ff.c **** 			*fp->cltbl = ulen;	/* Number of items used */
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen) {
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
4036:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
4038:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4039:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* Fast seek */
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs > fp->obj.objsize) ofs = fp->obj.objsize;	/* Clip offset at the file size */
4041:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
4043:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fs, FR_INT_ERR);
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
4047:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
4048:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4049:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4050:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
4053:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4054:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4055:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_read(fs->drv, fp->buf, dsc, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Load current sec
4056:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sect = dsc;
4058:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4059:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4060:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 98


4061:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
4062:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4063:Middlewares/Third_Party/FatFs/src/ff.c **** 
4064:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Normal Seek */
4065:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
4066:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4067:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type != FS_EXFAT && ofs >= 0x100000000) ofs = 0xFFFFFFFF;	/* Clip at 4GiB-1 if at FATx
4068:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs > fp->obj.objsize && (_FS_READONLY || !(fp->flag & FA_WRITE))) {	/* In read-only mode, cl
4070:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
4071:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4072:Middlewares/Third_Party/FatFs/src/ff.c **** 		ifptr = fp->fptr;
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
4074:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
4075:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
4077:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
4078:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
4079:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
4080:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
4081:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
4082:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;					/* start from the first cluster */
4083:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) {						/* If no cluster chain, create a new chain */
4085:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&fp->obj, 0);
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
4089:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4090:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
4092:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4093:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst != 0) {
4094:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
4095:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
4096:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
4098:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
4099:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->obj.objsize = fp->fptr;
4100:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->flag |= FA_MODIFIED;
4101:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4102:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, clst);	/* Follow chain with forceed stretch */
4103:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = 0; break;
4105:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4106:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4107:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4108:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4109:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(&fp->obj, clst);	/* Follow cluster chain if not in write mode */
4110:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
4114:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr += ofs;
4116:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fs)) {
4117:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 99


4118:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fs, FR_INT_ERR);
4119:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
4120:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4121:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4122:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_READONLY && fp->fptr > fp->obj.objsize) {		/* Set file change flag if the file size is e
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fp->fptr;
4125:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
4126:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4127:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) && nsect != fp->sect) {	/* Fill sector cache if needed */
4128:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4129:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4130:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {			/* Write-back dirty sector cache */
4131:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4132:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
4133:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4134:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4135:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fp->buf, nsect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Fill sector cach
4136:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4137:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = nsect;
4138:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4139:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4140:Middlewares/Third_Party/FatFs/src/ff.c **** 
4141:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4142:Middlewares/Third_Party/FatFs/src/ff.c **** }
4143:Middlewares/Third_Party/FatFs/src/ff.c **** 
4144:Middlewares/Third_Party/FatFs/src/ff.c **** 
4145:Middlewares/Third_Party/FatFs/src/ff.c **** 
4146:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1
4147:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4148:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory Object                                             */
4149:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4150:Middlewares/Third_Party/FatFs/src/ff.c **** 
4151:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_opendir (
4152:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to directory object to create */
4153:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
4154:Middlewares/Third_Party/FatFs/src/ff.c **** )
4155:Middlewares/Third_Party/FatFs/src/ff.c **** {
4156:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4157:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4158:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID *obj;
4159:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4160:Middlewares/Third_Party/FatFs/src/ff.c **** 
4161:Middlewares/Third_Party/FatFs/src/ff.c **** 
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp) return FR_INVALID_OBJECT;
4163:Middlewares/Third_Party/FatFs/src/ff.c **** 
4164:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4165:Middlewares/Third_Party/FatFs/src/ff.c **** 	obj = &dp->obj;
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4167:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4168:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->fs = fs;
4169:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
4172:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
4173:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
4174:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 100


4175:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
4176:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_scl = obj->sclust;							/* Get containing directory inforamation */
4177:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_size = ((DWORD)obj->objsize & 0xFFFFFF00) | obj->stat;
4178:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_ofs = dp->blk_ofs;
4179:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Get object allocation info */
4180:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
4181:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
4182:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4183:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4184:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4185:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->sclust = ld_clust(fs, dp->dir);	/* Get object allocation info */
4186:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4187:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* This object is a file */
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;
4189:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4190:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4191:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4192:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->id = fs->id;
4193:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
4194:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->sclust) {
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
4198:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = 0;	/* Root directory need not to be locked */
4201:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4202:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4203:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4204:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4205:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
4208:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) obj->fs = 0;		/* Invalidate the directory object if function faild */
4210:Middlewares/Third_Party/FatFs/src/ff.c **** 
4211:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4212:Middlewares/Third_Party/FatFs/src/ff.c **** }
4213:Middlewares/Third_Party/FatFs/src/ff.c **** 
4214:Middlewares/Third_Party/FatFs/src/ff.c **** 
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 
4216:Middlewares/Third_Party/FatFs/src/ff.c **** 
4217:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4218:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close Directory                                                       */
4219:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 
4221:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_closedir (
4222:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR *dp		/* Pointer to the directory object to be closed */
4223:Middlewares/Third_Party/FatFs/src/ff.c **** )
4224:Middlewares/Third_Party/FatFs/src/ff.c **** {
4225:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4227:Middlewares/Third_Party/FatFs/src/ff.c **** 
4228:Middlewares/Third_Party/FatFs/src/ff.c **** 
4229:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&dp->obj, &fs);			/* Check validity of the file object */
4230:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4231:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 101


4232:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->obj.lockid) {				/* Decrement sub-directory open counter */
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->obj.lockid);
4234:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4235:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK)
4236:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4237:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.fs = 0;			/* Invalidate directory object */
4239:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4240:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
4241:Middlewares/Third_Party/FatFs/src/ff.c **** 		unlock_fs(fs, FR_OK);		/* Unlock volume */
4242:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4243:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4244:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4245:Middlewares/Third_Party/FatFs/src/ff.c **** }
4246:Middlewares/Third_Party/FatFs/src/ff.c **** 
4247:Middlewares/Third_Party/FatFs/src/ff.c **** 
4248:Middlewares/Third_Party/FatFs/src/ff.c **** 
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 
4250:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4251:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read Directory Entries in Sequence                                    */
4252:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4253:Middlewares/Third_Party/FatFs/src/ff.c **** 
4254:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_readdir (
4255:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the open directory object */
4256:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4257:Middlewares/Third_Party/FatFs/src/ff.c **** )
4258:Middlewares/Third_Party/FatFs/src/ff.c **** {
4259:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4260:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4261:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4262:Middlewares/Third_Party/FatFs/src/ff.c **** 
4263:Middlewares/Third_Party/FatFs/src/ff.c **** 
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&dp->obj, &fs);	/* Check validity of the directory object */
4265:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
4268:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 			INIT_NAMBUF(fs);
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
4273:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
4276:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 			FREE_NAMBUF();
4278:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4279:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4280:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4281:Middlewares/Third_Party/FatFs/src/ff.c **** }
4282:Middlewares/Third_Party/FatFs/src/ff.c **** 
4283:Middlewares/Third_Party/FatFs/src/ff.c **** 
4284:Middlewares/Third_Party/FatFs/src/ff.c **** 
4285:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND
4286:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4287:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find Next File                                                        */
4288:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 102


4289:Middlewares/Third_Party/FatFs/src/ff.c **** 
4290:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findnext (
4291:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the open directory object */
4292:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	/* Pointer to the file information structure */
4293:Middlewares/Third_Party/FatFs/src/ff.c **** )
4294:Middlewares/Third_Party/FatFs/src/ff.c **** {
4295:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4296:Middlewares/Third_Party/FatFs/src/ff.c **** 
4297:Middlewares/Third_Party/FatFs/src/ff.c **** 
4298:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
4299:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_readdir(dp, fno);		/* Get a directory item */
4300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK || !fno || !fno->fname[0]) break;	/* Terminate if any error or end of directory 
4301:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->fname, 0, 0)) break;		/* Test for the file name */
4302:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0 && _USE_FIND == 2
4303:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->altname, 0, 0)) break;	/* Test for alternative name if exist *
4304:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4305:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4306:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4307:Middlewares/Third_Party/FatFs/src/ff.c **** }
4308:Middlewares/Third_Party/FatFs/src/ff.c **** 
4309:Middlewares/Third_Party/FatFs/src/ff.c **** 
4310:Middlewares/Third_Party/FatFs/src/ff.c **** 
4311:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4312:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find First File                                                       */
4313:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4314:Middlewares/Third_Party/FatFs/src/ff.c **** 
4315:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findfirst (
4316:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,				/* Pointer to the blank directory object */
4317:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno,			/* Pointer to the file information structure */
4318:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,		/* Pointer to the directory to open */
4319:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pattern	/* Pointer to the matching pattern */
4320:Middlewares/Third_Party/FatFs/src/ff.c **** )
4321:Middlewares/Third_Party/FatFs/src/ff.c **** {
4322:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4323:Middlewares/Third_Party/FatFs/src/ff.c **** 
4324:Middlewares/Third_Party/FatFs/src/ff.c **** 
4325:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->pat = pattern;		/* Save pointer to pattern string */
4326:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_opendir(dp, path);		/* Open the target directory */
4327:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_findnext(dp, fno);	/* Find the first item */
4329:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4330:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4331:Middlewares/Third_Party/FatFs/src/ff.c **** }
4332:Middlewares/Third_Party/FatFs/src/ff.c **** 
4333:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FIND */
4334:Middlewares/Third_Party/FatFs/src/ff.c **** 
4335:Middlewares/Third_Party/FatFs/src/ff.c **** 
4336:Middlewares/Third_Party/FatFs/src/ff.c **** 
4337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE == 0
4338:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4339:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get File Status                                                       */
4340:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4341:Middlewares/Third_Party/FatFs/src/ff.c **** 
4342:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_stat (
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
4344:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4345:Middlewares/Third_Party/FatFs/src/ff.c **** )
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 103


4346:Middlewares/Third_Party/FatFs/src/ff.c **** {
4347:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4348:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4349:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4350:Middlewares/Third_Party/FatFs/src/ff.c **** 
4351:Middlewares/Third_Party/FatFs/src/ff.c **** 
4352:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4353:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &dj.obj.fs, 0);
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4355:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
4356:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4357:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
4358:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
4359:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
4360:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {							/* Found an object */
4361:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fno) get_fileinfo(&dj, fno);
4362:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4363:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4365:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4366:Middlewares/Third_Party/FatFs/src/ff.c **** 
4367:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.obj.fs, res);
4368:Middlewares/Third_Party/FatFs/src/ff.c **** }
4369:Middlewares/Third_Party/FatFs/src/ff.c **** 
4370:Middlewares/Third_Party/FatFs/src/ff.c **** 
4371:Middlewares/Third_Party/FatFs/src/ff.c **** 
4372:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4373:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4374:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Number of Free Clusters                                           */
4375:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4376:Middlewares/Third_Party/FatFs/src/ff.c **** 
4377:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getfree (
4378:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
4379:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
4380:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fatfs		/* Pointer to return pointer to corresponding file system object */
4381:Middlewares/Third_Party/FatFs/src/ff.c **** )
4382:Middlewares/Third_Party/FatFs/src/ff.c **** {
4383:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4384:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4385:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nfree, clst, sect, stat;
4386:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
4387:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
4388:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID obj;
4389:Middlewares/Third_Party/FatFs/src/ff.c **** 
4390:Middlewares/Third_Party/FatFs/src/ff.c **** 
4391:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4392:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4393:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4394:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
4395:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
4396:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) {
4397:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clst;
4398:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4399:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get number of free clusters */
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 			nfree = 0;
4401:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
4402:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2; obj.fs = fs;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 104


4403:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 					stat = get_fat(&obj, clst);
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
4409:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4410:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4411:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* exFAT: Scan bitmap table */
4412:Middlewares/Third_Party/FatFs/src/ff.c **** 					BYTE bm;
4413:Middlewares/Third_Party/FatFs/src/ff.c **** 					UINT b;
4414:Middlewares/Third_Party/FatFs/src/ff.c **** 
4415:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fs->n_fatent - 2;
4416:Middlewares/Third_Party/FatFs/src/ff.c **** 					sect = fs->database;
4417:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0;
4418:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4419:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (i == 0 && (res = move_window(fs, sect++)) != FR_OK) break;
4420:Middlewares/Third_Party/FatFs/src/ff.c **** 						for (b = 8, bm = fs->win[i]; b && clst; b--, clst--) {
4421:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!(bm & 1)) nfree++;
4422:Middlewares/Third_Party/FatFs/src/ff.c **** 							bm >>= 1;
4423:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4424:Middlewares/Third_Party/FatFs/src/ff.c **** 						i = (i + 1) % SS(fs);
4425:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (clst);
4426:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4427:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4428:Middlewares/Third_Party/FatFs/src/ff.c **** 				{	/* FAT16/32: Sector alighed FAT entries */
4429:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fs->n_fatent; sect = fs->fatbase;
4430:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0; p = 0;
4431:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4432:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (i == 0) {
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, sect++);
4434:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
4435:Middlewares/Third_Party/FatFs/src/ff.c **** 							p = fs->win;
4436:Middlewares/Third_Party/FatFs/src/ff.c **** 							i = SS(fs);
4437:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4438:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (fs->fs_type == FS_FAT16) {
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (ld_word(p) == 0) nfree++;
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
4441:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 							if ((ld_dword(p) & 0x0FFFFFFF) == 0) nfree++;
4443:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
4444:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (--clst);
4446:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4447:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4448:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = nfree;			/* Return the free clusters */
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;		/* FSInfo is to be updated */
4451:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4452:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4453:Middlewares/Third_Party/FatFs/src/ff.c **** 
4454:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4455:Middlewares/Third_Party/FatFs/src/ff.c **** }
4456:Middlewares/Third_Party/FatFs/src/ff.c **** 
4457:Middlewares/Third_Party/FatFs/src/ff.c **** 
4458:Middlewares/Third_Party/FatFs/src/ff.c **** 
4459:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 105


4460:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4461:Middlewares/Third_Party/FatFs/src/ff.c **** /* Truncate File                                                         */
4462:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4463:Middlewares/Third_Party/FatFs/src/ff.c **** 
4464:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_truncate (
4465:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
4466:Middlewares/Third_Party/FatFs/src/ff.c **** )
4467:Middlewares/Third_Party/FatFs/src/ff.c **** {
4468:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4469:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4470:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl;
4471:Middlewares/Third_Party/FatFs/src/ff.c **** 
4472:Middlewares/Third_Party/FatFs/src/ff.c **** 
4473:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
4475:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
4476:Middlewares/Third_Party/FatFs/src/ff.c **** 
4477:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->fptr < fp->obj.objsize) {	/* Process when fptr is not on the eof */
4478:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
4479:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
4480:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = 0;
4481:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
4482:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl = get_fat(&fp->obj, fp->clust);
4483:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
4487:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
4488:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4489:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->obj.objsize = fp->fptr;	/* Set file size to current R/W point */
4491:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_MODIFIED;
4492:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (fp->flag & FA_DIRTY)) {
4494:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
4496:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4497:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
4498:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4500:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) ABORT(fs, res);
4502:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4503:Middlewares/Third_Party/FatFs/src/ff.c **** 
4504:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4505:Middlewares/Third_Party/FatFs/src/ff.c **** }
4506:Middlewares/Third_Party/FatFs/src/ff.c **** 
4507:Middlewares/Third_Party/FatFs/src/ff.c **** 
4508:Middlewares/Third_Party/FatFs/src/ff.c **** 
4509:Middlewares/Third_Party/FatFs/src/ff.c **** 
4510:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4511:Middlewares/Third_Party/FatFs/src/ff.c **** /* Delete a File/Directory                                               */
4512:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4513:Middlewares/Third_Party/FatFs/src/ff.c **** 
4514:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_unlink (
4515:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the file or directory path */
4516:Middlewares/Third_Party/FatFs/src/ff.c **** )
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 106


4517:Middlewares/Third_Party/FatFs/src/ff.c **** {
4518:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj, sdj;
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dclst = 0;
4521:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4522:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4523:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID obj;
4524:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4525:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4526:Middlewares/Third_Party/FatFs/src/ff.c **** 
4527:Middlewares/Third_Party/FatFs/src/ff.c **** 
4528:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4529:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
4530:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4531:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4532:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4533:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
4534:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
4535:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
4536:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4537:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4538:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Check if it is an open object */
4539:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4540:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* The object is accessible */
4541:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
4542:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
4543:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_RDO) {
4545:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
4546:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4547:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4548:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4549:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4550:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj.fs = fs;
4551:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4552:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.sclust = dclst = ld_dword(fs->dirbuf + XDIR_FstClus);
4553:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
4554:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
4555:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4556:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4557:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4558:Middlewares/Third_Party/FatFs/src/ff.c **** 					dclst = ld_clust(fs, dj.dir);
4559:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4560:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {			/* Is it a sub-directory? */
4561:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
4562:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (dclst == fs->cdir) {		 		/* Is it the current directory? */
4563:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
4564:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4565:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4566:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4567:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.fs = fs;						/* Open the sub-directory */
4568:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.sclust = dclst;
4569:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4570:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (fs->fs_type == FS_EXFAT) {
4571:Middlewares/Third_Party/FatFs/src/ff.c **** 							sdj.obj.objsize = obj.objsize;
4572:Middlewares/Third_Party/FatFs/src/ff.c **** 							sdj.obj.stat = obj.stat;
4573:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 107


4574:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4575:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = dir_sdi(&sdj, 0);
4576:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
4577:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item */
4578:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
4579:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
4580:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4581:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4582:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4583:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4584:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4585:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);			/* Remove the directory entry */
4586:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst) {	/* Remove the cluster chain if exist */
4587:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4588:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(&obj, dclst, 0);
4589:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4590:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(&dj.obj, dclst, 0);
4591:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4592:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = sync_fs(fs);
4594:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4595:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4596:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4597:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4598:Middlewares/Third_Party/FatFs/src/ff.c **** 
4599:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4600:Middlewares/Third_Party/FatFs/src/ff.c **** }
4601:Middlewares/Third_Party/FatFs/src/ff.c **** 
4602:Middlewares/Third_Party/FatFs/src/ff.c **** 
4603:Middlewares/Third_Party/FatFs/src/ff.c **** 
4604:Middlewares/Third_Party/FatFs/src/ff.c **** 
4605:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4606:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory                                                    */
4607:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4608:Middlewares/Third_Party/FatFs/src/ff.c **** 
4609:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkdir (
4610:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the directory path */
4611:Middlewares/Third_Party/FatFs/src/ff.c **** )
4612:Middlewares/Third_Party/FatFs/src/ff.c **** {
4613:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4614:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4615:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4616:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
4617:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
4618:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dsc, dcl, pcl, tm;
4619:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4620:Middlewares/Third_Party/FatFs/src/ff.c **** 
4621:Middlewares/Third_Party/FatFs/src/ff.c **** 
4622:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4623:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
4624:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4625:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4626:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4627:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
4628:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
4629:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
4630:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 108


4631:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4632:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {				/* Can create a new directory */
4633:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
4635:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
4640:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
4641:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
4642:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, dcl);
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fs->win;
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(fs));
4645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
4646:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir + DIR_Name, ' ', 11);	/* Create "." entry */
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Name] = '.';
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
4650:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);
4651:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
4652:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
4654:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
4655:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
4658:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
4659:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(fs);
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(fs));
4662:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4663:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4665:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_register(&dj);	/* Register the object to the directoy */
4666:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4667:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4668:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4669:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* Initialize directory entry block */
4670:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, tm);	/* Created time */
4671:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, dcl);	/* Table start cluster */
4672:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FileSize, (DWORD)dj.obj.objsize);	/* File size needs to be valid */
4673:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ValidFileSize, (DWORD)dj.obj.objsize);
4674:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 3;				/* Initialize the object flag (contiguous) */
4675:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_DIR;				/* Attribute */
4676:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = store_xdir(&dj);
4677:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4678:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4679:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = dj.dir;
4681:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
4682:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
4684:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
4685:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4686:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4687:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 109


4688:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4689:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4690:Middlewares/Third_Party/FatFs/src/ff.c **** 				remove_chain(&dj.obj, dcl, 0);		/* Could not register, remove cluster chain */
4691:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4692:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4693:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4694:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4695:Middlewares/Third_Party/FatFs/src/ff.c **** 
4696:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4697:Middlewares/Third_Party/FatFs/src/ff.c **** }
4698:Middlewares/Third_Party/FatFs/src/ff.c **** 
4699:Middlewares/Third_Party/FatFs/src/ff.c **** 
4700:Middlewares/Third_Party/FatFs/src/ff.c **** 
4701:Middlewares/Third_Party/FatFs/src/ff.c **** 
4702:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4703:Middlewares/Third_Party/FatFs/src/ff.c **** /* Rename a File/Directory                                               */
4704:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4705:Middlewares/Third_Party/FatFs/src/ff.c **** 
4706:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_rename (
4707:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_old,	/* Pointer to the object name to be renamed */
4708:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_new	/* Pointer to the new name */
4709:Middlewares/Third_Party/FatFs/src/ff.c **** )
4710:Middlewares/Third_Party/FatFs/src/ff.c **** {
4711:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4712:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR djo, djn;
4713:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4714:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[_FS_EXFAT ? SZDIRE * 2 : 24], *dir;
4715:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw;
4716:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4717:Middlewares/Third_Party/FatFs/src/ff.c **** 
4718:Middlewares/Third_Party/FatFs/src/ff.c **** 
4719:Middlewares/Third_Party/FatFs/src/ff.c **** 	get_ldnumber(&path_new);						/* Snip drive number of new name off */
4720:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
4721:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4722:Middlewares/Third_Party/FatFs/src/ff.c **** 		djo.obj.fs = fs;
4723:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4724:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
4726:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4727:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4728:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = chk_lock(&djo, 2);
4729:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4730:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4731:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Object to be renamed is found */
4732:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {	/* At exFAT */
4734:Middlewares/Third_Party/FatFs/src/ff.c **** 				BYTE nf, nn;
4735:Middlewares/Third_Party/FatFs/src/ff.c **** 				WORD nh;
4736:Middlewares/Third_Party/FatFs/src/ff.c **** 
4737:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, fs->dirbuf, SZDIRE * 2);	/* Save 85+C0 entry of old object */
4738:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof djo);
4739:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4740:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4741:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4742:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4743:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4744:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 110


4745:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4746:Middlewares/Third_Party/FatFs/src/ff.c **** 						nf = fs->dirbuf[XDIR_NumSec]; nn = fs->dirbuf[XDIR_NumName];
4747:Middlewares/Third_Party/FatFs/src/ff.c **** 						nh = ld_word(fs->dirbuf + XDIR_NameHash);
4748:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(fs->dirbuf, buf, SZDIRE * 2);
4749:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_NumSec] = nf; fs->dirbuf[XDIR_NumName] = nn;
4750:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_word(fs->dirbuf + XDIR_NameHash, nh);
4751:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
4752:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = store_xdir(&djn);
4753:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4754:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4755:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4756:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4757:Middlewares/Third_Party/FatFs/src/ff.c **** 			{	/* At FAT12/FAT16/FAT32 */
4758:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, djo.dir + DIR_Attr, 21);	/* Save information about the object except name */
4759:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
4760:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4761:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4763:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4764:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4765:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
4766:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4767:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
4768:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
4769:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
4770:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
4771:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
4772:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
4773:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
4774:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
4775:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
4776:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
4777:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = move_window(fs, dw);
4778:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
4780:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
4781:Middlewares/Third_Party/FatFs/src/ff.c **** 									fs->wflag = 1;
4782:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
4783:Middlewares/Third_Party/FatFs/src/ff.c **** 							}
4784:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4785:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4786:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4787:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4788:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4789:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&djo);		/* Remove old entry */
4790:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4791:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
4792:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4793:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4794:Middlewares/Third_Party/FatFs/src/ff.c **** /* End of the critical section */
4795:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4796:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4797:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4798:Middlewares/Third_Party/FatFs/src/ff.c **** 
4799:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4800:Middlewares/Third_Party/FatFs/src/ff.c **** }
4801:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 111


4802:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
4803:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE == 0 */
4804:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 */
4805:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 2 */
4806:Middlewares/Third_Party/FatFs/src/ff.c **** 
4807:Middlewares/Third_Party/FatFs/src/ff.c **** 
4808:Middlewares/Third_Party/FatFs/src/ff.c **** 
4809:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_CHMOD && !_FS_READONLY
4810:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4811:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Attribute                                                      */
4812:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4813:Middlewares/Third_Party/FatFs/src/ff.c **** 
4814:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chmod (
4815:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
4816:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE attr,			/* Attribute bits */
4817:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mask			/* Attribute mask to change */
4818:Middlewares/Third_Party/FatFs/src/ff.c **** )
4819:Middlewares/Third_Party/FatFs/src/ff.c **** {
4820:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4821:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4822:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4823:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4824:Middlewares/Third_Party/FatFs/src/ff.c **** 
4825:Middlewares/Third_Party/FatFs/src/ff.c **** 
4826:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
4827:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4828:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4829:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4830:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4831:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (dj.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check objec
4832:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4833:Middlewares/Third_Party/FatFs/src/ff.c **** 			mask &= AM_RDO|AM_HID|AM_SYS|AM_ARC;	/* Valid attribute mask */
4834:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4835:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
4836:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->dirbuf[XDIR_Attr] = (attr & mask) | (fs->dirbuf[XDIR_Attr] & (BYTE)~mask);	/* Apply attribu
4837:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = store_xdir(&dj);
4838:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4839:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4840:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
4841:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[DIR_Attr] = (attr & mask) | (dj.dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change 
4842:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
4843:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4844:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4845:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fs);
4846:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4847:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4848:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4849:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4850:Middlewares/Third_Party/FatFs/src/ff.c **** 
4851:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4852:Middlewares/Third_Party/FatFs/src/ff.c **** }
4853:Middlewares/Third_Party/FatFs/src/ff.c **** 
4854:Middlewares/Third_Party/FatFs/src/ff.c **** 
4855:Middlewares/Third_Party/FatFs/src/ff.c **** 
4856:Middlewares/Third_Party/FatFs/src/ff.c **** 
4857:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4858:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Timestamp                                                      */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 112


4859:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4860:Middlewares/Third_Party/FatFs/src/ff.c **** 
4861:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_utime (
4862:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file/directory name */
4863:Middlewares/Third_Party/FatFs/src/ff.c **** 	const FILINFO* fno	/* Pointer to the time stamp to be set */
4864:Middlewares/Third_Party/FatFs/src/ff.c **** )
4865:Middlewares/Third_Party/FatFs/src/ff.c **** {
4866:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4867:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4868:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4869:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4870:Middlewares/Third_Party/FatFs/src/ff.c **** 
4871:Middlewares/Third_Party/FatFs/src/ff.c **** 
4872:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
4873:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4874:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4875:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4876:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4877:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (dj.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check objec
4878:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4879:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4880:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
4881:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(fs->dirbuf + XDIR_ModTime, (DWORD)fno->fdate << 16 | fno->ftime);
4882:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = store_xdir(&dj);
4883:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4884:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4885:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
4886:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(dj.dir + DIR_ModTime, (DWORD)fno->fdate << 16 | fno->ftime);
4887:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
4888:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4889:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4890:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fs);
4891:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4892:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4893:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4894:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4895:Middlewares/Third_Party/FatFs/src/ff.c **** 
4896:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4897:Middlewares/Third_Party/FatFs/src/ff.c **** }
4898:Middlewares/Third_Party/FatFs/src/ff.c **** 
4899:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_CHMOD && !_FS_READONLY */
4900:Middlewares/Third_Party/FatFs/src/ff.c **** 
4901:Middlewares/Third_Party/FatFs/src/ff.c **** 
4902:Middlewares/Third_Party/FatFs/src/ff.c **** 
4903:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LABEL
4904:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4905:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Volume Label                                                      */
4906:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4907:Middlewares/Third_Party/FatFs/src/ff.c **** 
4908:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getlabel (
4909:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
4910:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* label,		/* Pointer to a buffer to return the volume label */
4911:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* vsn			/* Pointer to a variable to return the volume serial number */
4912:Middlewares/Third_Party/FatFs/src/ff.c **** )
4913:Middlewares/Third_Party/FatFs/src/ff.c **** {
4914:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4915:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 113


4916:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4917:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT si, di;
4918:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE || _FS_EXFAT
4919:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
4920:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4921:Middlewares/Third_Party/FatFs/src/ff.c **** 
4922:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4923:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4924:Middlewares/Third_Party/FatFs/src/ff.c **** 
4925:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume label */
4926:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && label) {
4927:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs; dj.obj.sclust = 0;	/* Open root directory */
4928:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(&dj, 0);
4929:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4930:Middlewares/Third_Party/FatFs/src/ff.c **** 		 	res = dir_read(&dj, 1);			/* Find a volume label entry */
4931:Middlewares/Third_Party/FatFs/src/ff.c **** 		 	if (res == FR_OK) {
4932:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4933:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4934:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (si = di = 0; si < dj.dir[XDIR_NumLabel]; si++) {	/* Extract volume label from 83 entry */
4935:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = ld_word(dj.dir + XDIR_Label + si * 2);
4936:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
4937:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = w;
4938:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4939:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = ff_convert(w, 0);	/* Unicode -> OEM */
4940:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (w == 0) w = '?';	/* Replace wrong character */
4941:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_DF1S && w >= 0x100) label[di++] = (char)(w >> 8);
4942:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = (char)w;
4943:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4944:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4945:Middlewares/Third_Party/FatFs/src/ff.c **** 					label[di] = 0;
4946:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4947:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4948:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4949:Middlewares/Third_Party/FatFs/src/ff.c **** 					si = di = 0;		/* Extract volume label from AM_VOL entry with code comversion */
4950:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4951:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
4952:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = (si < 11) ? dj.dir[si++] : ' ';
4953:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsDBCS1(w) && si < 11 && IsDBCS2(dj.dir[si])) {
4954:Middlewares/Third_Party/FatFs/src/ff.c **** 							w = w << 8 | dj.dir[si++];
4955:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4956:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = ff_convert(w, 1);	/* OEM -> Unicode */
4957:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4958:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = dj.dir[si++];
4959:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4960:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (di < 11);
4961:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {				/* Truncate trailing spaces */
4962:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di] = 0;
4963:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (di == 0) break;
4964:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (label[--di] == ' ');
4965:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4966:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4967:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4968:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {	/* No label entry and return nul string */
4969:Middlewares/Third_Party/FatFs/src/ff.c **** 			label[0] = 0;
4970:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4971:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4972:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 114


4973:Middlewares/Third_Party/FatFs/src/ff.c **** 
4974:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume serial number */
4975:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && vsn) {
4976:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, fs->volbase);
4977:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4978:Middlewares/Third_Party/FatFs/src/ff.c **** 			switch (fs->fs_type) {
4979:Middlewares/Third_Party/FatFs/src/ff.c **** 			case FS_EXFAT:
4980:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BPB_VolIDEx; break;
4981:Middlewares/Third_Party/FatFs/src/ff.c **** 
4982:Middlewares/Third_Party/FatFs/src/ff.c **** 			case FS_FAT32:
4983:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BS_VolID32; break;
4984:Middlewares/Third_Party/FatFs/src/ff.c **** 
4985:Middlewares/Third_Party/FatFs/src/ff.c **** 			default:
4986:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BS_VolID;
4987:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4988:Middlewares/Third_Party/FatFs/src/ff.c **** 			*vsn = ld_dword(fs->win + di);
4989:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4990:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4991:Middlewares/Third_Party/FatFs/src/ff.c **** 
4992:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4993:Middlewares/Third_Party/FatFs/src/ff.c **** }
4994:Middlewares/Third_Party/FatFs/src/ff.c **** 
4995:Middlewares/Third_Party/FatFs/src/ff.c **** 
4996:Middlewares/Third_Party/FatFs/src/ff.c **** 
4997:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4998:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4999:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set Volume Label                                                      */
5000:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5001:Middlewares/Third_Party/FatFs/src/ff.c **** 
5002:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_setlabel (
5003:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* label	/* Pointer to the volume label to set */
5004:Middlewares/Third_Party/FatFs/src/ff.c **** )
5005:Middlewares/Third_Party/FatFs/src/ff.c **** {
5006:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5007:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
5008:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5009:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE dirvn[22];
5010:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, slen;
5011:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
5012:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char badchr[] = "\"*+,.:;<=>\?[]|\x7F";
5013:Middlewares/Third_Party/FatFs/src/ff.c **** 
5014:Middlewares/Third_Party/FatFs/src/ff.c **** 
5015:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
5016:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&label, &fs, FA_WRITE);
5017:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
5018:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
5019:Middlewares/Third_Party/FatFs/src/ff.c **** 
5020:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get length of given volume label */
5021:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (slen = 0; (UINT)label[slen] >= ' '; slen++) ;	/* Get name length */
5022:Middlewares/Third_Party/FatFs/src/ff.c **** 
5023:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5024:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
5025:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = j = 0; i < slen; ) {	/* Create volume label in directory form */
5026:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = label[i++];
5027:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
5028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsDBCS1(w)) {
5029:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (i < slen && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 115


5030:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5031:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 1);
5032:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w == 0 || chk_chr(badchr, w) || j == 22) {	/* Check validity check validity of the volume la
5034:Middlewares/Third_Party/FatFs/src/ff.c **** 				LEAVE_FF(fs, FR_INVALID_NAME);
5035:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5036:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(dirvn + j, w); j += 2;
5037:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5038:Middlewares/Third_Party/FatFs/src/ff.c **** 		slen = j;
5039:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5040:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5041:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
5042:Middlewares/Third_Party/FatFs/src/ff.c **** 		for ( ; slen && label[slen - 1] == ' '; slen--) ;	/* Remove trailing spaces */
5043:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (slen) {		/* Is there a volume label to be set? */
5044:Middlewares/Third_Party/FatFs/src/ff.c **** 			dirvn[0] = 0; i = j = 0;	/* Create volume label in directory form */
5045:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
5046:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5047:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(ff_wtoupper(label[i++]), 0);
5048:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5049:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (BYTE)label[i++];
5050:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsDBCS1(w)) {
5051:Middlewares/Third_Party/FatFs/src/ff.c **** 					w = (j < 10 && i < slen && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
5052:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5053:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
5054:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(ff_wtoupper(ff_convert(w, 1)), 0);
5055:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5056:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsLower(w)) w -= 0x20;			/* To upper ASCII characters */
5057:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
5058:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w >= 0x80) w = ExCvt[w - 0x80];	/* To upper extended characters (SBCS cfg) */
5059:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5060:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_DF1S && w >= 0x80) w = 0;		/* Reject extended characters (ASCII cfg) */
5061:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5062:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5063:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5064:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w == 0 || chk_chr(badchr, w) || j >= (UINT)((w >= 0x100) ? 10 : 11)) {	/* Reject invalid ch
5065:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fs, FR_INVALID_NAME);
5066:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5067:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w >= 0x100) dirvn[j++] = (BYTE)(w >> 8);
5068:Middlewares/Third_Party/FatFs/src/ff.c **** 				dirvn[j++] = (BYTE)w;
5069:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (i < slen);
5070:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j < 11) dirvn[j++] = ' ';	/* Fill remaining name field */
5071:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dirvn[0] == DDEM) LEAVE_FF(fs, FR_INVALID_NAME);	/* Reject illegal name (heading DDEM) */
5072:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5073:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5074:Middlewares/Third_Party/FatFs/src/ff.c **** 
5075:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set volume label */
5076:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.sclust = 0;		/* Open root directory */
5077:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(&dj, 0);
5078:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
5079:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_read(&dj, 1);	/* Get volume label entry */
5080:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
5081:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
5082:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[XDIR_NumLabel] = (BYTE)(slen / 2);	/* Change the volume label */
5083:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(dj.dir + XDIR_Label, dirvn, slen);
5084:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5085:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (slen) {
5086:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dj.dir, dirvn, 11);	/* Change the volume label */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 116


5087:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
5088:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Name] = DDEM;	/* Remove the volume label */
5089:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5090:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5091:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
5092:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = sync_fs(fs);
5093:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* No volume label entry is found or error */
5094:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {
5095:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
5096:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (slen) {	/* Create a volume label entry */
5097:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_alloc(&dj, 1);	/* Allocate an entry */
5098:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
5099:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_set(dj.dir, 0, SZDIRE);	/* Clear the entry */
5100:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
5101:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[XDIR_Type] = 0x83;		/* Create 83 entry */
5102:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[XDIR_NumLabel] = (BYTE)(slen / 2);
5103:Middlewares/Third_Party/FatFs/src/ff.c **** 							mem_cpy(dj.dir + XDIR_Label, dirvn, slen);
5104:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
5105:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[DIR_Attr] = AM_VOL;		/* Create volume label entry */
5106:Middlewares/Third_Party/FatFs/src/ff.c **** 							mem_cpy(dj.dir, dirvn, 11);
5107:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
5108:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
5109:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = sync_fs(fs);
5110:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5111:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5112:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5113:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5114:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5115:Middlewares/Third_Party/FatFs/src/ff.c **** 
5116:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
5117:Middlewares/Third_Party/FatFs/src/ff.c **** }
5118:Middlewares/Third_Party/FatFs/src/ff.c **** 
5119:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
5120:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LABEL */
5121:Middlewares/Third_Party/FatFs/src/ff.c **** 
5122:Middlewares/Third_Party/FatFs/src/ff.c **** 
5123:Middlewares/Third_Party/FatFs/src/ff.c **** 
5124:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_EXPAND && !_FS_READONLY
5125:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5126:Middlewares/Third_Party/FatFs/src/ff.c **** /* Allocate a Contiguous Blocks to the File                              */
5127:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5128:Middlewares/Third_Party/FatFs/src/ff.c **** 
5129:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_expand (
5130:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
5131:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t fsz,	/* File size to be expanded to */
5132:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt		/* Operation mode 0:Find and prepare or 1:Find and allocate */
5133:Middlewares/Third_Party/FatFs/src/ff.c **** )
5134:Middlewares/Third_Party/FatFs/src/ff.c **** {
5135:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5137:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD n, clst, stcl, scl, ncl, tcl, lclst;
5138:Middlewares/Third_Party/FatFs/src/ff.c **** 
5139:Middlewares/Third_Party/FatFs/src/ff.c **** 
5140:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
5141:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
5142:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fsz == 0 || fp->obj.objsize != 0 || !(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);
5143:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 117


5144:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type != FS_EXFAT && fsz >= 0x100000000) LEAVE_FF(fs, FR_DENIED);	/* Check if in size li
5145:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5146:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (DWORD)fs->csize * SS(fs);	/* Cluster size */
5147:Middlewares/Third_Party/FatFs/src/ff.c **** 	tcl = (DWORD)(fsz / n) + ((fsz & (n - 1)) ? 1 : 0);	/* Number of clusters required */
5148:Middlewares/Third_Party/FatFs/src/ff.c **** 	stcl = fs->last_clst; lclst = 0;
5149:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stcl < 2 || stcl >= fs->n_fatent) stcl = 2;
5150:Middlewares/Third_Party/FatFs/src/ff.c **** 
5151:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5152:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
5153:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = find_bitmap(fs, stcl, tcl);			/* Find a contiguous cluster block */
5154:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0) res = FR_DENIED;				/* No contiguous cluster block was found */
5155:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0xFFFFFFFF) res = FR_DISK_ERR;
5156:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {	/* A contiguous free area is found */
5157:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (opt) {		/* Allocate it now */
5158:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = change_bitmap(fs, scl, tcl, 1);	/* Mark the cluster block 'in use' */
5159:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl + tcl - 1;
5160:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {		/* Set it as suggested point for next allocation */
5161:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl - 1;
5162:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5163:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5164:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5165:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5166:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
5167:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst = stcl; ncl = 0;
5168:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {	/* Find a contiguous cluster block */
5169:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = get_fat(&fp->obj, clst);
5170:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (++clst >= fs->n_fatent) clst = 2;
5171:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 1) { res = FR_INT_ERR; break; }
5172:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
5173:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 0) {	/* Is it a free cluster? */
5174:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++ncl == tcl) break;	/* Break if a contiguous cluster block is found */
5175:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5176:Middlewares/Third_Party/FatFs/src/ff.c **** 				scl = clst; ncl = 0;		/* Not a free cluster */
5177:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5178:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == stcl) { res = FR_DENIED; break; }	/* No contiguous cluster? */
5179:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5180:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {	/* A contiguous free area is found */
5181:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (opt) {		/* Allocate it now */
5182:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (clst = scl, n = tcl; n; clst++, n--) {	/* Create a cluster chain on the FAT */
5183:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = put_fat(fs, clst, (n == 1) ? 0xFFFFFFFF : clst + 1);
5184:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
5185:Middlewares/Third_Party/FatFs/src/ff.c **** 					lclst = clst;
5186:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5187:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {		/* Set it as suggested point for next allocation */
5188:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl - 1;
5189:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5190:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5191:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5192:Middlewares/Third_Party/FatFs/src/ff.c **** 
5193:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
5194:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = lclst;		/* Set suggested start cluster to start next */
5195:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt) {	/* Is it allocated now? */
5196:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = scl;		/* Update object allocation information */
5197:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fsz;
5198:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT) fp->obj.stat = 2;	/* Set status 'contiguous chain' */
5199:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
5200:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->free_clst <= fs->n_fatent - 2) {	/* Update FSINFO */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 118


5201:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clst -= tcl;
5202:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->fsi_flag |= 1;
5203:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5204:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5205:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5206:Middlewares/Third_Party/FatFs/src/ff.c **** 
5207:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
5208:Middlewares/Third_Party/FatFs/src/ff.c **** }
5209:Middlewares/Third_Party/FatFs/src/ff.c **** 
5210:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_EXPAND && !_FS_READONLY */
5211:Middlewares/Third_Party/FatFs/src/ff.c **** 
5212:Middlewares/Third_Party/FatFs/src/ff.c **** 
5213:Middlewares/Third_Party/FatFs/src/ff.c **** 
5214:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FORWARD
5215:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5216:Middlewares/Third_Party/FatFs/src/ff.c **** /* Forward data to the stream directly                                   */
5217:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5218:Middlewares/Third_Party/FatFs/src/ff.c **** 
5219:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_forward (
5220:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 						/* Pointer to the file object */
5221:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT (*func)(const BYTE*,UINT),	/* Pointer to the streaming function */
5222:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btf,						/* Number of bytes to forward */
5223:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bf						/* Pointer to number of bytes forwarded */
5224:Middlewares/Third_Party/FatFs/src/ff.c **** )
5225:Middlewares/Third_Party/FatFs/src/ff.c **** {
5226:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5227:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5228:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
5229:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t remain;
5230:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, csect;
5231:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dbuf;
5232:Middlewares/Third_Party/FatFs/src/ff.c **** 
5233:Middlewares/Third_Party/FatFs/src/ff.c **** 
5234:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bf = 0;	/* Clear transfer byte counter */
5235:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
5236:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
5237:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
5238:Middlewares/Third_Party/FatFs/src/ff.c **** 
5239:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
5240:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btf > remain) btf = (UINT)remain;			/* Truncate btf by remaining bytes */
5241:Middlewares/Third_Party/FatFs/src/ff.c **** 
5242:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btf && (*func)(0, 0);					/* Repeat until all data transferred or stream goes busy */
5243:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr += rcnt, *bf += rcnt, btf -= rcnt) {
5244:Middlewares/Third_Party/FatFs/src/ff.c **** 		csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
5245:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {				/* On the sector boundary? */
5246:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {						/* On the cluster boundary? */
5247:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = (fp->fptr == 0) ?			/* On the top of the file? */
5248:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust : get_fat(&fp->obj, fp->clust);
5249:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) ABORT(fs, FR_INT_ERR);
5250:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
5251:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;					/* Update current cluster */
5252:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5253:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5254:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = clust2sect(fs, fp->clust);			/* Get current data sector */
5255:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!sect) ABORT(fs, FR_INT_ERR);
5256:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect += csect;
5257:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 119


5258:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window to the file dat
5259:Middlewares/Third_Party/FatFs/src/ff.c **** 		dbuf = fs->win;
5260:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5261:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->sect != sect) {		/* Fill sector cache with file data */
5262:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
5263:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
5264:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
5265:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
5266:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5267:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5268:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
5269:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5270:Middlewares/Third_Party/FatFs/src/ff.c **** 		dbuf = fp->buf;
5271:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5272:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->sect = sect;
5273:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
5274:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btf) rcnt = btf;					/* Clip it by btr if needed */
5275:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = (*func)(dbuf + ((UINT)fp->fptr % SS(fs)), rcnt);	/* Forward the file data */
5276:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!rcnt) ABORT(fs, FR_INT_ERR);
5277:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5278:Middlewares/Third_Party/FatFs/src/ff.c **** 
5279:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
5280:Middlewares/Third_Party/FatFs/src/ff.c **** }
5281:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FORWARD */
5282:Middlewares/Third_Party/FatFs/src/ff.c **** 
5283:Middlewares/Third_Party/FatFs/src/ff.c **** 
5284:Middlewares/Third_Party/FatFs/src/ff.c **** 
5285:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_MKFS && !_FS_READONLY
5286:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5287:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create an FAT/exFAT volume                                            */
5288:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5289:Middlewares/Third_Party/FatFs/src/ff.c **** 
5290:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkfs (
5291:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number */
5292:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt,			/* Format option */
5293:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD au,			/* Size of allocation unit (cluster) [byte] */
5294:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work,			/* Pointer to working buffer */
5295:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len			/* Size of working buffer */
5296:Middlewares/Third_Party/FatFs/src/ff.c **** )
5297:Middlewares/Third_Party/FatFs/src/ff.c **** {
5298:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
5299:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_rootdir = 512;	/* Number of root directory entries for FAT12/16 volume */
5300:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst[] = {1, 4, 16, 64, 256, 512, 0};	/* Cluster size boundary for FAT12/16 volum
5301:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst32[] = {1, 2, 4, 8, 16, 32, 0};	/* Cluster size boundary for FAT32 volume (12
5302:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, sys, *buf, *pte, pdrv, part;
5303:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ss;
5304:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD szb_buf, sz_buf, sz_blk, n_clst, pau, sect, nsect, n;
5305:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD b_vol, b_fat, b_data;				/* Base LBA for volume, fat, data */
5306:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_vol, sz_rsv, sz_fat, sz_dir;	/* Size for volume, fat, dir, data */
5307:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
5308:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
5309:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
5310:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM || _FS_EXFAT
5311:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tbl[3];
5312:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5313:Middlewares/Third_Party/FatFs/src/ff.c **** 
5314:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 120


5315:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check mounted drive and clear work area */
5316:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);					/* Get target logical drive */
5317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
5318:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
5319:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
5320:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:create as new, 1-4:get from partition table) */
5321:Middlewares/Third_Party/FatFs/src/ff.c **** 
5322:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check physical drive status */
5323:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
5324:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
5325:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
5326:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
5327:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
5328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_SIZE, &ss) != RES_OK) return FR_DISK_ERR;
5329:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ss > _MAX_SS || ss < _MIN_SS || (ss & (ss - 1))) return FR_DISK_ERR;
5330:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5331:Middlewares/Third_Party/FatFs/src/ff.c **** 	ss = _MAX_SS;
5332:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((au != 0 && au < ss) || au > 0x1000000 || (au & (au - 1))) return FR_INVALID_PARAMETER;	/* Che
5334:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
5335:Middlewares/Third_Party/FatFs/src/ff.c **** 
5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get working buffer */
5337:Middlewares/Third_Party/FatFs/src/ff.c **** 	buf = (BYTE*)work;		/* Working buffer */
5338:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_buf = len / ss;		/* Size of working buffer (sector) */
5339:Middlewares/Third_Party/FatFs/src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
5340:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!szb_buf) return FR_MKFS_ABORTED;
5341:Middlewares/Third_Party/FatFs/src/ff.c **** 
5342:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine where the volume to be located (b_vol, sz_vol) */
5343:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part != 0) {
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get partition information from partition table in the MBR */
5345:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Load MBR */
5346:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(buf + BS_55AA) != 0xAA55) return FR_MKFS_ABORTED;	/* Check if MBR is valid */
5347:Middlewares/Third_Party/FatFs/src/ff.c **** 		pte = buf + (MBR_Table + (part - 1) * SZ_PTE);
5348:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!pte[PTE_System]) return FR_MKFS_ABORTED;	/* No partition? */
5349:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = ld_dword(pte + PTE_StLba);		/* Get volume start sector */
5350:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol = ld_dword(pte + PTE_SizLba);	/* Get volume size */
5351:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5352:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a single-partition in this function */
5353:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_vol) != RES_OK) return FR_DISK_ERR;
5354:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
5355:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
5356:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
5357:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5358:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sz_vol < 128) return FR_MKFS_ABORTED;	/* Check if volume size is >=128s */
5359:Middlewares/Third_Party/FatFs/src/ff.c **** 
5360:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Pre-determine the FAT type */
5361:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
5362:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT && (opt & FM_EXFAT)) {	/* exFAT possible? */
5363:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_EXFAT || sz_vol >= 0x4000000 || au > 128) {	/* exFAT only, vol >= 64Ms 
5364:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_EXFAT; break;
5365:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5366:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (au > 128) return FR_INVALID_PARAMETER;	/* Too large au for FAT/FAT32 */
5368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
5370:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
5371:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 121


5372:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5373:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(opt & FM_FAT)) return FR_INVALID_PARAMETER;	/* no-FAT? */
5374:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
5375:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (0);
5376:Middlewares/Third_Party/FatFs/src/ff.c **** 
5377:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5378:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_EXFAT) {	/* Create an exFAT volume */
5379:Middlewares/Third_Party/FatFs/src/ff.c **** 		DWORD szb_bit, szb_case, sum, nb, cl;
5380:Middlewares/Third_Party/FatFs/src/ff.c **** 		WCHAR ch, si;
5381:Middlewares/Third_Party/FatFs/src/ff.c **** 		UINT j, st;
5382:Middlewares/Third_Party/FatFs/src/ff.c **** 		BYTE b;
5383:Middlewares/Third_Party/FatFs/src/ff.c **** 
5384:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x1000) return FR_MKFS_ABORTED;	/* Too small volume? */
5385:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
5386:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = b_vol; tbl[1] = b_vol + sz_vol - 1;	/* Inform the device the volume area may be erased *
5387:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, tbl);
5388:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5389:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Determine FAT location, data location and number of clusters */
5390:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!au) {	/* au auto-selection */
5391:Middlewares/Third_Party/FatFs/src/ff.c **** 			au = 8;
5392:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x80000) au = 64;		/* >= 512Ks */
5393:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x4000000) au = 256;	/* >= 64Ms */
5394:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5395:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_fat = b_vol + 32;										/* FAT start at offset 32 */
5396:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_fat = ((sz_vol / au + 2) * 4 + ss - 1) / ss;			/* Number of FAT sectors */
5397:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_data = (b_fat + sz_fat + sz_blk - 1) & ~(sz_blk - 1);	/* Align data area to the erase block bou
5398:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (b_data >= sz_vol / 2) return FR_MKFS_ABORTED;		/* Too small volume? */
5399:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_clst = (sz_vol - (b_data - b_vol)) / au;				/* Number of clusters */
5400:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n_clst <16) return FR_MKFS_ABORTED;					/* Too few clusters? */
5401:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n_clst > MAX_EXFAT) return FR_MKFS_ABORTED;			/* Too many clusters? */
5402:Middlewares/Third_Party/FatFs/src/ff.c **** 
5403:Middlewares/Third_Party/FatFs/src/ff.c **** 		szb_bit = (n_clst + 7) / 8;						/* Size of allocation bitmap */
5404:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = (szb_bit + au * ss - 1) / (au * ss);	/* Number of allocation bitmap clusters */
5405:Middlewares/Third_Party/FatFs/src/ff.c **** 
5406:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a compressed up-case table */
5407:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data + au * tbl[0];	/* Table start sector */
5408:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = 0;						/* Table checksum to be stored in the 82 entry */
5409:Middlewares/Third_Party/FatFs/src/ff.c **** 		st = si = i = j = szb_case = 0;
5410:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5411:Middlewares/Third_Party/FatFs/src/ff.c **** 			switch (st) {
5412:Middlewares/Third_Party/FatFs/src/ff.c **** 			case 0:
5413:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = ff_wtoupper(si);	/* Get an up-case char */
5414:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ch != si) {
5415:Middlewares/Third_Party/FatFs/src/ff.c **** 					si++; break;		/* Store the up-case char if exist */
5416:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5417:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (j = 1; (WCHAR)(si + j) && (WCHAR)(si + j) == ff_wtoupper((WCHAR)(si + j)); j++) ;	/* Get r
5418:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (j >= 128) {
5419:Middlewares/Third_Party/FatFs/src/ff.c **** 					ch = 0xFFFF; st = 2; break;	/* Compress the no-case block if run is >= 128 */
5420:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5421:Middlewares/Third_Party/FatFs/src/ff.c **** 				st = 1;			/* Do not compress short run */
5422:Middlewares/Third_Party/FatFs/src/ff.c **** 				/* go to next case */
5423:Middlewares/Third_Party/FatFs/src/ff.c **** 			case 1:
5424:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = si++;		/* Fill the short run */
5425:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (--j == 0) st = 0;
5426:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
5427:Middlewares/Third_Party/FatFs/src/ff.c **** 
5428:Middlewares/Third_Party/FatFs/src/ff.c **** 			default:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 122


5429:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = (WCHAR)j; si += j;	/* Number of chars to skip */
5430:Middlewares/Third_Party/FatFs/src/ff.c **** 				st = 0;
5431:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5432:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = xsum32(buf[i + 0] = (BYTE)ch, sum);		/* Put it into the write buffer */
5433:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = xsum32(buf[i + 1] = (BYTE)(ch >> 8), sum);
5434:Middlewares/Third_Party/FatFs/src/ff.c **** 			i += 2; szb_case += 2;
5435:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!si || i == szb_buf) {		/* Write buffered data when buffer full or end of process */
5436:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = (i + ss - 1) / ss;
5437:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5438:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; i = 0;
5439:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5440:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (si);
5441:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[1] = (szb_case + au * ss - 1) / (au * ss);	/* Number of up-case table clusters */
5442:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[2] = 1;										/* Number of root dir clusters */
5443:Middlewares/Third_Party/FatFs/src/ff.c **** 
5444:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the allocation bitmap */
5445:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data; nsect = (szb_bit + ss - 1) / ss;	/* Start of bitmap and number of sectors */
5446:Middlewares/Third_Party/FatFs/src/ff.c **** 		nb = tbl[0] + tbl[1] + tbl[2];					/* Number of clusters in-use by system */
5447:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5448:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, szb_buf);
5449:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; nb >= 8 && i < szb_buf; buf[i++] = 0xFF, nb -= 8) ;
5450:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (b = 1; nb && i < szb_buf; buf[i] |= b, b <<= 1, nb--) ;
5451:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;		/* Write the buffered data */
5452:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5453:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5454:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5455:Middlewares/Third_Party/FatFs/src/ff.c **** 
5456:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the FAT */
5457:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat; nsect = sz_fat;	/* Start of FAT and number of FAT sectors */
5458:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = nb = cl = 0;
5459:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5460:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, szb_buf); i = 0;	/* Clear work area and reset write index */
5461:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl == 0) {	/* Set entry 0 and 1 */
5462:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + i, 0xFFFFFFF8); i += 4; cl++;
5463:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + i, 0xFFFFFFFF); i += 4; cl++;
5464:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5465:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {			/* Create chains of bitmap, up-case and root dir */
5466:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (nb && i < szb_buf) {			/* Create a chain */
5467:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(buf + i, (nb > 1) ? cl + 1 : 0xFFFFFFFF);
5468:Middlewares/Third_Party/FatFs/src/ff.c **** 					i += 4; cl++; nb--;
5469:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5470:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!nb && j < 3) nb = tbl[j++];	/* Next chain */
5471:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nb && i < szb_buf);
5472:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;	/* Write the buffered data */
5473:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5474:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5475:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5476:Middlewares/Third_Party/FatFs/src/ff.c **** 
5477:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the root directory */
5478:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, szb_buf);
5479:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 0 + 0] = 0x83;		/* 83 entry (volume label) */
5480:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 1 + 0] = 0x81;		/* 81 entry (allocation bitmap) */
5481:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 1 + 20, 2);
5482:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 1 + 24, szb_bit);
5483:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 2 + 0] = 0x82;		/* 82 entry (up-case table) */
5484:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 4, sum);
5485:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 20, 2 + tbl[0]);
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 123


5486:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 24, szb_case);
5487:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data + au * (tbl[0] + tbl[1]);	nsect = au;	/* Start of the root directory and number of 
5488:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {	/* Fill root directory sectors */
5489:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;
5490:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5491:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5492:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5493:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5494:Middlewares/Third_Party/FatFs/src/ff.c **** 
5495:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create two set of the exFAT VBR blocks */
5496:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_vol;
5497:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 0; n < 2; n++) {
5498:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Main record (+0) */
5499:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5500:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11);	/* Boot jump code (x86), OEM name */
5501:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_VolOfsEx, b_vol);					/* Volume offset in the physical drive [sector] */
5502:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_TotSecEx, sz_vol);					/* Volume size [sector] */
5503:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FatOfsEx, b_fat - b_vol);			/* FAT offset [sector] */
5504:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FatSzEx, sz_fat);					/* FAT size [sector] */
5505:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_DataOfsEx, b_data - b_vol);			/* Data offset [sector] */
5506:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_NumClusEx, n_clst);					/* Number of clusters */
5507:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClusEx, 2 + tbl[0] + tbl[1]);	/* Root dir cluster # */
5508:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_VolIDEx, GET_FATTIME());				/* VSN */
5509:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSVerEx, 0x100);						/* File system version (1.00) */
5510:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (buf[BPB_BytsPerSecEx] = 0, i = ss; i >>= 1; buf[BPB_BytsPerSecEx]++) ;	/* Log2 of sector si
5511:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (buf[BPB_SecPerClusEx] = 0, i = au; i >>= 1; buf[BPB_SecPerClusEx]++) ;	/* Log2 of cluster s
5512:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BPB_NumFATsEx] = 1;					/* Number of FATs */
5513:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BPB_DrvNumEx] = 0x80;				/* Drive number (for int13) */
5514:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_BootCodeEx, 0xFEEB);	/* Boot code (x86) */
5515:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);			/* Signature (placed here regardless of sector size) */
5516:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = sum = 0; i < ss; i++) {		/* VBR checksum */
5517:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i != BPB_VolFlagEx && i != BPB_VolFlagEx + 1 && i != BPB_PercInUseEx) sum = xsum32(buf[i], 
5518:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5519:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5520:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Extended bootstrap record (+1..+8) */
5521:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5522:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + ss - 2, 0xAA55);	/* Signature (placed at end of sector) */
5523:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 1; j < 9; j++) {
5524:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (i = 0; i < ss; sum = xsum32(buf[i++], sum)) ;	/* VBR checksum */
5525:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5526:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5527:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* OEM/Reserved record (+9..+10) */
5528:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5529:Middlewares/Third_Party/FatFs/src/ff.c **** 			for ( ; j < 11; j++) {
5530:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (i = 0; i < ss; sum = xsum32(buf[i++], sum)) ;	/* VBR checksum */
5531:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5532:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5533:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Sum record (+11) */
5534:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < ss; i += 4) st_dword(buf + i, sum);		/* Fill with checksum value */
5535:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5536:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5537:Middlewares/Third_Party/FatFs/src/ff.c **** 
5538:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5539:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
5540:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* Create an FAT12/16/32 volume */
5541:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5542:Middlewares/Third_Party/FatFs/src/ff.c **** 			pau = au;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 124


5543:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Pre-determine number of clusters and FAT sub-type */
5544:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {	/* FAT32 volume */
5545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
5546:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
5548:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5549:Middlewares/Third_Party/FatFs/src/ff.c **** 				n_clst = sz_vol / pau;	/* Number of clusters */
5550:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
5551:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
5552:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = 0;		/* No static directory */
5553:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
5554:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
5555:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
5556:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5559:Middlewares/Third_Party/FatFs/src/ff.c **** 				n_clst = sz_vol / pau;
5560:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT12) {
5561:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
5562:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
5563:Middlewares/Third_Party/FatFs/src/ff.c **** 					fmt = FS_FAT12;
5564:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
5565:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5566:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n + ss - 1) / ss;		/* FAT size [sector] */
5567:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 1;						/* Number of reserved sectors */
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = (DWORD)n_rootdir * SZDIRE / ss;	/* Rootdir size [sector] */
5569:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5570:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_fat = b_vol + sz_rsv;						/* FAT base */
5571:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
5572:Middlewares/Third_Party/FatFs/src/ff.c **** 
5573:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Align data base to erase block boundary (for flash memory media) */
5574:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = ((b_data + sz_blk - 1) & ~(sz_blk - 1)) - b_data;	/* Next nearest erase block from current d
5575:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
5576:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv += n; b_fat += n;
5577:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
5578:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat += n / n_fats;
5579:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5580:Middlewares/Third_Party/FatFs/src/ff.c **** 
5581:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Determine number of clusters and final check of validity of the FAT sub-type */
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol < b_data + pau * 16 - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
5583:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
5584:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
5585:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5588:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5589:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5590:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT16) {
5591:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
5592:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (pau * 2) <= 64) {
5593:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
5594:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5595:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((opt & FM_FAT32)) {
5596:Middlewares/Third_Party/FatFs/src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
5597:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
5599:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 125


5600:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5601:Middlewares/Third_Party/FatFs/src/ff.c **** 				if  (n_clst <= MAX_FAT12) {	/* Too few clusters for FAT16 */
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5604:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5605:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT12 && n_clst > MAX_FAT12) return FR_MKFS_ABORTED;	/* Too many clusters for FAT1
5607:Middlewares/Third_Party/FatFs/src/ff.c **** 
5608:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Ok, it is the valid cluster configuration */
5609:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
5610:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (1);
5611:Middlewares/Third_Party/FatFs/src/ff.c **** 
5612:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
5613:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = b_vol; tbl[1] = b_vol + sz_vol - 1;	/* Inform the device the volume area can be erased *
5614:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, tbl);
5615:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5616:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create FAT VBR */
5617:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, ss);
5618:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(buf + BS_JmpBoot, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code (x86), OEM name */
5619:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_BytsPerSec, ss);				/* Sector size [byte] */
5620:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_SecPerClus] = (BYTE)pau;				/* Cluster size [sector] */
5621:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RsvdSecCnt, (WORD)sz_rsv);	/* Size of reserved area */
5622:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
5623:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
5624:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
5625:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
5626:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5627:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_TotSec32, sz_vol);		/* Volume size in 32-bit LBA */
5628:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5629:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_Media] = 0xF8;							/* Media descriptor byte */
5630:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
5631:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_NumHeads, 255);				/* Number of heads (for int13) */
5632:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + BPB_HiddSec, b_vol);				/* Volume offset in the physical drive [sector] */
5633:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
5635:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FATSz32, sz_fat);		/* FAT size [sector] */
5636:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClus32, 2);			/* Root directory cluster # (2) */
5637:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSInfo32, 1);				/* Offset of FSINFO sector (VBR + 1) */
5638:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_BkBootSec32, 6);			/* Offset of backup VBR (VBR + 6) */
5639:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
5640:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
5641:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
5642:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5643:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID, GET_FATTIME());	/* VSN */
5644:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FATSz16, (WORD)sz_fat);	/* FAT size [sector] */
5645:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
5646:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
5647:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
5648:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5649:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BS_55AA, 0xAA55);					/* Signature (offset is fixed here regardless of sector size)
5650:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector 
5651:Middlewares/Third_Party/FatFs/src/ff.c **** 
5652:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create FSINFO record if needed */
5653:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5654:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
5655:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5656:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_LeadSig, 0x41615252);
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 126


5657:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_StrucSig, 0x61417272);
5658:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
5659:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
5660:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);
5661:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
5662:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
5663:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5664:Middlewares/Third_Party/FatFs/src/ff.c **** 
5665:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize FAT area */
5666:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, (UINT)szb_buf);
5667:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat;		/* FAT start sector */
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < n_fats; i++) {			/* Initialize FATs each */
5669:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
5670:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, 0xFFFFFFF8);	/* Entry 0 */
5671:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 4, 0xFFFFFFFF);	/* Entry 1 */
5672:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 8, 0x0FFFFFFF);	/* Entry 2 (root directory) */
5673:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, (fmt == FS_FAT12) ? 0xFFFFF8 : 0xFFFFFFF8);	/* Entry 0 and 1 */
5675:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5676:Middlewares/Third_Party/FatFs/src/ff.c **** 			nsect = sz_fat;		/* Number of FAT sectors */
5677:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {	/* Fill FAT sectors */
5678:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = (nsect > sz_buf) ? sz_buf : nsect;
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
5680:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
5681:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; nsect -= n;
5682:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nsect);
5683:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5684:Middlewares/Third_Party/FatFs/src/ff.c **** 
5685:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize root directory (fill with zero) */
5686:Middlewares/Third_Party/FatFs/src/ff.c **** 		nsect = (fmt == FS_FAT32) ? pau : sz_dir;	/* Number of root directory sectors */
5687:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5688:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
5690:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5691:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5692:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5693:Middlewares/Third_Party/FatFs/src/ff.c **** 
5694:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine system ID in the partition table */
5695:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_FS_EXFAT && fmt == FS_EXFAT) {
5696:Middlewares/Third_Party/FatFs/src/ff.c **** 		sys = 0x07;			/* HPFS/NTFS/exFAT */
5697:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5698:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5699:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x0C;		/* FAT32X */
5700:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5701:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x10000) {
5702:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = 0x06;	/* FAT12/16 (>=64KS) */
5703:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5704:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = (fmt == FS_FAT16) ? 0x04 : 0x01;	/* FAT16 (<64KS) : FAT12 (<64KS) */
5705:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5706:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5707:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5708:Middlewares/Third_Party/FatFs/src/ff.c **** 
5709:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Update partition information */
5710:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part != 0) {	/* Created in the existing partition */
5711:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update system ID in the partition table */
5712:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Read the MBR */
5713:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[MBR_Table + (part - 1) * SZ_PTE + PTE_System] = sys;		/* Set system ID */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 127


5714:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it back to the MBR */
5715:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Created as a new single partition */
5716:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(opt & FM_SFD)) {	/* Create partition table if in FDISK format */
5717:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5718:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);		/* MBR signature */
5719:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte = buf + MBR_Table;				/* Create partition table for single partition in the drive */
5720:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_Boot] = 0;					/* Boot indicator */
5721:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StHead] = 1;				/* Start head */
5722:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
5723:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StCyl] = 0;					/* Start cylinder */
5724:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_System] = sys;				/* System type */
5725:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
5726:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
5727:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
5728:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
5729:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_StLba, b_vol);	/* Start offset in LBA */
5730:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_SizLba, sz_vol);	/* Size in sectors */
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the MBR */
5732:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5733:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5734:Middlewares/Third_Party/FatFs/src/ff.c **** 
5735:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) return FR_DISK_ERR;
5736:Middlewares/Third_Party/FatFs/src/ff.c **** 
5737:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
5738:Middlewares/Third_Party/FatFs/src/ff.c **** }
5739:Middlewares/Third_Party/FatFs/src/ff.c **** 
5740:Middlewares/Third_Party/FatFs/src/ff.c **** 
5741:Middlewares/Third_Party/FatFs/src/ff.c **** 
5742:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
5743:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5744:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create partition table on the physical drive                          */
5745:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5746:Middlewares/Third_Party/FatFs/src/ff.c **** 
5747:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_fdisk (
5748:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE pdrv,			/* Physical drive number */
5749:Middlewares/Third_Party/FatFs/src/ff.c **** 	const DWORD* szt,	/* Pointer to the size table for each partitions */
5750:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work			/* Pointer to the working buffer */
5751:Middlewares/Third_Party/FatFs/src/ff.c **** )
5752:Middlewares/Third_Party/FatFs/src/ff.c **** {
5753:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n, sz_cyl, tot_cyl, b_cyl, e_cyl, p_cyl;
5754:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s_hd, e_hd, *p, *buf = (BYTE*)work;
5755:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
5756:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_disk, sz_part, s_part;
5757:Middlewares/Third_Party/FatFs/src/ff.c **** 
5758:Middlewares/Third_Party/FatFs/src/ff.c **** 
5759:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
5760:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
5761:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
5762:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_disk)) return FR_DISK_ERR;
5763:Middlewares/Third_Party/FatFs/src/ff.c **** 
5764:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine the CHS without any consideration of the drive geometry */
5765:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (n = 16; n < 256 && sz_disk / n / 63 > 1024; n *= 2) ;
5766:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n == 256) n--;
5767:Middlewares/Third_Party/FatFs/src/ff.c **** 	e_hd = n - 1;
5768:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_cyl = 63 * n;
5769:Middlewares/Third_Party/FatFs/src/ff.c **** 	tot_cyl = sz_disk / sz_cyl;
5770:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 128


5771:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create partition table */
5772:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(buf, 0, _MAX_SS);
5773:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = buf + MBR_Table; b_cyl = 0;
5774:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < 4; i++, p += SZ_PTE) {
5775:Middlewares/Third_Party/FatFs/src/ff.c **** 		p_cyl = (szt[i] <= 100U) ? (DWORD)tot_cyl * szt[i] / 100 : szt[i] / sz_cyl;	/* Number of cylinder
5776:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!p_cyl) continue;
5777:Middlewares/Third_Party/FatFs/src/ff.c **** 		s_part = (DWORD)sz_cyl * b_cyl;
5778:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_part = (DWORD)sz_cyl * p_cyl;
5779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 0) {	/* Exclude first track of cylinder 0 */
5780:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 1;
5781:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_part += 63; sz_part -= 63;
5782:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5783:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 0;
5784:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5785:Middlewares/Third_Party/FatFs/src/ff.c **** 		e_cyl = b_cyl + p_cyl - 1;	/* End cylinder */
5786:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (e_cyl >= tot_cyl) return FR_INVALID_PARAMETER;
5787:Middlewares/Third_Party/FatFs/src/ff.c **** 
5788:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Set partition table */
5789:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[1] = s_hd;						/* Start head */
5790:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[2] = (BYTE)((b_cyl >> 2) + 1);	/* Start sector */
5791:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[3] = (BYTE)b_cyl;					/* Start cylinder */
5792:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[4] = 0x07;						/* System type (temporary setting) */
5793:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[5] = e_hd;						/* End head */
5794:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[6] = (BYTE)((e_cyl >> 2) + 63);	/* End sector */
5795:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[7] = (BYTE)e_cyl;					/* End cylinder */
5796:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(p + 8, s_part);			/* Start sector in LBA */
5797:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(p + 12, sz_part);			/* Number of sectors */
5798:Middlewares/Third_Party/FatFs/src/ff.c **** 
5799:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Next partition */
5800:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_cyl += p_cyl;
5801:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5802:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(p, 0xAA55);
5803:Middlewares/Third_Party/FatFs/src/ff.c **** 
5804:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Write it to the MBR */
5805:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (disk_write(pdrv, buf, 0, 1) != RES_OK || disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) ? FR_DI
5806:Middlewares/Third_Party/FatFs/src/ff.c **** }
5807:Middlewares/Third_Party/FatFs/src/ff.c **** 
5808:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _MULTI_PARTITION */
5809:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_MKFS && !_FS_READONLY */
5810:Middlewares/Third_Party/FatFs/src/ff.c **** 
5811:Middlewares/Third_Party/FatFs/src/ff.c **** 
5812:Middlewares/Third_Party/FatFs/src/ff.c **** 
5813:Middlewares/Third_Party/FatFs/src/ff.c **** 
5814:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_STRFUNC
5815:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5816:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get a string from the file                                            */
5817:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5818:Middlewares/Third_Party/FatFs/src/ff.c **** 
5819:Middlewares/Third_Party/FatFs/src/ff.c **** TCHAR* f_gets (
5820:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the string buffer to read */
5821:Middlewares/Third_Party/FatFs/src/ff.c **** 	int len,		/* Size of string buffer (characters) */
5822:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp			/* Pointer to the file object */
5823:Middlewares/Third_Party/FatFs/src/ff.c **** )
5824:Middlewares/Third_Party/FatFs/src/ff.c **** {
5825:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
5826:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
5827:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 129


5828:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rc;
5829:Middlewares/Third_Party/FatFs/src/ff.c **** 
5830:Middlewares/Third_Party/FatFs/src/ff.c **** 
5831:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (n < len - 1) {	/* Read characters until buffer gets filled */
5832:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5833:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3		/* Read a character in UTF-8 */
5834:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5835:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5836:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5837:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {
5838:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xC0) continue;	/* Skip stray trailer */
5839:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xE0) {			/* Two-byte sequence (0x80-0x7FF) */
5840:Middlewares/Third_Party/FatFs/src/ff.c **** 				f_read(fp, s, 1, &rc);
5841:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (rc != 1) break;
5842:Middlewares/Third_Party/FatFs/src/ff.c **** 				c = (c & 0x1F) << 6 | (s[0] & 0x3F);
5843:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0x80) c = '?';	/* Reject invalid code range */
5844:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5845:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0xF0) {		/* Three-byte sequence (0x800-0xFFFF) */
5846:Middlewares/Third_Party/FatFs/src/ff.c **** 					f_read(fp, s, 2, &rc);
5847:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (rc != 2) break;
5848:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = c << 12 | (s[0] & 0x3F) << 6 | (s[1] & 0x3F);
5849:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c < 0x800) c = '?';	/* Reject invalid code range */
5850:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {			/* Reject four-byte sequence */
5851:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = '?';
5852:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5853:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5854:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5855:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2		/* Read a character in UTF-16BE */
5856:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
5857:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
5858:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[1] + (s[0] << 8);
5859:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1		/* Read a character in UTF-16LE */
5860:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
5861:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
5862:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0] + (s[1] << 8);
5863:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character in ANSI/OEM */
5864:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5865:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5866:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5867:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {
5868:Middlewares/Third_Party/FatFs/src/ff.c **** 			f_read(fp, s, 1, &rc);
5869:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (rc != 1) break;
5870:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (c << 8) + s[0];
5871:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5872:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
5873:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
5874:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5875:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character without conversion */
5876:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5877:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5878:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5879:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5880:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_USE_STRFUNC == 2 && c == '\r') continue;	/* Strip '\r' */
5881:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
5882:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
5883:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
5884:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 130


5885:Middlewares/Third_Party/FatFs/src/ff.c **** 	*p = 0;
5886:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
5887:Middlewares/Third_Party/FatFs/src/ff.c **** }
5888:Middlewares/Third_Party/FatFs/src/ff.c **** 
5889:Middlewares/Third_Party/FatFs/src/ff.c **** 
5890:Middlewares/Third_Party/FatFs/src/ff.c **** 
5891:Middlewares/Third_Party/FatFs/src/ff.c **** 
5892:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
5893:Middlewares/Third_Party/FatFs/src/ff.c **** #include <stdarg.h>
5894:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5895:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a character to the file                                           */
5896:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5897:Middlewares/Third_Party/FatFs/src/ff.c **** 
5898:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
5899:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL *fp;		/* Ptr to the writing file */
5900:Middlewares/Third_Party/FatFs/src/ff.c **** 	int idx, nchr;	/* Write index of buf[] (-1:error), number of chars written */
5901:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[64];	/* Write buffer */
5902:Middlewares/Third_Party/FatFs/src/ff.c **** } putbuff;
5903:Middlewares/Third_Party/FatFs/src/ff.c **** 
5904:Middlewares/Third_Party/FatFs/src/ff.c **** 
5905:Middlewares/Third_Party/FatFs/src/ff.c **** static
5906:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_bfd (		/* Buffered write with code conversion */
5907:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
5908:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c
5909:Middlewares/Third_Party/FatFs/src/ff.c **** )
5910:Middlewares/Third_Party/FatFs/src/ff.c **** {
5911:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
5912:Middlewares/Third_Party/FatFs/src/ff.c **** 	int i;
5913:Middlewares/Third_Party/FatFs/src/ff.c **** 
5914:Middlewares/Third_Party/FatFs/src/ff.c **** 
5915:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_USE_STRFUNC == 2 && c == '\n') {	 /* LF -> CRLF conversion */
5916:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
5917:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5918:Middlewares/Third_Party/FatFs/src/ff.c **** 
5919:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = pb->idx;		/* Write index of pb->buf[] */
5920:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
5921:Middlewares/Third_Party/FatFs/src/ff.c **** 
5922:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5923:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3			/* Write a character in UTF-8 */
5924:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c < 0x80) {				/* 7-bit */
5925:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)c;
5926:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5927:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c < 0x800) {		/* 11-bit */
5928:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xC0 | c >> 6);
5929:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* 16-bit */
5930:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xE0 | c >> 12);
5931:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0x80 | (c >> 6 & 0x3F));
5932:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5933:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(0x80 | (c & 0x3F));
5934:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5935:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2			/* Write a character in UTF-16BE */
5936:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
5937:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5938:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1			/* Write a character in UTF-16LE */
5939:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5940:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
5941:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character in ANSI/OEM */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 131


5942:Middlewares/Third_Party/FatFs/src/ff.c **** 	c = ff_convert(c, 0);	/* Unicode -> OEM */
5943:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!c) c = '?';
5944:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c >= 0x100)
5945:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(c >> 8);
5946:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5947:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5948:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character without conversion */
5949:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5950:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5951:Middlewares/Third_Party/FatFs/src/ff.c **** 
5952:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i >= (int)(sizeof pb->buf) - 3) {	/* Write buffered characters to the file */
5953:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
5954:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
5955:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5956:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->idx = i;
5957:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
5958:Middlewares/Third_Party/FatFs/src/ff.c **** }
5959:Middlewares/Third_Party/FatFs/src/ff.c **** 
5960:Middlewares/Third_Party/FatFs/src/ff.c **** 
5961:Middlewares/Third_Party/FatFs/src/ff.c **** static
5962:Middlewares/Third_Party/FatFs/src/ff.c **** int putc_flush (		/* Flush left characters in the buffer */
5963:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb
5964:Middlewares/Third_Party/FatFs/src/ff.c **** )
5965:Middlewares/Third_Party/FatFs/src/ff.c **** {
5966:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
5967:Middlewares/Third_Party/FatFs/src/ff.c **** 
5968:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   pb->idx >= 0	/* Flush buffered characters to the file */
5969:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb->fp, pb->buf, (UINT)pb->idx, &nw) == FR_OK
5970:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb->idx == nw) return pb->nchr;
5971:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
5972:Middlewares/Third_Party/FatFs/src/ff.c **** }
5973:Middlewares/Third_Party/FatFs/src/ff.c **** 
5974:Middlewares/Third_Party/FatFs/src/ff.c **** 
5975:Middlewares/Third_Party/FatFs/src/ff.c **** static
5976:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_init (		/* Initialize write buffer */
5977:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
5978:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp
5979:Middlewares/Third_Party/FatFs/src/ff.c **** )
5980:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1434              		.loc 1 5980 0
 1435              		.cfi_startproc
 1436              		@ args = 0, pretend = 0, frame = 0
 1437              		@ frame_needed = 0, uses_anonymous_args = 0
 1438              		@ link register save eliminated.
 1439              	.LVL190:
5981:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->fp = fp;
 1440              		.loc 1 5981 0
 1441 0000 0160     		str	r1, [r0]
5982:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr = pb->idx = 0;
 1442              		.loc 1 5982 0
 1443 0002 0023     		movs	r3, #0
 1444 0004 4360     		str	r3, [r0, #4]
 1445 0006 8360     		str	r3, [r0, #8]
5983:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1446              		.loc 1 5983 0
 1447 0008 7047     		bx	lr
 1448              		.cfi_endproc
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 132


 1449              	.LFE191:
 1451              		.section	.text.lock_fs,"ax",%progbits
 1452              		.align	1
 1453              		.syntax unified
 1454              		.thumb
 1455              		.thumb_func
 1456              		.fpu fpv4-sp-d16
 1458              	lock_fs:
 1459              	.LFB139:
 745:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (fs && ff_req_grant(fs->sobj)) ? 1 : 0;
 1460              		.loc 1 745 0
 1461              		.cfi_startproc
 1462              		@ args = 0, pretend = 0, frame = 0
 1463              		@ frame_needed = 0, uses_anonymous_args = 0
 1464              	.LVL191:
 1465 0000 08B5     		push	{r3, lr}
 1466              	.LCFI20:
 1467              		.cfi_def_cfa_offset 8
 1468              		.cfi_offset 3, -8
 1469              		.cfi_offset 14, -4
 746:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1470              		.loc 1 746 0
 1471 0002 30B1     		cbz	r0, .L159
 746:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1472              		.loc 1 746 0 is_stmt 0 discriminator 1
 1473 0004 C068     		ldr	r0, [r0, #12]
 1474              	.LVL192:
 1475 0006 FFF7FEFF 		bl	ff_req_grant
 1476              	.LVL193:
 1477 000a 0346     		mov	r3, r0
 1478 000c 10B1     		cbz	r0, .L157
 746:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1479              		.loc 1 746 0
 1480 000e 0123     		movs	r3, #1
 1481 0010 00E0     		b	.L157
 1482              	.LVL194:
 1483              	.L159:
 1484 0012 0023     		movs	r3, #0
 1485              	.LVL195:
 1486              	.L157:
 747:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1487              		.loc 1 747 0 is_stmt 1
 1488 0014 1846     		mov	r0, r3
 1489 0016 08BD     		pop	{r3, pc}
 1490              		.cfi_endproc
 1491              	.LFE139:
 1493              		.section	.text.validate,"ax",%progbits
 1494              		.align	1
 1495              		.syntax unified
 1496              		.thumb
 1497              		.thumb_func
 1498              		.fpu fpv4-sp-d16
 1500              	validate:
 1501              	.LFB170:
3220:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 1502              		.loc 1 3220 0
 1503              		.cfi_startproc
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 133


 1504              		@ args = 0, pretend = 0, frame = 0
 1505              		@ frame_needed = 0, uses_anonymous_args = 0
 1506              	.LVL196:
 1507 0000 38B5     		push	{r3, r4, r5, lr}
 1508              	.LCFI21:
 1509              		.cfi_def_cfa_offset 16
 1510              		.cfi_offset 3, -16
 1511              		.cfi_offset 4, -12
 1512              		.cfi_offset 5, -8
 1513              		.cfi_offset 14, -4
 1514 0002 0D46     		mov	r5, r1
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1515              		.loc 1 3223 0
 1516 0004 40B1     		cbz	r0, .L162
 1517 0006 0446     		mov	r4, r0
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1518              		.loc 1 3223 0 is_stmt 0 discriminator 1
 1519 0008 0368     		ldr	r3, [r0]
 1520 000a 2BB1     		cbz	r3, .L162
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1521              		.loc 1 3223 0 discriminator 2
 1522 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1523 000e 1AB1     		cbz	r2, .L162
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1524              		.loc 1 3223 0 discriminator 3
 1525 0010 D988     		ldrh	r1, [r3, #6]
 1526              	.LVL197:
 1527 0012 8288     		ldrh	r2, [r0, #4]
 1528 0014 9142     		cmp	r1, r2
 1529 0016 03D0     		beq	.L167
 1530              	.LVL198:
 1531              	.L162:
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INVALID_OBJECT;	/* The object is invalid */
 1532              		.loc 1 3224 0 is_stmt 1
 1533 0018 0023     		movs	r3, #0
 1534 001a 2B60     		str	r3, [r5]
 1535              	.LVL199:
3225:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 1536              		.loc 1 3225 0
 1537 001c 0920     		movs	r0, #9
 1538              	.LVL200:
 1539              	.L164:
3232:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1540              		.loc 1 3232 0
 1541 001e 38BD     		pop	{r3, r4, r5, pc}
 1542              	.LVL201:
 1543              	.L167:
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1544              		.loc 1 3223 0 discriminator 4
 1545 0020 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 1546              	.LVL202:
 1547 0022 FFF7FEFF 		bl	disk_status
 1548              	.LVL203:
 1549 0026 10F0010F 		tst	r0, #1
 1550 002a F5D1     		bne	.L162
3227:Middlewares/Third_Party/FatFs/src/ff.c **** 		ENTER_FF(obj->fs);		/* Lock file system */
 1551              		.loc 1 3227 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 134


 1552 002c 2368     		ldr	r3, [r4]
 1553 002e 2B60     		str	r3, [r5]
3228:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;			/* Valid object */
 1554              		.loc 1 3228 0
 1555 0030 2068     		ldr	r0, [r4]
 1556 0032 FFF7FEFF 		bl	lock_fs
 1557              	.LVL204:
 1558 0036 08B1     		cbz	r0, .L168
3229:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1559              		.loc 1 3229 0
 1560 0038 0020     		movs	r0, #0
 1561 003a F0E7     		b	.L164
 1562              	.L168:
3228:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;			/* Valid object */
 1563              		.loc 1 3228 0
 1564 003c 0F20     		movs	r0, #15
 1565 003e EEE7     		b	.L164
 1566              		.cfi_endproc
 1567              	.LFE170:
 1569              		.section	.text.sync_window,"ax",%progbits
 1570              		.align	1
 1571              		.syntax unified
 1572              		.thumb
 1573              		.thumb_func
 1574              		.fpu fpv4-sp-d16
 1576              	sync_window:
 1577              	.LFB146:
 886:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 1578              		.loc 1 886 0
 1579              		.cfi_startproc
 1580              		@ args = 0, pretend = 0, frame = 0
 1581              		@ frame_needed = 0, uses_anonymous_args = 0
 1582              	.LVL205:
 1583 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1584              	.LCFI22:
 1585              		.cfi_def_cfa_offset 24
 1586              		.cfi_offset 3, -24
 1587              		.cfi_offset 4, -20
 1588              		.cfi_offset 5, -16
 1589              		.cfi_offset 6, -12
 1590              		.cfi_offset 7, -8
 1591              		.cfi_offset 14, -4
 1592              	.LVL206:
 892:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 1593              		.loc 1 892 0
 1594 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1595 0004 0BB9     		cbnz	r3, .L177
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1596              		.loc 1 889 0
 1597 0006 0020     		movs	r0, #0
 1598              	.LVL207:
 1599              	.L170:
 907:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1600              		.loc 1 907 0
 1601 0008 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1602              	.LVL208:
 1603              	.L177:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 135


 1604 000a 0446     		mov	r4, r0
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 1605              		.loc 1 893 0
 1606 000c 056B     		ldr	r5, [r0, #48]
 1607              	.LVL209:
 894:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 1608              		.loc 1 894 0
 1609 000e 00F13407 		add	r7, r0, #52
 1610 0012 0123     		movs	r3, #1
 1611 0014 2A46     		mov	r2, r5
 1612 0016 3946     		mov	r1, r7
 1613 0018 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 1614              	.LVL210:
 1615 001a FFF7FEFF 		bl	disk_write
 1616              	.LVL211:
 1617 001e A8B9     		cbnz	r0, .L174
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 1618              		.loc 1 897 0
 1619 0020 0023     		movs	r3, #0
 1620 0022 E370     		strb	r3, [r4, #3]
 898:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 1621              		.loc 1 898 0
 1622 0024 636A     		ldr	r3, [r4, #36]
 1623 0026 EB1A     		subs	r3, r5, r3
 1624 0028 E269     		ldr	r2, [r4, #28]
 1625 002a 9342     		cmp	r3, r2
 1626 002c 10D2     		bcs	.L175
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1627              		.loc 1 899 0
 1628 002e A678     		ldrb	r6, [r4, #2]	@ zero_extendqisi2
 1629              	.LVL212:
 1630              	.L171:
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1631              		.loc 1 899 0 is_stmt 0 discriminator 1
 1632 0030 012E     		cmp	r6, #1
 1633 0032 09D9     		bls	.L178
 900:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 1634              		.loc 1 900 0 is_stmt 1 discriminator 3
 1635 0034 E369     		ldr	r3, [r4, #28]
 1636 0036 1D44     		add	r5, r5, r3
 1637              	.LVL213:
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1638              		.loc 1 901 0 discriminator 3
 1639 0038 0123     		movs	r3, #1
 1640 003a 2A46     		mov	r2, r5
 1641 003c 3946     		mov	r1, r7
 1642 003e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1643 0040 FFF7FEFF 		bl	disk_write
 1644              	.LVL214:
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1645              		.loc 1 899 0 discriminator 3
 1646 0044 013E     		subs	r6, r6, #1
 1647              	.LVL215:
 1648 0046 F3E7     		b	.L171
 1649              	.L178:
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1650              		.loc 1 889 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 136


 1651 0048 0020     		movs	r0, #0
 1652 004a DDE7     		b	.L170
 1653              	.LVL216:
 1654              	.L174:
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 1655              		.loc 1 895 0
 1656 004c 0120     		movs	r0, #1
 1657 004e DBE7     		b	.L170
 1658              	.L175:
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1659              		.loc 1 889 0
 1660 0050 0020     		movs	r0, #0
 1661 0052 D9E7     		b	.L170
 1662              		.cfi_endproc
 1663              	.LFE146:
 1665              		.section	.text.move_window,"ax",%progbits
 1666              		.align	1
 1667              		.syntax unified
 1668              		.thumb
 1669              		.thumb_func
 1670              		.fpu fpv4-sp-d16
 1672              	move_window:
 1673              	.LFB147:
 916:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 1674              		.loc 1 916 0
 1675              		.cfi_startproc
 1676              		@ args = 0, pretend = 0, frame = 0
 1677              		@ frame_needed = 0, uses_anonymous_args = 0
 1678              	.LVL217:
 1679 0000 70B5     		push	{r4, r5, r6, lr}
 1680              	.LCFI23:
 1681              		.cfi_def_cfa_offset 16
 1682              		.cfi_offset 4, -16
 1683              		.cfi_offset 5, -12
 1684              		.cfi_offset 6, -8
 1685              		.cfi_offset 14, -4
 1686              	.LVL218:
 920:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 1687              		.loc 1 920 0
 1688 0002 036B     		ldr	r3, [r0, #48]
 1689 0004 8B42     		cmp	r3, r1
 1690 0006 12D0     		beq	.L182
 1691 0008 0446     		mov	r4, r0
 1692 000a 0D46     		mov	r5, r1
 922:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1693              		.loc 1 922 0
 1694 000c FFF7FEFF 		bl	sync_window
 1695              	.LVL219:
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 1696              		.loc 1 924 0
 1697 0010 0646     		mov	r6, r0
 1698 0012 68B9     		cbnz	r0, .L180
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 1699              		.loc 1 925 0
 1700 0014 0123     		movs	r3, #1
 1701 0016 2A46     		mov	r2, r5
 1702 0018 04F13401 		add	r1, r4, #52
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 137


 1703 001c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1704              	.LVL220:
 1705 001e FFF7FEFF 		bl	disk_read
 1706              	.LVL221:
 1707 0022 10B1     		cbz	r0, .L181
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 1708              		.loc 1 927 0
 1709 0024 0126     		movs	r6, #1
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 1710              		.loc 1 926 0
 1711 0026 4FF0FF35 		mov	r5, #-1
 1712              	.LVL222:
 1713              	.L181:
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1714              		.loc 1 929 0
 1715 002a 2563     		str	r5, [r4, #48]
 1716 002c 00E0     		b	.L180
 1717              	.LVL223:
 1718              	.L182:
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1719              		.loc 1 917 0
 1720 002e 0026     		movs	r6, #0
 1721              	.LVL224:
 1722              	.L180:
 933:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1723              		.loc 1 933 0
 1724 0030 3046     		mov	r0, r6
 1725 0032 70BD     		pop	{r4, r5, r6, pc}
 1726              		.cfi_endproc
 1727              	.LFE147:
 1729              		.section	.text.check_fs,"ax",%progbits
 1730              		.align	1
 1731              		.syntax unified
 1732              		.thumb
 1733              		.thumb_func
 1734              		.fpu fpv4-sp-d16
 1736              	check_fs:
 1737              	.LFB168:
2969:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
 1738              		.loc 1 2969 0
 1739              		.cfi_startproc
 1740              		@ args = 0, pretend = 0, frame = 0
 1741              		@ frame_needed = 0, uses_anonymous_args = 0
 1742              	.LVL225:
 1743 0000 10B5     		push	{r4, lr}
 1744              	.LCFI24:
 1745              		.cfi_def_cfa_offset 8
 1746              		.cfi_offset 4, -8
 1747              		.cfi_offset 14, -4
 1748 0002 0446     		mov	r4, r0
2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
 1749              		.loc 1 2970 0
 1750 0004 0023     		movs	r3, #0
 1751 0006 C370     		strb	r3, [r0, #3]
 1752 0008 4FF0FF33 		mov	r3, #-1
 1753 000c 0363     		str	r3, [r0, #48]
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 138


 1754              		.loc 1 2971 0
 1755 000e FFF7FEFF 		bl	move_window
 1756              	.LVL226:
 1757 0012 18BB     		cbnz	r0, .L188
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1758              		.loc 1 2973 0
 1759 0014 04F23220 		addw	r0, r4, #562
 1760 0018 FFF7FEFF 		bl	ld_word
 1761              	.LVL227:
 1762 001c 4AF65523 		movw	r3, #43605
 1763 0020 9842     		cmp	r0, r3
 1764 0022 1DD1     		bne	.L189
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
 1765              		.loc 1 2975 0
 1766 0024 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 1767 0028 E92B     		cmp	r3, #233
 1768 002a 05D0     		beq	.L187
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
 1769              		.loc 1 2975 0 is_stmt 0 discriminator 1
 1770 002c 636B     		ldr	r3, [r4, #52]
 1771 002e 03F0FF13 		and	r3, r3, #16711935
 1772 0032 0F4A     		ldr	r2, .L194
 1773 0034 9342     		cmp	r3, r2
 1774 0036 15D1     		bne	.L190
 1775              	.L187:
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 1776              		.loc 1 2976 0 is_stmt 1
 1777 0038 04F16A00 		add	r0, r4, #106
 1778 003c FFF7FEFF 		bl	ld_dword
 1779              	.LVL228:
 1780 0040 20F07F40 		bic	r0, r0, #-16777216
 1781 0044 0B4B     		ldr	r3, .L194+4
 1782 0046 9842     		cmp	r0, r3
 1783 0048 0ED0     		beq	.L191
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1784              		.loc 1 2977 0
 1785 004a 04F18600 		add	r0, r4, #134
 1786 004e FFF7FEFF 		bl	ld_dword
 1787              	.LVL229:
 1788 0052 094B     		ldr	r3, .L194+8
 1789 0054 9842     		cmp	r0, r3
 1790 0056 09D1     		bne	.L192
 1791 0058 0020     		movs	r0, #0
 1792 005a 02E0     		b	.L186
 1793              	.L188:
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1794              		.loc 1 2971 0
 1795 005c 0420     		movs	r0, #4
 1796 005e 00E0     		b	.L186
 1797              	.L189:
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1798              		.loc 1 2973 0
 1799 0060 0320     		movs	r0, #3
 1800              	.L186:
2983:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1801              		.loc 1 2983 0
 1802 0062 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 139


 1803              	.LVL230:
 1804              	.L190:
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1805              		.loc 1 2982 0
 1806 0064 0220     		movs	r0, #2
 1807 0066 FCE7     		b	.L186
 1808              	.L191:
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 1809              		.loc 1 2976 0
 1810 0068 0020     		movs	r0, #0
 1811 006a FAE7     		b	.L186
 1812              	.L192:
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1813              		.loc 1 2982 0
 1814 006c 0220     		movs	r0, #2
 1815 006e F8E7     		b	.L186
 1816              	.L195:
 1817              		.align	2
 1818              	.L194:
 1819 0070 EB009000 		.word	9437419
 1820 0074 46415400 		.word	5521734
 1821 0078 46415433 		.word	861159750
 1822              		.cfi_endproc
 1823              	.LFE168:
 1825              		.section	.text.find_volume,"ax",%progbits
 1826              		.align	1
 1827              		.syntax unified
 1828              		.thumb
 1829              		.thumb_func
 1830              		.fpu fpv4-sp-d16
 1832              	find_volume:
 1833              	.LFB169:
2998:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
 1834              		.loc 1 2998 0
 1835              		.cfi_startproc
 1836              		@ args = 0, pretend = 0, frame = 16
 1837              		@ frame_needed = 0, uses_anonymous_args = 0
 1838              	.LVL231:
 1839 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1840              	.LCFI25:
 1841              		.cfi_def_cfa_offset 32
 1842              		.cfi_offset 4, -32
 1843              		.cfi_offset 5, -28
 1844              		.cfi_offset 6, -24
 1845              		.cfi_offset 7, -20
 1846              		.cfi_offset 8, -16
 1847              		.cfi_offset 9, -12
 1848              		.cfi_offset 10, -8
 1849              		.cfi_offset 14, -4
 1850 0004 84B0     		sub	sp, sp, #16
 1851              	.LCFI26:
 1852              		.cfi_def_cfa_offset 48
 1853 0006 0E46     		mov	r6, r1
 1854 0008 1746     		mov	r7, r2
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
 1855              		.loc 1 3009 0
 1856 000a 0023     		movs	r3, #0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 140


 1857 000c 0B60     		str	r3, [r1]
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 1858              		.loc 1 3010 0
 1859 000e FFF7FEFF 		bl	get_ldnumber
 1860              	.LVL232:
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1861              		.loc 1 3011 0
 1862 0012 051E     		subs	r5, r0, #0
 1863 0014 C0F24A81 		blt	.L214
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 1864              		.loc 1 3014 0
 1865 0018 BA4B     		ldr	r3, .L246
 1866 001a 53F82540 		ldr	r4, [r3, r5, lsl #2]
 1867              	.LVL233:
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1868              		.loc 1 3015 0
 1869 001e 002C     		cmp	r4, #0
 1870 0020 00F04681 		beq	.L215
3017:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
 1871              		.loc 1 3017 0
 1872 0024 2046     		mov	r0, r4
 1873              	.LVL234:
 1874 0026 FFF7FEFF 		bl	lock_fs
 1875              	.LVL235:
 1876 002a 0028     		cmp	r0, #0
 1877 002c 00F04481 		beq	.L216
3018:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1878              		.loc 1 3018 0
 1879 0030 3460     		str	r4, [r6]
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
 1880              		.loc 1 3020 0
 1881 0032 07F0FE07 		and	r7, r7, #254
 1882              	.LVL236:
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
 1883              		.loc 1 3021 0
 1884 0036 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1885 0038 73B1     		cbz	r3, .L198
3022:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
 1886              		.loc 1 3022 0
 1887 003a 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1888 003c FFF7FEFF 		bl	disk_status
 1889              	.LVL237:
3023:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
 1890              		.loc 1 3023 0
 1891 0040 10F0010F 		tst	r0, #1
 1892 0044 08D1     		bne	.L198
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 1893              		.loc 1 3024 0
 1894 0046 002F     		cmp	r7, #0
 1895 0048 00F03881 		beq	.L217
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 1896              		.loc 1 3024 0 is_stmt 0 discriminator 1
 1897 004c 10F0040F 		tst	r0, #4
 1898 0050 40F03681 		bne	.L218
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1899              		.loc 1 3027 0 is_stmt 1
 1900 0054 0020     		movs	r0, #0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 141


 1901              	.LVL238:
 1902 0056 2CE1     		b	.L197
 1903              	.L198:
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 1904              		.loc 1 3034 0
 1905 0058 0023     		movs	r3, #0
 1906 005a 2370     		strb	r3, [r4]
3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
 1907              		.loc 1 3035 0
 1908 005c E8B2     		uxtb	r0, r5
 1909 005e 6070     		strb	r0, [r4, #1]
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
 1910              		.loc 1 3036 0
 1911 0060 FFF7FEFF 		bl	disk_initialize
 1912              	.LVL239:
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
 1913              		.loc 1 3037 0
 1914 0064 10F0010F 		tst	r0, #1
 1915 0068 40F02C81 		bne	.L219
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 1916              		.loc 1 3040 0
 1917 006c 1FB1     		cbz	r7, .L199
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 1918              		.loc 1 3040 0 is_stmt 0 discriminator 1
 1919 006e 10F0040F 		tst	r0, #4
 1920 0072 40F02981 		bne	.L220
 1921              	.L199:
 1922              	.LVL240:
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
 1923              		.loc 1 3050 0 is_stmt 1
 1924 0076 0021     		movs	r1, #0
 1925 0078 2046     		mov	r0, r4
 1926              	.LVL241:
 1927 007a FFF7FEFF 		bl	check_fs
 1928              	.LVL242:
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
 1929              		.loc 1 3051 0
 1930 007e 0228     		cmp	r0, #2
 1931 0080 00F0B680 		beq	.L221
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
 1932              		.loc 1 3049 0
 1933 0084 0026     		movs	r6, #0
 1934              	.LVL243:
 1935              	.L201:
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 1936              		.loc 1 3063 0
 1937 0086 0428     		cmp	r0, #4
 1938 0088 00F02081 		beq	.L224
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1939              		.loc 1 3064 0
 1940 008c 0128     		cmp	r0, #1
 1941 008e 00F21F81 		bhi	.L225
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1942              		.loc 1 3116 0
 1943 0092 04F13F00 		add	r0, r4, #63
 1944              	.LVL244:
 1945 0096 FFF7FEFF 		bl	ld_word
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 142


 1946              	.LVL245:
 1947 009a B0F5007F 		cmp	r0, #512
 1948 009e 40F01981 		bne	.L226
3118:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
 1949              		.loc 1 3118 0
 1950 00a2 04F14A00 		add	r0, r4, #74
 1951 00a6 FFF7FEFF 		bl	ld_word
 1952              	.LVL246:
 1953 00aa 0746     		mov	r7, r0
 1954              	.LVL247:
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
 1955              		.loc 1 3119 0
 1956 00ac 20B9     		cbnz	r0, .L206
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
 1957              		.loc 1 3119 0 is_stmt 0 discriminator 1
 1958 00ae 04F15800 		add	r0, r4, #88
 1959              	.LVL248:
 1960 00b2 FFF7FEFF 		bl	ld_dword
 1961              	.LVL249:
 1962 00b6 0746     		mov	r7, r0
 1963              	.LVL250:
 1964              	.L206:
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1965              		.loc 1 3120 0 is_stmt 1
 1966 00b8 E761     		str	r7, [r4, #28]
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
 1967              		.loc 1 3122 0
 1968 00ba 94F84420 		ldrb	r2, [r4, #68]	@ zero_extendqisi2
 1969 00be A270     		strb	r2, [r4, #2]
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 1970              		.loc 1 3123 0
 1971 00c0 531E     		subs	r3, r2, #1
 1972 00c2 DBB2     		uxtb	r3, r3
 1973 00c4 012B     		cmp	r3, #1
 1974 00c6 00F20781 		bhi	.L227
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1975              		.loc 1 3124 0
 1976 00ca 07FB02F5 		mul	r5, r7, r2
 1977              	.LVL251:
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
 1978              		.loc 1 3126 0
 1979 00ce 94F84180 		ldrb	r8, [r4, #65]	@ zero_extendqisi2
 1980 00d2 A4F80A80 		strh	r8, [r4, #10]	@ movhi
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1981              		.loc 1 3127 0
 1982 00d6 B8F1000F 		cmp	r8, #0
 1983 00da 00F0FF80 		beq	.L228
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1984              		.loc 1 3127 0 is_stmt 0 discriminator 2
 1985 00de 08F1FF33 		add	r3, r8, #-1
 1986 00e2 18EA030F 		tst	r8, r3
 1987 00e6 40F0FB80 		bne	.L229
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
 1988              		.loc 1 3129 0 is_stmt 1
 1989 00ea 04F14500 		add	r0, r4, #69
 1990 00ee FFF7FEFF 		bl	ld_word
 1991              	.LVL252:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 143


 1992 00f2 8246     		mov	r10, r0
 1993 00f4 2081     		strh	r0, [r4, #8]	@ movhi
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1994              		.loc 1 3130 0
 1995 00f6 10F00F0F 		tst	r0, #15
 1996 00fa 40F0F380 		bne	.L230
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
 1997              		.loc 1 3132 0
 1998 00fe 04F14700 		add	r0, r4, #71
 1999 0102 FFF7FEFF 		bl	ld_word
 2000              	.LVL253:
 2001 0106 8146     		mov	r9, r0
 2002              	.LVL254:
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2003              		.loc 1 3133 0
 2004 0108 20B9     		cbnz	r0, .L207
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2005              		.loc 1 3133 0 is_stmt 0 discriminator 1
 2006 010a 04F15400 		add	r0, r4, #84
 2007              	.LVL255:
 2008 010e FFF7FEFF 		bl	ld_dword
 2009              	.LVL256:
 2010 0112 8146     		mov	r9, r0
 2011              	.LVL257:
 2012              	.L207:
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
 2013              		.loc 1 3135 0 is_stmt 1
 2014 0114 04F14200 		add	r0, r4, #66
 2015              	.LVL258:
 2016 0118 FFF7FEFF 		bl	ld_word
 2017              	.LVL259:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2018              		.loc 1 3136 0
 2019 011c 0146     		mov	r1, r0
 2020 011e 0028     		cmp	r0, #0
 2021 0120 00F0E280 		beq	.L231
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
 2022              		.loc 1 3139 0
 2023 0124 4219     		adds	r2, r0, r5
 2024 0126 02EB1A12 		add	r2, r2, r10, lsr #4
 2025              	.LVL260:
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 2026              		.loc 1 3140 0
 2027 012a 9145     		cmp	r9, r2
 2028 012c C0F0DE80 		bcc	.L232
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 2029              		.loc 1 3141 0
 2030 0130 A9EB0203 		sub	r3, r9, r2
 2031 0134 B3FBF8F3 		udiv	r3, r3, r8
 2032              	.LVL261:
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
 2033              		.loc 1 3142 0
 2034 0138 002B     		cmp	r3, #0
 2035 013a 00F0D980 		beq	.L233
 2036              	.LVL262:
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 2037              		.loc 1 3144 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 144


 2038 013e 4FF6F570 		movw	r0, #65525
 2039              	.LVL263:
 2040 0142 8342     		cmp	r3, r0
 2041 0144 6CD9     		bls	.L234
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
 2042              		.loc 1 3143 0
 2043 0146 4FF00309 		mov	r9, #3
 2044              	.LVL264:
 2045              	.L208:
3145:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2046              		.loc 1 3145 0
 2047 014a 40F6F570 		movw	r0, #4085
 2048 014e 8342     		cmp	r3, r0
 2049 0150 01D8     		bhi	.L209
 2050 0152 4FF00109 		mov	r9, #1
 2051              	.LVL265:
 2052              	.L209:
3148:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
 2053              		.loc 1 3148 0
 2054 0156 03F10208 		add	r8, r3, #2
 2055 015a C4F81880 		str	r8, [r4, #24]
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 2056              		.loc 1 3149 0
 2057 015e 2662     		str	r6, [r4, #32]
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
 2058              		.loc 1 3150 0
 2059 0160 8B19     		adds	r3, r1, r6
 2060              	.LVL266:
 2061 0162 6362     		str	r3, [r4, #36]
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
 2062              		.loc 1 3151 0
 2063 0164 3244     		add	r2, r2, r6
 2064              	.LVL267:
 2065 0166 E262     		str	r2, [r4, #44]
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
 2066              		.loc 1 3152 0
 2067 0168 B9F1030F 		cmp	r9, #3
 2068 016c 5BD0     		beq	.L241
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2069              		.loc 1 3158 0
 2070 016e BAF1000F 		cmp	r10, #0
 2071 0172 00F0C380 		beq	.L238
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
 2072              		.loc 1 3159 0
 2073 0176 2B44     		add	r3, r3, r5
 2074 0178 A362     		str	r3, [r4, #40]
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2075              		.loc 1 3161 0
 2076 017a B9F1020F 		cmp	r9, #2
 2077 017e 63D0     		beq	.L242
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2078              		.loc 1 3161 0 is_stmt 0 discriminator 2
 2079 0180 08EB4802 		add	r2, r8, r8, lsl #1
 2080 0184 08F00103 		and	r3, r8, #1
 2081 0188 03EB5203 		add	r3, r3, r2, lsr #1
 2082              	.LVL268:
 2083              	.L211:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 145


3163:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2084              		.loc 1 3163 0 is_stmt 1
 2085 018c 03F2FF13 		addw	r3, r3, #511
 2086              	.LVL269:
 2087 0190 B7EB532F 		cmp	r7, r3, lsr #9
 2088 0194 C0F0B480 		bcc	.L239
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0x80;
 2089              		.loc 1 3167 0
 2090 0198 4FF0FF33 		mov	r3, #-1
 2091              	.LVL270:
 2092 019c 6361     		str	r3, [r4, #20]
 2093 019e 2361     		str	r3, [r4, #16]
3168:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
 2094              		.loc 1 3168 0
 2095 01a0 8023     		movs	r3, #128
 2096 01a2 2371     		strb	r3, [r4, #4]
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
 2097              		.loc 1 3170 0
 2098 01a4 B9F1030F 		cmp	r9, #3
 2099 01a8 51D0     		beq	.L243
 2100              	.L213:
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
 2101              		.loc 1 3191 0
 2102 01aa 84F80090 		strb	r9, [r4]
3192:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 2103              		.loc 1 3192 0
 2104 01ae 564A     		ldr	r2, .L246+4
 2105 01b0 1388     		ldrh	r3, [r2]
 2106 01b2 0133     		adds	r3, r3, #1
 2107 01b4 9BB2     		uxth	r3, r3
 2108 01b6 1380     		strh	r3, [r2]	@ movhi
 2109 01b8 E380     		strh	r3, [r4, #6]	@ movhi
3203:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2110              		.loc 1 3203 0
 2111 01ba 2046     		mov	r0, r4
 2112 01bc FFF7FEFF 		bl	clear_lock
 2113              	.LVL271:
3205:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2114              		.loc 1 3205 0
 2115 01c0 0020     		movs	r0, #0
 2116 01c2 76E0     		b	.L197
 2117              	.LVL272:
 2118              	.L222:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2119              		.loc 1 3054 0
 2120 01c4 0020     		movs	r0, #0
 2121              	.LVL273:
 2122              	.L202:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2123              		.loc 1 3054 0 is_stmt 0 discriminator 4
 2124 01c6 04AB     		add	r3, sp, #16
 2125 01c8 03EB8503 		add	r3, r3, r5, lsl #2
 2126 01cc 43F8100C 		str	r0, [r3, #-16]
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 2127              		.loc 1 3052 0 is_stmt 1 discriminator 4
 2128 01d0 0135     		adds	r5, r5, #1
 2129              	.LVL274:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 146


 2130              	.L200:
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 2131              		.loc 1 3052 0 is_stmt 0 discriminator 2
 2132 01d2 032D     		cmp	r5, #3
 2133 01d4 0ED8     		bhi	.L244
3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
 2134              		.loc 1 3053 0 is_stmt 1
 2135 01d6 04F13400 		add	r0, r4, #52
 2136 01da 2B01     		lsls	r3, r5, #4
 2137 01dc 03F5DF73 		add	r3, r3, #446
 2138 01e0 1844     		add	r0, r0, r3
 2139              	.LVL275:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2140              		.loc 1 3054 0
 2141 01e2 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 2142 01e4 002B     		cmp	r3, #0
 2143 01e6 EDD0     		beq	.L222
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2144              		.loc 1 3054 0 is_stmt 0 discriminator 1
 2145 01e8 0830     		adds	r0, r0, #8
 2146              	.LVL276:
 2147 01ea FFF7FEFF 		bl	ld_dword
 2148              	.LVL277:
 2149 01ee EAE7     		b	.L202
 2150              	.LVL278:
 2151              	.L221:
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 2152              		.loc 1 3052 0 is_stmt 1
 2153 01f0 0025     		movs	r5, #0
 2154              	.LVL279:
 2155 01f2 EEE7     		b	.L200
 2156              	.LVL280:
 2157              	.L244:
 2158 01f4 0025     		movs	r5, #0
 2159              	.LVL281:
 2160 01f6 0AE0     		b	.L205
 2161              	.LVL282:
 2162              	.L245:
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 2163              		.loc 1 3060 0 discriminator 1
 2164 01f8 3146     		mov	r1, r6
 2165 01fa 2046     		mov	r0, r4
 2166 01fc FFF7FEFF 		bl	check_fs
 2167              	.LVL283:
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2168              		.loc 1 3061 0 discriminator 1
 2169 0200 0128     		cmp	r0, #1
 2170 0202 7FF640AF 		bls	.L201
 2171              	.LVL284:
 2172              	.L204:
 2173 0206 0135     		adds	r5, r5, #1
 2174              	.LVL285:
 2175 0208 032D     		cmp	r5, #3
 2176 020a 3FF63CAF 		bhi	.L201
 2177              	.LVL286:
 2178              	.L205:
3059:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 147


 2179              		.loc 1 3059 0
 2180 020e 04AB     		add	r3, sp, #16
 2181 0210 03EB8503 		add	r3, r3, r5, lsl #2
 2182 0214 53F8106C 		ldr	r6, [r3, #-16]
 2183              	.LVL287:
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 2184              		.loc 1 3060 0
 2185 0218 002E     		cmp	r6, #0
 2186 021a EDD1     		bne	.L245
 2187 021c 0320     		movs	r0, #3
 2188 021e F2E7     		b	.L204
 2189              	.LVL288:
 2190              	.L234:
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 2191              		.loc 1 3144 0
 2192 0220 4FF00209 		mov	r9, #2
 2193              	.LVL289:
 2194 0224 91E7     		b	.L208
 2195              	.LVL290:
 2196              	.L241:
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 2197              		.loc 1 3153 0
 2198 0226 04F15E00 		add	r0, r4, #94
 2199 022a FFF7FEFF 		bl	ld_word
 2200              	.LVL291:
 2201 022e 0028     		cmp	r0, #0
 2202 0230 60D1     		bne	.L236
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 2203              		.loc 1 3154 0
 2204 0232 BAF1000F 		cmp	r10, #0
 2205 0236 5FD1     		bne	.L237
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
 2206              		.loc 1 3155 0
 2207 0238 04F16000 		add	r0, r4, #96
 2208 023c FFF7FEFF 		bl	ld_dword
 2209              	.LVL292:
 2210 0240 A062     		str	r0, [r4, #40]
3156:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 2211              		.loc 1 3156 0
 2212 0242 4FEA8803 		lsl	r3, r8, #2
 2213              	.LVL293:
 2214 0246 A1E7     		b	.L211
 2215              	.LVL294:
 2216              	.L242:
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2217              		.loc 1 3161 0 discriminator 1
 2218 0248 4FEA4803 		lsl	r3, r8, #1
 2219 024c 9EE7     		b	.L211
 2220              	.LVL295:
 2221              	.L243:
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
 2222              		.loc 1 3171 0
 2223 024e 04F16400 		add	r0, r4, #100
 2224 0252 FFF7FEFF 		bl	ld_word
 2225              	.LVL296:
 2226 0256 0128     		cmp	r0, #1
 2227 0258 A7D1     		bne	.L213
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 148


3172:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
 2228              		.loc 1 3172 0
 2229 025a 711C     		adds	r1, r6, #1
 2230 025c 2046     		mov	r0, r4
 2231 025e FFF7FEFF 		bl	move_window
 2232              	.LVL297:
 2233 0262 0028     		cmp	r0, #0
 2234 0264 A1D1     		bne	.L213
3174:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 2235              		.loc 1 3174 0
 2236 0266 0023     		movs	r3, #0
 2237 0268 2371     		strb	r3, [r4, #4]
3175:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
 2238              		.loc 1 3175 0
 2239 026a 04F23220 		addw	r0, r4, #562
 2240 026e FFF7FEFF 		bl	ld_word
 2241              	.LVL298:
 2242 0272 4AF65523 		movw	r3, #43605
 2243 0276 9842     		cmp	r0, r3
 2244 0278 97D1     		bne	.L213
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
 2245              		.loc 1 3176 0
 2246 027a 04F13400 		add	r0, r4, #52
 2247 027e FFF7FEFF 		bl	ld_dword
 2248              	.LVL299:
 2249 0282 224B     		ldr	r3, .L246+8
 2250 0284 9842     		cmp	r0, r3
 2251 0286 90D1     		bne	.L213
3177:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
 2252              		.loc 1 3177 0
 2253 0288 04F50670 		add	r0, r4, #536
 2254 028c FFF7FEFF 		bl	ld_dword
 2255              	.LVL300:
 2256 0290 1F4B     		ldr	r3, .L246+12
 2257 0292 9842     		cmp	r0, r3
 2258 0294 89D1     		bne	.L213
3180:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2259              		.loc 1 3180 0
 2260 0296 04F50770 		add	r0, r4, #540
 2261 029a FFF7FEFF 		bl	ld_dword
 2262              	.LVL301:
 2263 029e 6061     		str	r0, [r4, #20]
3183:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2264              		.loc 1 3183 0
 2265 02a0 04F50870 		add	r0, r4, #544
 2266 02a4 FFF7FEFF 		bl	ld_dword
 2267              	.LVL302:
 2268 02a8 2061     		str	r0, [r4, #16]
 2269 02aa 7EE7     		b	.L213
 2270              	.LVL303:
 2271              	.L214:
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2272              		.loc 1 3011 0
 2273 02ac 0B20     		movs	r0, #11
 2274              	.LVL304:
 2275 02ae 00E0     		b	.L197
 2276              	.LVL305:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 149


 2277              	.L215:
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2278              		.loc 1 3015 0
 2279 02b0 0C20     		movs	r0, #12
 2280              	.LVL306:
 2281              	.L197:
3206:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2282              		.loc 1 3206 0
 2283 02b2 04B0     		add	sp, sp, #16
 2284              	.LCFI27:
 2285              		.cfi_remember_state
 2286              		.cfi_def_cfa_offset 32
 2287              		@ sp needed
 2288 02b4 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2289              	.LVL307:
 2290              	.L216:
 2291              	.LCFI28:
 2292              		.cfi_restore_state
3017:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
 2293              		.loc 1 3017 0
 2294 02b8 0F20     		movs	r0, #15
 2295 02ba FAE7     		b	.L197
 2296              	.LVL308:
 2297              	.L217:
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2298              		.loc 1 3027 0
 2299 02bc 0020     		movs	r0, #0
 2300              	.LVL309:
 2301 02be F8E7     		b	.L197
 2302              	.LVL310:
 2303              	.L218:
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2304              		.loc 1 3025 0
 2305 02c0 0A20     		movs	r0, #10
 2306              	.LVL311:
 2307 02c2 F6E7     		b	.L197
 2308              	.LVL312:
 2309              	.L219:
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2310              		.loc 1 3038 0
 2311 02c4 0320     		movs	r0, #3
 2312              	.LVL313:
 2313 02c6 F4E7     		b	.L197
 2314              	.LVL314:
 2315              	.L220:
3041:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2316              		.loc 1 3041 0
 2317 02c8 0A20     		movs	r0, #10
 2318              	.LVL315:
 2319 02ca F2E7     		b	.L197
 2320              	.LVL316:
 2321              	.L224:
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 2322              		.loc 1 3063 0
 2323 02cc 0120     		movs	r0, #1
 2324              	.LVL317:
 2325 02ce F0E7     		b	.L197
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 150


 2326              	.LVL318:
 2327              	.L225:
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2328              		.loc 1 3064 0
 2329 02d0 0D20     		movs	r0, #13
 2330              	.LVL319:
 2331 02d2 EEE7     		b	.L197
 2332              	.L226:
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2333              		.loc 1 3116 0
 2334 02d4 0D20     		movs	r0, #13
 2335 02d6 ECE7     		b	.L197
 2336              	.LVL320:
 2337              	.L227:
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 2338              		.loc 1 3123 0
 2339 02d8 0D20     		movs	r0, #13
 2340              	.LVL321:
 2341 02da EAE7     		b	.L197
 2342              	.LVL322:
 2343              	.L228:
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2344              		.loc 1 3127 0
 2345 02dc 0D20     		movs	r0, #13
 2346 02de E8E7     		b	.L197
 2347              	.L229:
 2348 02e0 0D20     		movs	r0, #13
 2349 02e2 E6E7     		b	.L197
 2350              	.L230:
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2351              		.loc 1 3130 0
 2352 02e4 0D20     		movs	r0, #13
 2353 02e6 E4E7     		b	.L197
 2354              	.LVL323:
 2355              	.L231:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2356              		.loc 1 3136 0
 2357 02e8 0D20     		movs	r0, #13
 2358              	.LVL324:
 2359 02ea E2E7     		b	.L197
 2360              	.LVL325:
 2361              	.L232:
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 2362              		.loc 1 3140 0
 2363 02ec 0D20     		movs	r0, #13
 2364              	.LVL326:
 2365 02ee E0E7     		b	.L197
 2366              	.LVL327:
 2367              	.L233:
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
 2368              		.loc 1 3142 0
 2369 02f0 0D20     		movs	r0, #13
 2370              	.LVL328:
 2371 02f2 DEE7     		b	.L197
 2372              	.LVL329:
 2373              	.L236:
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 151


 2374              		.loc 1 3153 0
 2375 02f4 0D20     		movs	r0, #13
 2376 02f6 DCE7     		b	.L197
 2377              	.L237:
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 2378              		.loc 1 3154 0
 2379 02f8 0D20     		movs	r0, #13
 2380 02fa DAE7     		b	.L197
 2381              	.LVL330:
 2382              	.L238:
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2383              		.loc 1 3158 0
 2384 02fc 0D20     		movs	r0, #13
 2385 02fe D8E7     		b	.L197
 2386              	.LVL331:
 2387              	.L239:
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2388              		.loc 1 3163 0
 2389 0300 0D20     		movs	r0, #13
 2390 0302 D6E7     		b	.L197
 2391              	.L247:
 2392              		.align	2
 2393              	.L246:
 2394 0304 00000000 		.word	.LANCHOR2
 2395 0308 00000000 		.word	.LANCHOR3
 2396 030c 52526141 		.word	1096897106
 2397 0310 72724161 		.word	1631679090
 2398              		.cfi_endproc
 2399              	.LFE169:
 2401              		.section	.text.put_fat,"ax",%progbits
 2402              		.align	1
 2403              		.syntax unified
 2404              		.thumb
 2405              		.thumb_func
 2406              		.fpu fpv4-sp-d16
 2408              	put_fat:
 2409              	.LFB151:
1086:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
 2410              		.loc 1 1086 0
 2411              		.cfi_startproc
 2412              		@ args = 0, pretend = 0, frame = 0
 2413              		@ frame_needed = 0, uses_anonymous_args = 0
 2414              	.LVL332:
 2415 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2416              	.LCFI29:
 2417              		.cfi_def_cfa_offset 32
 2418              		.cfi_offset 4, -32
 2419              		.cfi_offset 5, -28
 2420              		.cfi_offset 6, -24
 2421              		.cfi_offset 7, -20
 2422              		.cfi_offset 8, -16
 2423              		.cfi_offset 9, -12
 2424              		.cfi_offset 10, -8
 2425              		.cfi_offset 14, -4
 2426              	.LVL333:
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 2427              		.loc 1 1091 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 152


 2428 0004 0129     		cmp	r1, #1
 2429 0006 7AD9     		bls	.L257
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 2430              		.loc 1 1091 0 is_stmt 0 discriminator 1
 2431 0008 8369     		ldr	r3, [r0, #24]
 2432 000a 8B42     		cmp	r3, r1
 2433 000c 79D9     		bls	.L258
 2434 000e 1746     		mov	r7, r2
 2435 0010 0C46     		mov	r4, r1
 2436 0012 0646     		mov	r6, r0
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
 2437              		.loc 1 1092 0 is_stmt 1
 2438 0014 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 2439 0016 022B     		cmp	r3, #2
 2440 0018 43D0     		beq	.L250
 2441 001a 032B     		cmp	r3, #3
 2442 001c 54D0     		beq	.L251
 2443 001e 012B     		cmp	r3, #1
 2444 0020 01D0     		beq	.L262
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2445              		.loc 1 1089 0
 2446 0022 0225     		movs	r5, #2
 2447 0024 6EE0     		b	.L249
 2448              	.L262:
 2449              	.LVL334:
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2450              		.loc 1 1094 0
 2451 0026 01EB5108 		add	r8, r1, r1, lsr #1
 2452              	.LVL335:
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2453              		.loc 1 1095 0
 2454 002a 416A     		ldr	r1, [r0, #36]
 2455              	.LVL336:
 2456 002c 01EB5821 		add	r1, r1, r8, lsr #9
 2457 0030 FFF7FEFF 		bl	move_window
 2458              	.LVL337:
1096:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc++ % SS(fs);
 2459              		.loc 1 1096 0
 2460 0034 0546     		mov	r5, r0
 2461 0036 0028     		cmp	r0, #0
 2462 0038 64D1     		bne	.L249
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 2463              		.loc 1 1097 0
 2464 003a 06F1340A 		add	r10, r6, #52
 2465 003e 08F10109 		add	r9, r8, #1
 2466              	.LVL338:
 2467 0042 C8F30808 		ubfx	r8, r8, #0, #9
 2468              	.LVL339:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2469              		.loc 1 1098 0
 2470 0046 14F00104 		ands	r4, r4, #1
 2471              	.LVL340:
 2472 004a 1FD0     		beq	.L253
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2473              		.loc 1 1098 0 is_stmt 0 discriminator 1
 2474 004c 1AF90830 		ldrsb	r3, [r10, r8]
 2475 0050 03F00F03 		and	r3, r3, #15
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 153


 2476 0054 3A01     		lsls	r2, r7, #4
 2477 0056 02F47F62 		and	r2, r2, #4080
 2478 005a 1343     		orrs	r3, r3, r2
 2479 005c DBB2     		uxtb	r3, r3
 2480              	.L254:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2481              		.loc 1 1098 0 discriminator 4
 2482 005e 0AF80830 		strb	r3, [r10, r8]
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2483              		.loc 1 1099 0 is_stmt 1 discriminator 4
 2484 0062 0123     		movs	r3, #1
 2485 0064 F370     		strb	r3, [r6, #3]
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2486              		.loc 1 1100 0 discriminator 4
 2487 0066 716A     		ldr	r1, [r6, #36]
 2488 0068 01EB5921 		add	r1, r1, r9, lsr #9
 2489 006c 3046     		mov	r0, r6
 2490              	.LVL341:
 2491 006e FFF7FEFF 		bl	move_window
 2492              	.LVL342:
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc % SS(fs);
 2493              		.loc 1 1101 0 discriminator 4
 2494 0072 0546     		mov	r5, r0
 2495 0074 0028     		cmp	r0, #0
 2496 0076 45D1     		bne	.L249
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 2497              		.loc 1 1102 0
 2498 0078 C9F30809 		ubfx	r9, r9, #0, #9
 2499              	.LVL343:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2500              		.loc 1 1103 0
 2501 007c 44B1     		cbz	r4, .L255
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2502              		.loc 1 1103 0 is_stmt 0 discriminator 1
 2503 007e C7F30712 		ubfx	r2, r7, #4, #8
 2504              	.LVL344:
 2505              	.L256:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2506              		.loc 1 1103 0 discriminator 4
 2507 0082 0AF80920 		strb	r2, [r10, r9]
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2508              		.loc 1 1104 0 is_stmt 1 discriminator 4
 2509 0086 0123     		movs	r3, #1
 2510 0088 F370     		strb	r3, [r6, #3]
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2511              		.loc 1 1105 0 discriminator 4
 2512 008a 3BE0     		b	.L249
 2513              	.LVL345:
 2514              	.L253:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2515              		.loc 1 1098 0 discriminator 2
 2516 008c FBB2     		uxtb	r3, r7
 2517 008e E6E7     		b	.L254
 2518              	.LVL346:
 2519              	.L255:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2520              		.loc 1 1103 0 discriminator 2
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 154


 2521 0090 1AF90920 		ldrsb	r2, [r10, r9]
 2522 0094 22F00F02 		bic	r2, r2, #15
 2523 0098 C7F30327 		ubfx	r7, r7, #8, #4
 2524              	.LVL347:
 2525 009c 3A43     		orrs	r2, r2, r7
 2526 009e D2B2     		uxtb	r2, r2
 2527 00a0 EFE7     		b	.L256
 2528              	.LVL348:
 2529              	.L250:
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2530              		.loc 1 1108 0
 2531 00a2 416A     		ldr	r1, [r0, #36]
 2532              	.LVL349:
 2533 00a4 01EB1421 		add	r1, r1, r4, lsr #8
 2534 00a8 FFF7FEFF 		bl	move_window
 2535              	.LVL350:
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
 2536              		.loc 1 1109 0
 2537 00ac 0546     		mov	r5, r0
 2538 00ae 48BB     		cbnz	r0, .L249
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2539              		.loc 1 1110 0
 2540 00b0 06F13400 		add	r0, r6, #52
 2541              	.LVL351:
 2542 00b4 6400     		lsls	r4, r4, #1
 2543              	.LVL352:
 2544 00b6 04F4FF74 		and	r4, r4, #510
 2545 00ba B9B2     		uxth	r1, r7
 2546 00bc 2044     		add	r0, r0, r4
 2547 00be FFF7FEFF 		bl	st_word
 2548              	.LVL353:
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2549              		.loc 1 1111 0
 2550 00c2 0123     		movs	r3, #1
 2551 00c4 F370     		strb	r3, [r6, #3]
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2552              		.loc 1 1112 0
 2553 00c6 1DE0     		b	.L249
 2554              	.LVL354:
 2555              	.L251:
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2556              		.loc 1 1118 0
 2557 00c8 416A     		ldr	r1, [r0, #36]
 2558              	.LVL355:
 2559 00ca 01EBD411 		add	r1, r1, r4, lsr #7
 2560 00ce FFF7FEFF 		bl	move_window
 2561              	.LVL356:
1119:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 2562              		.loc 1 1119 0
 2563 00d2 0546     		mov	r5, r0
 2564 00d4 B0B9     		cbnz	r0, .L249
1121:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2565              		.loc 1 1121 0
 2566 00d6 27F07047 		bic	r7, r7, #-268435456
 2567              	.LVL357:
 2568 00da 06F13403 		add	r3, r6, #52
 2569 00de A100     		lsls	r1, r4, #2
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 155


 2570 00e0 01F4FE71 		and	r1, r1, #508
 2571 00e4 5C18     		adds	r4, r3, r1
 2572              	.LVL358:
 2573 00e6 2046     		mov	r0, r4
 2574              	.LVL359:
 2575 00e8 FFF7FEFF 		bl	ld_dword
 2576              	.LVL360:
 2577 00ec 00F07041 		and	r1, r0, #-268435456
 2578              	.LVL361:
1123:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2579              		.loc 1 1123 0
 2580 00f0 3943     		orrs	r1, r1, r7
 2581              	.LVL362:
 2582 00f2 2046     		mov	r0, r4
 2583 00f4 FFF7FEFF 		bl	st_dword
 2584              	.LVL363:
1124:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2585              		.loc 1 1124 0
 2586 00f8 0123     		movs	r3, #1
 2587 00fa F370     		strb	r3, [r6, #3]
1125:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2588              		.loc 1 1125 0
 2589 00fc 02E0     		b	.L249
 2590              	.LVL364:
 2591              	.L257:
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2592              		.loc 1 1089 0
 2593 00fe 0225     		movs	r5, #2
 2594 0100 00E0     		b	.L249
 2595              	.L258:
 2596 0102 0225     		movs	r5, #2
 2597              	.LVL365:
 2598              	.L249:
1129:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2599              		.loc 1 1129 0
 2600 0104 2846     		mov	r0, r5
 2601 0106 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2602              		.cfi_endproc
 2603              	.LFE151:
 2605              		.section	.text.get_fat,"ax",%progbits
 2606              		.align	1
 2607              		.syntax unified
 2608              		.thumb
 2609              		.thumb_func
 2610              		.fpu fpv4-sp-d16
 2612              	get_fat:
 2613              	.LFB150:
1005:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
 2614              		.loc 1 1005 0
 2615              		.cfi_startproc
 2616              		@ args = 0, pretend = 0, frame = 0
 2617              		@ frame_needed = 0, uses_anonymous_args = 0
 2618              	.LVL366:
 2619 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2620              	.LCFI30:
 2621              		.cfi_def_cfa_offset 24
 2622              		.cfi_offset 3, -24
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 156


 2623              		.cfi_offset 4, -20
 2624              		.cfi_offset 5, -16
 2625              		.cfi_offset 6, -12
 2626              		.cfi_offset 7, -8
 2627              		.cfi_offset 14, -4
1008:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2628              		.loc 1 1008 0
 2629 0002 0668     		ldr	r6, [r0]
 2630              	.LVL367:
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2631              		.loc 1 1011 0
 2632 0004 0129     		cmp	r1, #1
 2633 0006 53D9     		bls	.L269
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2634              		.loc 1 1011 0 is_stmt 0 discriminator 1
 2635 0008 B369     		ldr	r3, [r6, #24]
 2636 000a 8B42     		cmp	r3, r1
 2637 000c 52D9     		bls	.L270
 2638 000e 0C46     		mov	r4, r1
 2639              	.LVL368:
1017:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 2640              		.loc 1 1017 0 is_stmt 1
 2641 0010 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2642 0012 022B     		cmp	r3, #2
 2643 0014 2BD0     		beq	.L265
 2644 0016 032B     		cmp	r3, #3
 2645 0018 39D0     		beq	.L266
 2646 001a 012B     		cmp	r3, #1
 2647 001c 01D0     		beq	.L278
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2648              		.loc 1 1065 0
 2649 001e 0120     		movs	r0, #1
 2650              	.LVL369:
 2651 0020 47E0     		b	.L263
 2652              	.LVL370:
 2653              	.L278:
1019:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2654              		.loc 1 1019 0
 2655 0022 01EB5105 		add	r5, r1, r1, lsr #1
 2656              	.LVL371:
1020:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
 2657              		.loc 1 1020 0
 2658 0026 716A     		ldr	r1, [r6, #36]
 2659              	.LVL372:
 2660 0028 01EB5521 		add	r1, r1, r5, lsr #9
 2661 002c 3046     		mov	r0, r6
 2662              	.LVL373:
 2663 002e FFF7FEFF 		bl	move_window
 2664              	.LVL374:
 2665 0032 0028     		cmp	r0, #0
 2666 0034 40D1     		bne	.L272
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2667              		.loc 1 1021 0
 2668 0036 6F1C     		adds	r7, r5, #1
 2669              	.LVL375:
 2670 0038 C5F30805 		ubfx	r5, r5, #0, #9
 2671 003c 3544     		add	r5, r5, r6
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 157


 2672 003e 95F83450 		ldrb	r5, [r5, #52]	@ zero_extendqisi2
 2673              	.LVL376:
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
 2674              		.loc 1 1022 0
 2675 0042 716A     		ldr	r1, [r6, #36]
 2676 0044 01EB5721 		add	r1, r1, r7, lsr #9
 2677 0048 3046     		mov	r0, r6
 2678 004a FFF7FEFF 		bl	move_window
 2679              	.LVL377:
 2680 004e B0BB     		cbnz	r0, .L273
1023:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 2681              		.loc 1 1023 0
 2682 0050 C7F30803 		ubfx	r3, r7, #0, #9
 2683 0054 3344     		add	r3, r3, r6
 2684 0056 93F83400 		ldrb	r0, [r3, #52]	@ zero_extendqisi2
 2685 005a 45EA0020 		orr	r0, r5, r0, lsl #8
 2686              	.LVL378:
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2687              		.loc 1 1024 0
 2688 005e 14F0010F 		tst	r4, #1
 2689 0062 01D0     		beq	.L268
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2690              		.loc 1 1024 0 is_stmt 0 discriminator 1
 2691 0064 0009     		lsrs	r0, r0, #4
 2692              	.LVL379:
 2693 0066 24E0     		b	.L263
 2694              	.LVL380:
 2695              	.L268:
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2696              		.loc 1 1024 0 discriminator 2
 2697 0068 C0F30B00 		ubfx	r0, r0, #0, #12
 2698              	.LVL381:
 2699 006c 21E0     		b	.L263
 2700              	.LVL382:
 2701              	.L265:
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
 2702              		.loc 1 1028 0 is_stmt 1
 2703 006e 716A     		ldr	r1, [r6, #36]
 2704              	.LVL383:
 2705 0070 01EB1421 		add	r1, r1, r4, lsr #8
 2706 0074 3046     		mov	r0, r6
 2707              	.LVL384:
 2708 0076 FFF7FEFF 		bl	move_window
 2709              	.LVL385:
 2710 007a 18BB     		cbnz	r0, .L274
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2711              		.loc 1 1029 0
 2712 007c 06F13400 		add	r0, r6, #52
 2713 0080 6100     		lsls	r1, r4, #1
 2714 0082 01F4FF71 		and	r1, r1, #510
 2715 0086 0844     		add	r0, r0, r1
 2716 0088 FFF7FEFF 		bl	ld_word
 2717              	.LVL386:
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2718              		.loc 1 1030 0
 2719 008c 11E0     		b	.L263
 2720              	.LVL387:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 158


 2721              	.L266:
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
 2722              		.loc 1 1033 0
 2723 008e 716A     		ldr	r1, [r6, #36]
 2724              	.LVL388:
 2725 0090 01EBD411 		add	r1, r1, r4, lsr #7
 2726 0094 3046     		mov	r0, r6
 2727              	.LVL389:
 2728 0096 FFF7FEFF 		bl	move_window
 2729              	.LVL390:
 2730 009a B0B9     		cbnz	r0, .L275
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2731              		.loc 1 1034 0
 2732 009c 3436     		adds	r6, r6, #52
 2733              	.LVL391:
 2734 009e A100     		lsls	r1, r4, #2
 2735 00a0 01F4FE70 		and	r0, r1, #508
 2736 00a4 3044     		add	r0, r0, r6
 2737 00a6 FFF7FEFF 		bl	ld_dword
 2738              	.LVL392:
 2739 00aa 20F07040 		bic	r0, r0, #-268435456
 2740              	.LVL393:
1035:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 2741              		.loc 1 1035 0
 2742 00ae 00E0     		b	.L263
 2743              	.LVL394:
 2744              	.L269:
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2745              		.loc 1 1012 0
 2746 00b0 0120     		movs	r0, #1
 2747              	.LVL395:
 2748              	.L263:
1070:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2749              		.loc 1 1070 0
 2750 00b2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2751              	.LVL396:
 2752              	.L270:
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2753              		.loc 1 1012 0
 2754 00b4 0120     		movs	r0, #1
 2755              	.LVL397:
 2756 00b6 FCE7     		b	.L263
 2757              	.LVL398:
 2758              	.L272:
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2759              		.loc 1 1015 0
 2760 00b8 4FF0FF30 		mov	r0, #-1
 2761 00bc F9E7     		b	.L263
 2762              	.LVL399:
 2763              	.L273:
 2764 00be 4FF0FF30 		mov	r0, #-1
 2765 00c2 F6E7     		b	.L263
 2766              	.LVL400:
 2767              	.L274:
 2768 00c4 4FF0FF30 		mov	r0, #-1
 2769 00c8 F3E7     		b	.L263
 2770              	.L275:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 159


 2771 00ca 4FF0FF30 		mov	r0, #-1
1069:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2772              		.loc 1 1069 0
 2773 00ce F0E7     		b	.L263
 2774              		.cfi_endproc
 2775              	.LFE150:
 2777              		.section	.text.dir_sdi,"ax",%progbits
 2778              		.align	1
 2779              		.syntax unified
 2780              		.thumb
 2781              		.thumb_func
 2782              		.fpu fpv4-sp-d16
 2784              	dir_sdi:
 2785              	.LFB155:
1474:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD csz, clst;
 2786              		.loc 1 1474 0
 2787              		.cfi_startproc
 2788              		@ args = 0, pretend = 0, frame = 0
 2789              		@ frame_needed = 0, uses_anonymous_args = 0
 2790              	.LVL401:
 2791 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2792              	.LCFI31:
 2793              		.cfi_def_cfa_offset 24
 2794              		.cfi_offset 4, -24
 2795              		.cfi_offset 5, -20
 2796              		.cfi_offset 6, -16
 2797              		.cfi_offset 7, -12
 2798              		.cfi_offset 8, -8
 2799              		.cfi_offset 14, -4
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2800              		.loc 1 1476 0
 2801 0004 0768     		ldr	r7, [r0]
 2802              	.LVL402:
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 2803              		.loc 1 1479 0
 2804 0006 B1F5001F 		cmp	r1, #2097152
 2805 000a 3BD2     		bcs	.L286
 2806 000c 0646     		mov	r6, r0
 2807 000e 0D46     		mov	r5, r1
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 2808              		.loc 1 1479 0 is_stmt 0 discriminator 1
 2809 0010 11F01F0F 		tst	r1, #31
 2810 0014 39D1     		bne	.L287
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
 2811              		.loc 1 1482 0 is_stmt 1
 2812 0016 7161     		str	r1, [r6, #20]
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
 2813              		.loc 1 1483 0
 2814 0018 8468     		ldr	r4, [r0, #8]
 2815              	.LVL403:
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
 2816              		.loc 1 1484 0
 2817 001a 1CB9     		cbnz	r4, .L281
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
 2818              		.loc 1 1484 0 is_stmt 0 discriminator 1
 2819 001c 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 2820 001e 022B     		cmp	r3, #2
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 160


 2821 0020 00D9     		bls	.L281
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
 2822              		.loc 1 1485 0 is_stmt 1
 2823 0022 BC6A     		ldr	r4, [r7, #40]
 2824              	.LVL404:
 2825              	.L281:
1489:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
 2826              		.loc 1 1489 0
 2827 0024 94B9     		cbnz	r4, .L282
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
 2828              		.loc 1 1490 0
 2829 0026 3B89     		ldrh	r3, [r7, #8]
 2830 0028 B3EB551F 		cmp	r3, r5, lsr #5
 2831 002c 2FD9     		bls	.L288
1491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2832              		.loc 1 1491 0
 2833 002e BB6A     		ldr	r3, [r7, #40]
 2834 0030 F361     		str	r3, [r6, #28]
 2835              	.LVL405:
 2836              	.L283:
1503:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
 2837              		.loc 1 1503 0
 2838 0032 B461     		str	r4, [r6, #24]
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 2839              		.loc 1 1504 0
 2840 0034 F369     		ldr	r3, [r6, #28]
 2841 0036 93B3     		cbz	r3, .L292
1505:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
 2842              		.loc 1 1505 0
 2843 0038 03EB5523 		add	r3, r3, r5, lsr #9
 2844 003c F361     		str	r3, [r6, #28]
1506:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2845              		.loc 1 1506 0
 2846 003e 3437     		adds	r7, r7, #52
 2847              	.LVL406:
 2848 0040 C5F30805 		ubfx	r5, r5, #0, #9
 2849              	.LVL407:
 2850 0044 3D44     		add	r5, r5, r7
 2851 0046 3562     		str	r5, [r6, #32]
1508:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2852              		.loc 1 1508 0
 2853 0048 0020     		movs	r0, #0
 2854 004a 1CE0     		b	.L280
 2855              	.LVL408:
 2856              	.L282:
1494:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
 2857              		.loc 1 1494 0
 2858 004c B7F80A80 		ldrh	r8, [r7, #10]
 2859 0050 4FEA4828 		lsl	r8, r8, #9
 2860              	.LVL409:
 2861              	.L284:
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 2862              		.loc 1 1495 0
 2863 0054 4545     		cmp	r5, r8
 2864 0056 0FD3     		bcc	.L294
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 2865              		.loc 1 1496 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 161


 2866 0058 2146     		mov	r1, r4
 2867 005a 3046     		mov	r0, r6
 2868 005c FFF7FEFF 		bl	get_fat
 2869              	.LVL410:
 2870 0060 0446     		mov	r4, r0
 2871              	.LVL411:
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 2872              		.loc 1 1497 0
 2873 0062 B0F1FF3F 		cmp	r0, #-1
 2874 0066 14D0     		beq	.L289
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2875              		.loc 1 1498 0
 2876 0068 0128     		cmp	r0, #1
 2877 006a 14D9     		bls	.L290
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2878              		.loc 1 1498 0 is_stmt 0 discriminator 2
 2879 006c BB69     		ldr	r3, [r7, #24]
 2880 006e 8342     		cmp	r3, r0
 2881 0070 13D9     		bls	.L291
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2882              		.loc 1 1499 0 is_stmt 1
 2883 0072 A5EB0805 		sub	r5, r5, r8
 2884              	.LVL412:
 2885 0076 EDE7     		b	.L284
 2886              	.LVL413:
 2887              	.L294:
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2888              		.loc 1 1501 0
 2889 0078 2146     		mov	r1, r4
 2890 007a 3846     		mov	r0, r7
 2891 007c FFF7FEFF 		bl	clust2sect
 2892              	.LVL414:
 2893 0080 F061     		str	r0, [r6, #28]
 2894 0082 D6E7     		b	.L283
 2895              	.LVL415:
 2896              	.L286:
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2897              		.loc 1 1480 0
 2898 0084 0220     		movs	r0, #2
 2899              	.LVL416:
 2900              	.L280:
1509:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2901              		.loc 1 1509 0
 2902 0086 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2903              	.LVL417:
 2904              	.L287:
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2905              		.loc 1 1480 0
 2906 008a 0220     		movs	r0, #2
 2907              	.LVL418:
 2908 008c FBE7     		b	.L280
 2909              	.LVL419:
 2910              	.L288:
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
 2911              		.loc 1 1490 0
 2912 008e 0220     		movs	r0, #2
 2913              	.LVL420:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 162


 2914 0090 F9E7     		b	.L280
 2915              	.LVL421:
 2916              	.L289:
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 2917              		.loc 1 1497 0
 2918 0092 0120     		movs	r0, #1
 2919              	.LVL422:
 2920 0094 F7E7     		b	.L280
 2921              	.LVL423:
 2922              	.L290:
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2923              		.loc 1 1498 0
 2924 0096 0220     		movs	r0, #2
 2925              	.LVL424:
 2926 0098 F5E7     		b	.L280
 2927              	.LVL425:
 2928              	.L291:
 2929 009a 0220     		movs	r0, #2
 2930              	.LVL426:
 2931 009c F3E7     		b	.L280
 2932              	.LVL427:
 2933              	.L292:
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 2934              		.loc 1 1504 0
 2935 009e 0220     		movs	r0, #2
 2936 00a0 F1E7     		b	.L280
 2937              		.cfi_endproc
 2938              	.LFE155:
 2940              		.section	.text.create_chain,"ax",%progbits
 2941              		.align	1
 2942              		.syntax unified
 2943              		.thumb
 2944              		.thumb_func
 2945              		.fpu fpv4-sp-d16
 2947              	create_chain:
 2948              	.LFB153:
1355:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
 2949              		.loc 1 1355 0
 2950              		.cfi_startproc
 2951              		@ args = 0, pretend = 0, frame = 0
 2952              		@ frame_needed = 0, uses_anonymous_args = 0
 2953              	.LVL428:
 2954 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2955              	.LCFI32:
 2956              		.cfi_def_cfa_offset 24
 2957              		.cfi_offset 4, -24
 2958              		.cfi_offset 5, -20
 2959              		.cfi_offset 6, -16
 2960              		.cfi_offset 7, -12
 2961              		.cfi_offset 8, -8
 2962              		.cfi_offset 14, -4
 2963 0004 0746     		mov	r7, r0
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2964              		.loc 1 1358 0
 2965 0006 0668     		ldr	r6, [r0]
 2966              	.LVL429:
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 163


 2967              		.loc 1 1361 0
 2968 0008 8846     		mov	r8, r1
 2969 000a 31B9     		cbnz	r1, .L296
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 2970              		.loc 1 1362 0
 2971 000c 3569     		ldr	r5, [r6, #16]
 2972              	.LVL430:
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2973              		.loc 1 1363 0
 2974 000e 8DB1     		cbz	r5, .L305
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2975              		.loc 1 1363 0 is_stmt 0 discriminator 2
 2976 0010 B369     		ldr	r3, [r6, #24]
 2977 0012 AB42     		cmp	r3, r5
 2978 0014 0FD8     		bhi	.L297
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2979              		.loc 1 1363 0
 2980 0016 0125     		movs	r5, #1
 2981              	.LVL431:
 2982 0018 0DE0     		b	.L297
 2983              	.LVL432:
 2984              	.L296:
1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
 2985              		.loc 1 1366 0 is_stmt 1
 2986 001a FFF7FEFF 		bl	get_fat
 2987              	.LVL433:
 2988 001e 0346     		mov	r3, r0
 2989              	.LVL434:
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 2990              		.loc 1 1367 0
 2991 0020 0128     		cmp	r0, #1
 2992 0022 47D9     		bls	.L307
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 2993              		.loc 1 1368 0
 2994 0024 B0F1FF3F 		cmp	r0, #-1
 2995 0028 49D0     		beq	.L295
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
 2996              		.loc 1 1369 0
 2997 002a B269     		ldr	r2, [r6, #24]
 2998 002c 8242     		cmp	r2, r0
 2999 002e 46D8     		bhi	.L295
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3000              		.loc 1 1370 0
 3001 0030 4546     		mov	r5, r8
 3002 0032 00E0     		b	.L297
 3003              	.LVL435:
 3004              	.L305:
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3005              		.loc 1 1363 0
 3006 0034 0125     		movs	r5, #1
 3007              	.LVL436:
 3008              	.L297:
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
 3009              		.loc 1 1400 0
 3010 0036 2C46     		mov	r4, r5
 3011 0038 0CE0     		b	.L301
 3012              	.LVL437:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 164


 3013              	.L299:
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 0) break;				/* Found a free cluster */
 3014              		.loc 1 1407 0
 3015 003a 2146     		mov	r1, r4
 3016 003c 3846     		mov	r0, r7
 3017 003e FFF7FEFF 		bl	get_fat
 3018              	.LVL438:
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
 3019              		.loc 1 1408 0
 3020 0042 0346     		mov	r3, r0
 3021 0044 70B1     		cbz	r0, .L300
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
 3022              		.loc 1 1409 0
 3023 0046 0128     		cmp	r0, #1
 3024 0048 39D0     		beq	.L295
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
 3025              		.loc 1 1409 0 is_stmt 0 discriminator 2
 3026 004a B0F1FF3F 		cmp	r0, #-1
 3027 004e 36D0     		beq	.L295
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3028              		.loc 1 1410 0 is_stmt 1
 3029 0050 AC42     		cmp	r4, r5
 3030 0052 33D0     		beq	.L312
 3031              	.LVL439:
 3032              	.L301:
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
 3033              		.loc 1 1402 0
 3034 0054 0134     		adds	r4, r4, #1
 3035              	.LVL440:
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = 2;
 3036              		.loc 1 1403 0
 3037 0056 B369     		ldr	r3, [r6, #24]
 3038 0058 A342     		cmp	r3, r4
 3039 005a EED8     		bhi	.L299
 3040              	.LVL441:
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3041              		.loc 1 1405 0
 3042 005c 012D     		cmp	r5, #1
 3043 005e 2BD9     		bls	.L308
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl > scl) return 0;	/* No free cluster */
 3044              		.loc 1 1404 0
 3045 0060 0224     		movs	r4, #2
 3046 0062 EAE7     		b	.L299
 3047              	.LVL442:
 3048              	.L300:
1412:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && clst != 0) {
 3049              		.loc 1 1412 0
 3050 0064 4FF0FF32 		mov	r2, #-1
 3051 0068 2146     		mov	r1, r4
 3052 006a 3046     		mov	r0, r6
 3053              	.LVL443:
 3054 006c FFF7FEFF 		bl	put_fat
 3055              	.LVL444:
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
 3056              		.loc 1 1413 0
 3057 0070 0346     		mov	r3, r0
 3058 0072 10B9     		cbnz	r0, .L302
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 165


1413:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
 3059              		.loc 1 1413 0 is_stmt 0 discriminator 1
 3060 0074 B8F1000F 		cmp	r8, #0
 3061 0078 0ED1     		bne	.L313
 3062              	.LVL445:
 3063              	.L302:
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = ncl;
 3064              		.loc 1 1418 0 is_stmt 1
 3065 007a A3B9     		cbnz	r3, .L303
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 3066              		.loc 1 1419 0
 3067 007c 3461     		str	r4, [r6, #16]
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
 3068              		.loc 1 1420 0
 3069 007e 7269     		ldr	r2, [r6, #20]
 3070 0080 B369     		ldr	r3, [r6, #24]
 3071              	.LVL446:
 3072 0082 023B     		subs	r3, r3, #2
 3073 0084 9A42     		cmp	r2, r3
 3074 0086 01D8     		bhi	.L304
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
 3075              		.loc 1 1420 0 is_stmt 0 discriminator 1
 3076 0088 013A     		subs	r2, r2, #1
 3077 008a 7261     		str	r2, [r6, #20]
 3078              	.L304:
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 3079              		.loc 1 1421 0 is_stmt 1
 3080 008c 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 3081 008e 43F00103 		orr	r3, r3, #1
 3082 0092 3371     		strb	r3, [r6, #4]
 3083 0094 2346     		mov	r3, r4
 3084 0096 12E0     		b	.L295
 3085              	.LVL447:
 3086              	.L313:
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3087              		.loc 1 1414 0
 3088 0098 2246     		mov	r2, r4
 3089 009a 4146     		mov	r1, r8
 3090 009c 3046     		mov	r0, r6
 3091              	.LVL448:
 3092 009e FFF7FEFF 		bl	put_fat
 3093              	.LVL449:
 3094 00a2 0346     		mov	r3, r0
 3095              	.LVL450:
 3096 00a4 E9E7     		b	.L302
 3097              	.L303:
1423:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3098              		.loc 1 1423 0
 3099 00a6 012B     		cmp	r3, #1
 3100 00a8 01D0     		beq	.L314
 3101 00aa 0123     		movs	r3, #1
 3102              	.LVL451:
 3103 00ac 07E0     		b	.L295
 3104              	.LVL452:
 3105              	.L314:
 3106 00ae 4FF0FF33 		mov	r3, #-1
 3107              	.LVL453:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 166


 3108 00b2 04E0     		b	.L295
 3109              	.LVL454:
 3110              	.L307:
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 3111              		.loc 1 1367 0
 3112 00b4 0123     		movs	r3, #1
 3113 00b6 02E0     		b	.L295
 3114              	.LVL455:
 3115              	.L308:
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3116              		.loc 1 1405 0
 3117 00b8 0023     		movs	r3, #0
 3118 00ba 00E0     		b	.L295
 3119              	.LVL456:
 3120              	.L312:
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3121              		.loc 1 1410 0
 3122 00bc 0023     		movs	r3, #0
 3123              	.LVL457:
 3124              	.L295:
1427:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3125              		.loc 1 1427 0
 3126 00be 1846     		mov	r0, r3
 3127 00c0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3128              		.cfi_endproc
 3129              	.LFE153:
 3131              		.section	.text.remove_chain,"ax",%progbits
 3132              		.align	1
 3133              		.syntax unified
 3134              		.thumb
 3135              		.thumb_func
 3136              		.fpu fpv4-sp-d16
 3138              	remove_chain:
 3139              	.LFB152:
1276:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 3140              		.loc 1 1276 0
 3141              		.cfi_startproc
 3142              		@ args = 0, pretend = 0, frame = 0
 3143              		@ frame_needed = 0, uses_anonymous_args = 0
 3144              	.LVL458:
 3145 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3146              	.LCFI33:
 3147              		.cfi_def_cfa_offset 24
 3148              		.cfi_offset 3, -24
 3149              		.cfi_offset 4, -20
 3150              		.cfi_offset 5, -16
 3151              		.cfi_offset 6, -12
 3152              		.cfi_offset 7, -8
 3153              		.cfi_offset 14, -4
 3154 0002 0E46     		mov	r6, r1
 3155              	.LVL459:
1279:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
 3156              		.loc 1 1279 0
 3157 0004 0568     		ldr	r5, [r0]
 3158              	.LVL460:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3159              		.loc 1 1287 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 167


 3160 0006 0129     		cmp	r1, #1
 3161 0008 2ED9     		bls	.L320
 3162 000a 0746     		mov	r7, r0
 3163 000c 1146     		mov	r1, r2
 3164              	.LVL461:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3165              		.loc 1 1287 0 is_stmt 0 discriminator 2
 3166 000e AB69     		ldr	r3, [r5, #24]
 3167 0010 B342     		cmp	r3, r6
 3168 0012 2CD9     		bls	.L321
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
 3169              		.loc 1 1290 0 is_stmt 1
 3170 0014 52B1     		cbz	r2, .L319
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
 3171              		.loc 1 1291 0
 3172 0016 4FF0FF32 		mov	r2, #-1
 3173              	.LVL462:
 3174 001a 2846     		mov	r0, r5
 3175              	.LVL463:
 3176 001c FFF7FEFF 		bl	put_fat
 3177              	.LVL464:
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3178              		.loc 1 1292 0
 3179 0020 8446     		mov	ip, r0
 3180 0022 18B1     		cbz	r0, .L319
 3181 0024 25E0     		b	.L316
 3182              	.LVL465:
 3183              	.L318:
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
 3184              		.loc 1 1327 0
 3185 0026 2646     		mov	r6, r4
1328:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3186              		.loc 1 1328 0
 3187 0028 A242     		cmp	r2, r4
 3188 002a 22D9     		bls	.L316
 3189              	.LVL466:
 3190              	.L319:
1297:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
 3191              		.loc 1 1297 0
 3192 002c 3146     		mov	r1, r6
 3193 002e 3846     		mov	r0, r7
 3194 0030 FFF7FEFF 		bl	get_fat
 3195              	.LVL467:
1298:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
 3196              		.loc 1 1298 0
 3197 0034 0446     		mov	r4, r0
 3198 0036 F0B1     		cbz	r0, .L322
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 3199              		.loc 1 1299 0
 3200 0038 0128     		cmp	r0, #1
 3201 003a 1FD0     		beq	.L323
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3202              		.loc 1 1300 0
 3203 003c B0F1FF3F 		cmp	r0, #-1
 3204 0040 1FD0     		beq	.L324
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
 3205              		.loc 1 1302 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 168


 3206 0042 0022     		movs	r2, #0
 3207 0044 3146     		mov	r1, r6
 3208 0046 2846     		mov	r0, r5
 3209              	.LVL468:
 3210 0048 FFF7FEFF 		bl	put_fat
 3211              	.LVL469:
1303:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3212              		.loc 1 1303 0
 3213 004c 8446     		mov	ip, r0
 3214 004e 80B9     		cbnz	r0, .L316
1305:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst++;
 3215              		.loc 1 1305 0
 3216 0050 6B69     		ldr	r3, [r5, #20]
 3217 0052 AA69     		ldr	r2, [r5, #24]
 3218 0054 911E     		subs	r1, r2, #2
 3219 0056 8B42     		cmp	r3, r1
 3220 0058 E5D2     		bcs	.L318
1306:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
 3221              		.loc 1 1306 0
 3222 005a 0133     		adds	r3, r3, #1
 3223 005c 6B61     		str	r3, [r5, #20]
1307:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3224              		.loc 1 1307 0
 3225 005e 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 3226 0060 43F00103 		orr	r3, r3, #1
 3227 0064 2B71     		strb	r3, [r5, #4]
 3228 0066 DEE7     		b	.L318
 3229              	.LVL470:
 3230              	.L320:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3231              		.loc 1 1287 0
 3232 0068 4FF0020C 		mov	ip, #2
 3233 006c 01E0     		b	.L316
 3234              	.LVL471:
 3235              	.L321:
 3236 006e 4FF0020C 		mov	ip, #2
 3237              	.LVL472:
 3238              	.L316:
1342:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3239              		.loc 1 1342 0
 3240 0072 6046     		mov	r0, ip
 3241 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3242              	.LVL473:
 3243              	.L322:
1341:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3244              		.loc 1 1341 0
 3245 0076 4FF0000C 		mov	ip, #0
 3246 007a FAE7     		b	.L316
 3247              	.L323:
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 3248              		.loc 1 1299 0
 3249 007c 4FF0020C 		mov	ip, #2
 3250 0080 F7E7     		b	.L316
 3251              	.L324:
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3252              		.loc 1 1300 0
 3253 0082 4FF0010C 		mov	ip, #1
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 169


 3254 0086 F4E7     		b	.L316
 3255              		.cfi_endproc
 3256              	.LFE152:
 3258              		.section	.text.dir_remove,"ax",%progbits
 3259              		.align	1
 3260              		.syntax unified
 3261              		.thumb
 3262              		.thumb_func
 3263              		.fpu fpv4-sp-d16
 3265              	dir_remove:
 3266              	.LFB163:
2399:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3267              		.loc 1 2399 0
 3268              		.cfi_startproc
 3269              		@ args = 0, pretend = 0, frame = 0
 3270              		@ frame_needed = 0, uses_anonymous_args = 0
 3271              	.LVL474:
 3272 0000 38B5     		push	{r3, r4, r5, lr}
 3273              	.LCFI34:
 3274              		.cfi_def_cfa_offset 16
 3275              		.cfi_offset 3, -16
 3276              		.cfi_offset 4, -12
 3277              		.cfi_offset 5, -8
 3278              		.cfi_offset 14, -4
 3279 0002 0446     		mov	r4, r0
2401:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3280              		.loc 1 2401 0
 3281 0004 0568     		ldr	r5, [r0]
 3282              	.LVL475:
2424:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3283              		.loc 1 2424 0
 3284 0006 C169     		ldr	r1, [r0, #28]
 3285 0008 2846     		mov	r0, r5
 3286              	.LVL476:
 3287 000a FFF7FEFF 		bl	move_window
 3288              	.LVL477:
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir[DIR_Name] = DDEM;
 3289              		.loc 1 2425 0
 3290 000e 0346     		mov	r3, r0
 3291 0010 20B9     		cbnz	r0, .L327
2426:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
 3292              		.loc 1 2426 0
 3293 0012 226A     		ldr	r2, [r4, #32]
 3294 0014 E521     		movs	r1, #229
 3295 0016 1170     		strb	r1, [r2]
2427:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3296              		.loc 1 2427 0
 3297 0018 0122     		movs	r2, #1
 3298 001a EA70     		strb	r2, [r5, #3]
 3299              	.L327:
2432:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3300              		.loc 1 2432 0
 3301 001c 1846     		mov	r0, r3
 3302              	.LVL478:
 3303 001e 38BD     		pop	{r3, r4, r5, pc}
 3304              		.cfi_endproc
 3305              	.LFE163:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 170


 3307              		.section	.text.dir_next,"ax",%progbits
 3308              		.align	1
 3309              		.syntax unified
 3310              		.thumb
 3311              		.thumb_func
 3312              		.fpu fpv4-sp-d16
 3314              	dir_next:
 3315              	.LFB156:
1523:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs, clst;
 3316              		.loc 1 1523 0
 3317              		.cfi_startproc
 3318              		@ args = 0, pretend = 0, frame = 0
 3319              		@ frame_needed = 0, uses_anonymous_args = 0
 3320              	.LVL479:
 3321 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3322              	.LCFI35:
 3323              		.cfi_def_cfa_offset 32
 3324              		.cfi_offset 3, -32
 3325              		.cfi_offset 4, -28
 3326              		.cfi_offset 5, -24
 3327              		.cfi_offset 6, -20
 3328              		.cfi_offset 7, -16
 3329              		.cfi_offset 8, -12
 3330              		.cfi_offset 9, -8
 3331              		.cfi_offset 14, -4
1525:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 3332              		.loc 1 1525 0
 3333 0004 0668     		ldr	r6, [r0]
 3334              	.LVL480:
1530:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
 3335              		.loc 1 1530 0
 3336 0006 4569     		ldr	r5, [r0, #20]
 3337              	.LVL481:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3338              		.loc 1 1531 0
 3339 0008 C369     		ldr	r3, [r0, #28]
 3340 000a 002B     		cmp	r3, #0
 3341 000c 6ED0     		beq	.L337
 3342 000e 2035     		adds	r5, r5, #32
 3343              	.LVL482:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3344              		.loc 1 1531 0 is_stmt 0 discriminator 2
 3345 0010 B5F5001F 		cmp	r5, #2097152
 3346 0014 6CD2     		bcs	.L338
 3347 0016 8846     		mov	r8, r1
 3348 0018 0446     		mov	r4, r0
1533:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;				/* Next sector */
 3349              		.loc 1 1533 0 is_stmt 1
 3350 001a C5F30807 		ubfx	r7, r5, #0, #9
 3351 001e 3FB9     		cbnz	r7, .L331
1534:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3352              		.loc 1 1534 0
 3353 0020 0133     		adds	r3, r3, #1
 3354 0022 C361     		str	r3, [r0, #28]
1536:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
 3355              		.loc 1 1536 0
 3356 0024 8169     		ldr	r1, [r0, #24]
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 171


 3357              	.LVL483:
 3358 0026 79B9     		cbnz	r1, .L332
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
 3359              		.loc 1 1537 0
 3360 0028 3389     		ldrh	r3, [r6, #8]
 3361 002a B3EB551F 		cmp	r3, r5, lsr #5
 3362 002e 07D9     		bls	.L347
 3363              	.LVL484:
 3364              	.L331:
1574:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
 3365              		.loc 1 1574 0
 3366 0030 6561     		str	r5, [r4, #20]
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3367              		.loc 1 1575 0
 3368 0032 06F13403 		add	r3, r6, #52
 3369 0036 3B44     		add	r3, r3, r7
 3370 0038 2362     		str	r3, [r4, #32]
1577:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3371              		.loc 1 1577 0
 3372 003a 0020     		movs	r0, #0
 3373              	.LVL485:
 3374              	.L330:
1578:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3375              		.loc 1 1578 0
 3376 003c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3377              	.LVL486:
 3378              	.L347:
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3379              		.loc 1 1538 0
 3380 0040 0023     		movs	r3, #0
 3381 0042 C361     		str	r3, [r0, #28]
 3382 0044 0420     		movs	r0, #4
 3383              	.LVL487:
 3384 0046 F9E7     		b	.L330
 3385              	.LVL488:
 3386              	.L332:
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
 3387              		.loc 1 1542 0
 3388 0048 7389     		ldrh	r3, [r6, #10]
 3389 004a 013B     		subs	r3, r3, #1
 3390 004c 13EA5523 		ands	r3, r3, r5, lsr #9
 3391 0050 EED1     		bne	.L331
1543:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
 3392              		.loc 1 1543 0
 3393 0052 FFF7FEFF 		bl	get_fat
 3394              	.LVL489:
 3395 0056 8146     		mov	r9, r0
 3396              	.LVL490:
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 3397              		.loc 1 1544 0
 3398 0058 0128     		cmp	r0, #1
 3399 005a 4BD9     		bls	.L339
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 3400              		.loc 1 1545 0
 3401 005c B0F1FF3F 		cmp	r0, #-1
 3402 0060 4AD0     		beq	.L340
1546:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 172


 3403              		.loc 1 1546 0
 3404 0062 B369     		ldr	r3, [r6, #24]
 3405 0064 8342     		cmp	r3, r0
 3406 0066 39D8     		bhi	.L333
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
 3407              		.loc 1 1548 0
 3408 0068 B8F1000F 		cmp	r8, #0
 3409 006c 11D0     		beq	.L348
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 3410              		.loc 1 1551 0
 3411 006e A169     		ldr	r1, [r4, #24]
 3412 0070 2046     		mov	r0, r4
 3413              	.LVL491:
 3414 0072 FFF7FEFF 		bl	create_chain
 3415              	.LVL492:
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 3416              		.loc 1 1552 0
 3417 0076 8146     		mov	r9, r0
 3418 0078 0028     		cmp	r0, #0
 3419 007a 3FD0     		beq	.L341
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3420              		.loc 1 1553 0
 3421 007c 0128     		cmp	r0, #1
 3422 007e 3FD0     		beq	.L342
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
 3423              		.loc 1 1554 0
 3424 0080 B0F1FF3F 		cmp	r0, #-1
 3425 0084 3ED0     		beq	.L343
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
 3426              		.loc 1 1557 0
 3427 0086 3046     		mov	r0, r6
 3428              	.LVL493:
 3429 0088 FFF7FEFF 		bl	sync_window
 3430              	.LVL494:
 3431 008c 28B1     		cbz	r0, .L349
 3432 008e 0120     		movs	r0, #1
 3433 0090 D4E7     		b	.L330
 3434              	.LVL495:
 3435              	.L348:
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3436              		.loc 1 1549 0
 3437 0092 0023     		movs	r3, #0
 3438 0094 E361     		str	r3, [r4, #28]
 3439 0096 0420     		movs	r0, #4
 3440              	.LVL496:
 3441 0098 D0E7     		b	.L330
 3442              	.L349:
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill t
 3443              		.loc 1 1558 0
 3444 009a 4FF40072 		mov	r2, #512
 3445 009e 0021     		movs	r1, #0
 3446 00a0 06F13400 		add	r0, r6, #52
 3447 00a4 FFF7FEFF 		bl	mem_set
 3448              	.LVL497:
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3449              		.loc 1 1559 0
 3450 00a8 4946     		mov	r1, r9
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 173


 3451 00aa 3046     		mov	r0, r6
 3452 00ac FFF7FEFF 		bl	clust2sect
 3453              	.LVL498:
 3454 00b0 3063     		str	r0, [r6, #48]
 3455 00b2 4FF00008 		mov	r8, #0
 3456              	.LVL499:
 3457              	.L335:
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3458              		.loc 1 1559 0 is_stmt 0 discriminator 1
 3459 00b6 7389     		ldrh	r3, [r6, #10]
 3460 00b8 9845     		cmp	r8, r3
 3461 00ba 0BD2     		bcs	.L350
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
 3462              		.loc 1 1560 0 is_stmt 1
 3463 00bc 0123     		movs	r3, #1
 3464 00be F370     		strb	r3, [r6, #3]
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3465              		.loc 1 1561 0
 3466 00c0 3046     		mov	r0, r6
 3467 00c2 FFF7FEFF 		bl	sync_window
 3468              	.LVL500:
 3469 00c6 F8B9     		cbnz	r0, .L345
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3470              		.loc 1 1559 0 discriminator 2
 3471 00c8 08F10108 		add	r8, r8, #1
 3472              	.LVL501:
 3473 00cc 336B     		ldr	r3, [r6, #48]
 3474 00ce 0133     		adds	r3, r3, #1
 3475 00d0 3363     		str	r3, [r6, #48]
 3476 00d2 F0E7     		b	.L335
 3477              	.L350:
1563:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 3478              		.loc 1 1563 0
 3479 00d4 336B     		ldr	r3, [r6, #48]
 3480 00d6 A3EB0803 		sub	r3, r3, r8
 3481 00da 3363     		str	r3, [r6, #48]
 3482              	.LVL502:
 3483              	.L333:
1569:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(fs, clst);
 3484              		.loc 1 1569 0
 3485 00dc C4F81890 		str	r9, [r4, #24]
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3486              		.loc 1 1570 0
 3487 00e0 4946     		mov	r1, r9
 3488 00e2 3046     		mov	r0, r6
 3489 00e4 FFF7FEFF 		bl	clust2sect
 3490              	.LVL503:
 3491 00e8 E061     		str	r0, [r4, #28]
 3492 00ea A1E7     		b	.L331
 3493              	.LVL504:
 3494              	.L337:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3495              		.loc 1 1531 0
 3496 00ec 0420     		movs	r0, #4
 3497              	.LVL505:
 3498 00ee A5E7     		b	.L330
 3499              	.LVL506:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 174


 3500              	.L338:
 3501 00f0 0420     		movs	r0, #4
 3502              	.LVL507:
 3503 00f2 A3E7     		b	.L330
 3504              	.LVL508:
 3505              	.L339:
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 3506              		.loc 1 1544 0
 3507 00f4 0220     		movs	r0, #2
 3508              	.LVL509:
 3509 00f6 A1E7     		b	.L330
 3510              	.LVL510:
 3511              	.L340:
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 3512              		.loc 1 1545 0
 3513 00f8 0120     		movs	r0, #1
 3514              	.LVL511:
 3515 00fa 9FE7     		b	.L330
 3516              	.LVL512:
 3517              	.L341:
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 3518              		.loc 1 1552 0
 3519 00fc 0720     		movs	r0, #7
 3520              	.LVL513:
 3521 00fe 9DE7     		b	.L330
 3522              	.LVL514:
 3523              	.L342:
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3524              		.loc 1 1553 0
 3525 0100 0220     		movs	r0, #2
 3526              	.LVL515:
 3527 0102 9BE7     		b	.L330
 3528              	.LVL516:
 3529              	.L343:
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
 3530              		.loc 1 1554 0
 3531 0104 0120     		movs	r0, #1
 3532              	.LVL517:
 3533 0106 99E7     		b	.L330
 3534              	.LVL518:
 3535              	.L345:
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3536              		.loc 1 1561 0
 3537 0108 0120     		movs	r0, #1
 3538 010a 97E7     		b	.L330
 3539              		.cfi_endproc
 3540              	.LFE156:
 3542              		.section	.text.dir_find,"ax",%progbits
 3543              		.align	1
 3544              		.syntax unified
 3545              		.thumb
 3546              		.thumb_func
 3547              		.fpu fpv4-sp-d16
 3549              	dir_find:
 3550              	.LFB161:
2213:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3551              		.loc 1 2213 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 175


 3552              		.cfi_startproc
 3553              		@ args = 0, pretend = 0, frame = 0
 3554              		@ frame_needed = 0, uses_anonymous_args = 0
 3555              	.LVL519:
 3556 0000 70B5     		push	{r4, r5, r6, lr}
 3557              	.LCFI36:
 3558              		.cfi_def_cfa_offset 16
 3559              		.cfi_offset 4, -16
 3560              		.cfi_offset 5, -12
 3561              		.cfi_offset 6, -8
 3562              		.cfi_offset 14, -4
 3563 0002 0446     		mov	r4, r0
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c;
 3564              		.loc 1 2215 0
 3565 0004 0668     		ldr	r6, [r0]
 3566              	.LVL520:
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
 3567              		.loc 1 2221 0
 3568 0006 0021     		movs	r1, #0
 3569 0008 FFF7FEFF 		bl	dir_sdi
 3570              	.LVL521:
2222:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 3571              		.loc 1 2222 0
 3572 000c 0546     		mov	r5, r0
 3573 000e 40B1     		cbz	r0, .L354
 3574              	.LVL522:
 3575              	.L352:
2281:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3576              		.loc 1 2281 0
 3577 0010 2846     		mov	r0, r5
 3578 0012 70BD     		pop	{r4, r5, r6, pc}
 3579              	.LVL523:
 3580              	.L353:
2277:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
 3581              		.loc 1 2277 0
 3582 0014 0021     		movs	r1, #0
 3583 0016 2046     		mov	r0, r4
 3584 0018 FFF7FEFF 		bl	dir_next
 3585              	.LVL524:
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3586              		.loc 1 2278 0
 3587 001c 0546     		mov	r5, r0
 3588 001e 0028     		cmp	r0, #0
 3589 0020 F6D1     		bne	.L352
 3590              	.L354:
2248:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3591              		.loc 1 2248 0
 3592 0022 E169     		ldr	r1, [r4, #28]
 3593 0024 3046     		mov	r0, r6
 3594              	.LVL525:
 3595 0026 FFF7FEFF 		bl	move_window
 3596              	.LVL526:
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];
 3597              		.loc 1 2249 0
 3598 002a 0546     		mov	r5, r0
 3599 002c 0028     		cmp	r0, #0
 3600 002e EFD1     		bne	.L352
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 176


2250:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 3601              		.loc 1 2250 0
 3602 0030 206A     		ldr	r0, [r4, #32]
 3603              	.LVL527:
 3604 0032 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 3605              	.LVL528:
2251:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3606              		.loc 1 2251 0
 3607 0034 7BB1     		cbz	r3, .L355
2274:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
 3608              		.loc 1 2274 0
 3609 0036 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 3610              	.LVL529:
 3611 0038 03F03F03 		and	r3, r3, #63
 3612 003c A371     		strb	r3, [r4, #6]
 3613              	.LVL530:
2275:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3614              		.loc 1 2275 0
 3615 003e C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 3616 0040 13F0080F 		tst	r3, #8
 3617 0044 E6D1     		bne	.L353
2275:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3618              		.loc 1 2275 0 is_stmt 0 discriminator 1
 3619 0046 0B22     		movs	r2, #11
 3620 0048 04F12401 		add	r1, r4, #36
 3621 004c FFF7FEFF 		bl	mem_cmp
 3622              	.LVL531:
 3623 0050 0028     		cmp	r0, #0
 3624 0052 DFD1     		bne	.L353
 3625 0054 DCE7     		b	.L352
 3626              	.LVL532:
 3627              	.L355:
2251:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3628              		.loc 1 2251 0 is_stmt 1
 3629 0056 0425     		movs	r5, #4
 3630 0058 DAE7     		b	.L352
 3631              		.cfi_endproc
 3632              	.LFE161:
 3634              		.section	.text.follow_path,"ax",%progbits
 3635              		.align	1
 3636              		.syntax unified
 3637              		.thumb
 3638              		.thumb_func
 3639              		.fpu fpv4-sp-d16
 3641              	follow_path:
 3642              	.LFB166:
2817:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3643              		.loc 1 2817 0
 3644              		.cfi_startproc
 3645              		@ args = 0, pretend = 0, frame = 8
 3646              		@ frame_needed = 0, uses_anonymous_args = 0
 3647              	.LVL533:
 3648 0000 30B5     		push	{r4, r5, lr}
 3649              	.LCFI37:
 3650              		.cfi_def_cfa_offset 12
 3651              		.cfi_offset 4, -12
 3652              		.cfi_offset 5, -8
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 177


 3653              		.cfi_offset 14, -4
 3654 0002 83B0     		sub	sp, sp, #12
 3655              	.LCFI38:
 3656              		.cfi_def_cfa_offset 24
 3657 0004 0446     		mov	r4, r0
 3658 0006 0191     		str	r1, [sp, #4]
 3659              	.LVL534:
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3660              		.loc 1 2821 0
 3661 0008 0568     		ldr	r5, [r0]
 3662              	.LVL535:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3663              		.loc 1 2830 0
 3664 000a 01E0     		b	.L358
 3665              	.L359:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3666              		.loc 1 2830 0 is_stmt 0 discriminator 4
 3667 000c 0133     		adds	r3, r3, #1
 3668 000e 0193     		str	r3, [sp, #4]
 3669              	.L358:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3670              		.loc 1 2830 0 discriminator 1
 3671 0010 019B     		ldr	r3, [sp, #4]
 3672 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3673 0014 2F2A     		cmp	r2, #47
 3674 0016 F9D0     		beq	.L359
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3675              		.loc 1 2830 0 discriminator 3
 3676 0018 5C2A     		cmp	r2, #92
 3677 001a F7D0     		beq	.L359
2831:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3678              		.loc 1 2831 0 is_stmt 1
 3679 001c 0022     		movs	r2, #0
 3680 001e A260     		str	r2, [r4, #8]
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
 3681              		.loc 1 2850 0
 3682 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3683 0022 1F2B     		cmp	r3, #31
 3684 0024 1ED9     		bls	.L366
 3685              	.LVL536:
 3686              	.L360:
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3687              		.loc 1 2856 0
 3688 0026 01A9     		add	r1, sp, #4
 3689 0028 2046     		mov	r0, r4
 3690 002a FFF7FEFF 		bl	create_name
 3691              	.LVL537:
2857:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
 3692              		.loc 1 2857 0
 3693 002e 0346     		mov	r3, r0
 3694 0030 00BB     		cbnz	r0, .L361
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
 3695              		.loc 1 2858 0
 3696 0032 2046     		mov	r0, r4
 3697              	.LVL538:
 3698 0034 FFF7FEFF 		bl	dir_find
 3699              	.LVL539:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 178


2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
 3700              		.loc 1 2859 0
 3701 0038 94F82F20 		ldrb	r2, [r4, #47]	@ zero_extendqisi2
 3702              	.LVL540:
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
 3703              		.loc 1 2860 0
 3704 003c 0346     		mov	r3, r0
 3705 003e E0B9     		cbnz	r0, .L367
2872:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get into the sub-directory */
 3706              		.loc 1 2872 0
 3707 0040 12F0040F 		tst	r2, #4
 3708 0044 16D1     		bne	.L361
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
 3709              		.loc 1 2874 0
 3710 0046 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 3711 0048 13F0100F 		tst	r3, #16
 3712 004c 1CD0     		beq	.L364
2888:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3713              		.loc 1 2888 0
 3714 004e 05F13401 		add	r1, r5, #52
 3715 0052 6369     		ldr	r3, [r4, #20]
 3716 0054 C3F30803 		ubfx	r3, r3, #0, #9
 3717 0058 1944     		add	r1, r1, r3
 3718 005a 2846     		mov	r0, r5
 3719              	.LVL541:
 3720 005c FFF7FEFF 		bl	ld_clust
 3721              	.LVL542:
 3722 0060 A060     		str	r0, [r4, #8]
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3723              		.loc 1 2856 0
 3724 0062 E0E7     		b	.L360
 3725              	.LVL543:
 3726              	.L366:
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
 3727              		.loc 1 2851 0
 3728 0064 8023     		movs	r3, #128
 3729 0066 84F82F30 		strb	r3, [r4, #47]
2852:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3730              		.loc 1 2852 0
 3731 006a 1146     		mov	r1, r2
 3732              	.LVL544:
 3733 006c 2046     		mov	r0, r4
 3734              	.LVL545:
 3735 006e FFF7FEFF 		bl	dir_sdi
 3736              	.LVL546:
 3737 0072 0346     		mov	r3, r0
 3738              	.LVL547:
 3739              	.L361:
2894:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3740              		.loc 1 2894 0
 3741 0074 1846     		mov	r0, r3
 3742 0076 03B0     		add	sp, sp, #12
 3743              	.LCFI39:
 3744              		.cfi_remember_state
 3745              		.cfi_def_cfa_offset 12
 3746              		@ sp needed
 3747 0078 30BD     		pop	{r4, r5, pc}
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 179


 3748              	.LVL548:
 3749              	.L367:
 3750              	.LCFI40:
 3751              		.cfi_restore_state
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
 3752              		.loc 1 2861 0
 3753 007a 0428     		cmp	r0, #4
 3754 007c FAD1     		bne	.L361
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3755              		.loc 1 2867 0
 3756 007e 12F0040F 		tst	r2, #4
 3757 0082 F7D1     		bne	.L361
 3758 0084 0523     		movs	r3, #5
 3759 0086 F5E7     		b	.L361
 3760              	.L364:
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3761              		.loc 1 2875 0
 3762 0088 0523     		movs	r3, #5
 3763 008a F3E7     		b	.L361
 3764              		.cfi_endproc
 3765              	.LFE166:
 3767              		.section	.text.dir_alloc,"ax",%progbits
 3768              		.align	1
 3769              		.syntax unified
 3770              		.thumb
 3771              		.thumb_func
 3772              		.fpu fpv4-sp-d16
 3774              	dir_alloc:
 3775              	.LFB157:
1593:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3776              		.loc 1 1593 0
 3777              		.cfi_startproc
 3778              		@ args = 0, pretend = 0, frame = 0
 3779              		@ frame_needed = 0, uses_anonymous_args = 0
 3780              	.LVL549:
 3781 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3782              	.LCFI41:
 3783              		.cfi_def_cfa_offset 24
 3784              		.cfi_offset 3, -24
 3785              		.cfi_offset 4, -20
 3786              		.cfi_offset 5, -16
 3787              		.cfi_offset 6, -12
 3788              		.cfi_offset 7, -8
 3789              		.cfi_offset 14, -4
 3790 0002 0446     		mov	r4, r0
 3791 0004 0F46     		mov	r7, r1
1596:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3792              		.loc 1 1596 0
 3793 0006 0668     		ldr	r6, [r0]
 3794              	.LVL550:
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3795              		.loc 1 1599 0
 3796 0008 0021     		movs	r1, #0
 3797              	.LVL551:
 3798 000a FFF7FEFF 		bl	dir_sdi
 3799              	.LVL552:
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 180


 3800              		.loc 1 1600 0
 3801 000e 0346     		mov	r3, r0
 3802 0010 C0B9     		cbnz	r0, .L369
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 3803              		.loc 1 1601 0
 3804 0012 0025     		movs	r5, #0
 3805 0014 08E0     		b	.L372
 3806              	.LVL553:
 3807              	.L370:
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 3808              		.loc 1 1610 0
 3809 0016 0135     		adds	r5, r5, #1
 3810              	.LVL554:
 3811 0018 BD42     		cmp	r5, r7
 3812 001a 13D0     		beq	.L369
 3813              	.LVL555:
 3814              	.L371:
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
 3815              		.loc 1 1614 0
 3816 001c 0121     		movs	r1, #1
 3817 001e 2046     		mov	r0, r4
 3818              	.LVL556:
 3819 0020 FFF7FEFF 		bl	dir_next
 3820              	.LVL557:
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3821              		.loc 1 1615 0
 3822 0024 0346     		mov	r3, r0
 3823 0026 68B9     		cbnz	r0, .L369
 3824              	.LVL558:
 3825              	.L372:
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3826              		.loc 1 1603 0
 3827 0028 E169     		ldr	r1, [r4, #28]
 3828 002a 3046     		mov	r0, r6
 3829              	.LVL559:
 3830 002c FFF7FEFF 		bl	move_window
 3831              	.LVL560:
1604:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 3832              		.loc 1 1604 0
 3833 0030 0346     		mov	r3, r0
 3834 0032 38B9     		cbnz	r0, .L369
1608:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3835              		.loc 1 1608 0
 3836 0034 226A     		ldr	r2, [r4, #32]
 3837 0036 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3838 0038 E52A     		cmp	r2, #229
 3839 003a ECD0     		beq	.L370
1608:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3840              		.loc 1 1608 0 is_stmt 0 discriminator 1
 3841 003c 002A     		cmp	r2, #0
 3842 003e EAD0     		beq	.L370
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3843              		.loc 1 1612 0 is_stmt 1
 3844 0040 0025     		movs	r5, #0
 3845              	.LVL561:
 3846 0042 EBE7     		b	.L371
 3847              	.L369:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 181


 3848              	.LVL562:
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3849              		.loc 1 1618 0
 3850 0044 042B     		cmp	r3, #4
 3851 0046 01D0     		beq	.L377
 3852              	.LVL563:
 3853              	.L373:
1620:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3854              		.loc 1 1620 0
 3855 0048 1846     		mov	r0, r3
 3856 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3857              	.LVL564:
 3858              	.L377:
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3859              		.loc 1 1618 0
 3860 004c 0723     		movs	r3, #7
 3861              	.LVL565:
 3862 004e FBE7     		b	.L373
 3863              		.cfi_endproc
 3864              	.LFE157:
 3866              		.section	.text.dir_register,"ax",%progbits
 3867              		.align	1
 3868              		.syntax unified
 3869              		.thumb
 3870              		.thumb_func
 3871              		.fpu fpv4-sp-d16
 3873              	dir_register:
 3874              	.LFB162:
2295:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3875              		.loc 1 2295 0
 3876              		.cfi_startproc
 3877              		@ args = 0, pretend = 0, frame = 0
 3878              		@ frame_needed = 0, uses_anonymous_args = 0
 3879              	.LVL566:
 3880 0000 70B5     		push	{r4, r5, r6, lr}
 3881              	.LCFI42:
 3882              		.cfi_def_cfa_offset 16
 3883              		.cfi_offset 4, -16
 3884              		.cfi_offset 5, -12
 3885              		.cfi_offset 6, -8
 3886              		.cfi_offset 14, -4
 3887 0002 0446     		mov	r4, r0
2297:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3888              		.loc 1 2297 0
 3889 0004 0668     		ldr	r6, [r0]
 3890              	.LVL567:
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3891              		.loc 1 2366 0
 3892 0006 0121     		movs	r1, #1
 3893 0008 FFF7FEFF 		bl	dir_alloc
 3894              	.LVL568:
2371:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3895              		.loc 1 2371 0
 3896 000c 0546     		mov	r5, r0
 3897 000e 08B1     		cbz	r0, .L381
 3898              	.LVL569:
 3899              	.L379:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 182


2384:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3900              		.loc 1 2384 0
 3901 0010 2846     		mov	r0, r5
 3902 0012 70BD     		pop	{r4, r5, r6, pc}
 3903              	.LVL570:
 3904              	.L381:
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 3905              		.loc 1 2372 0
 3906 0014 E169     		ldr	r1, [r4, #28]
 3907 0016 3046     		mov	r0, r6
 3908              	.LVL571:
 3909 0018 FFF7FEFF 		bl	move_window
 3910              	.LVL572:
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
 3911              		.loc 1 2373 0
 3912 001c 0546     		mov	r5, r0
 3913 001e 0028     		cmp	r0, #0
 3914 0020 F6D1     		bne	.L379
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
 3915              		.loc 1 2374 0
 3916 0022 2022     		movs	r2, #32
 3917 0024 0021     		movs	r1, #0
 3918 0026 206A     		ldr	r0, [r4, #32]
 3919              	.LVL573:
 3920 0028 FFF7FEFF 		bl	mem_set
 3921              	.LVL574:
2375:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
 3922              		.loc 1 2375 0
 3923 002c 0B22     		movs	r2, #11
 3924 002e 04F12401 		add	r1, r4, #36
 3925 0032 206A     		ldr	r0, [r4, #32]
 3926 0034 FFF7FEFF 		bl	mem_cpy
 3927              	.LVL575:
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3928              		.loc 1 2379 0
 3929 0038 0123     		movs	r3, #1
 3930 003a F370     		strb	r3, [r6, #3]
 3931 003c E8E7     		b	.L379
 3932              		.cfi_endproc
 3933              	.LFE162:
 3935              		.section	.text.dir_read,"ax",%progbits
 3936              		.align	1
 3937              		.syntax unified
 3938              		.thumb
 3939              		.thumb_func
 3940              		.fpu fpv4-sp-d16
 3942              	dir_read:
 3943              	.LFB160:
2135:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_NO_FILE;
 3944              		.loc 1 2135 0
 3945              		.cfi_startproc
 3946              		@ args = 0, pretend = 0, frame = 0
 3947              		@ frame_needed = 0, uses_anonymous_args = 0
 3948              	.LVL576:
 3949 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3950              	.LCFI43:
 3951              		.cfi_def_cfa_offset 24
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 183


 3952              		.cfi_offset 3, -24
 3953              		.cfi_offset 4, -20
 3954              		.cfi_offset 5, -16
 3955              		.cfi_offset 6, -12
 3956              		.cfi_offset 7, -8
 3957              		.cfi_offset 14, -4
 3958 0002 0446     		mov	r4, r0
 3959 0004 0E46     		mov	r6, r1
 3960              	.LVL577:
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c;
 3961              		.loc 1 2137 0
 3962 0006 0568     		ldr	r5, [r0]
 3963              	.LVL578:
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
 3964              		.loc 1 2136 0
 3965 0008 0427     		movs	r7, #4
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3966              		.loc 1 2143 0
 3967 000a 05E0     		b	.L383
 3968              	.LVL579:
 3969              	.L385:
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3970              		.loc 1 2193 0
 3971 000c 0021     		movs	r1, #0
 3972 000e 2046     		mov	r0, r4
 3973              	.LVL580:
 3974 0010 FFF7FEFF 		bl	dir_next
 3975              	.LVL581:
2194:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3976              		.loc 1 2194 0
 3977 0014 0746     		mov	r7, r0
 3978 0016 E8B9     		cbnz	r0, .L384
 3979              	.LVL582:
 3980              	.L383:
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3981              		.loc 1 2143 0
 3982 0018 E169     		ldr	r1, [r4, #28]
 3983 001a D9B1     		cbz	r1, .L384
2144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3984              		.loc 1 2144 0
 3985 001c 2846     		mov	r0, r5
 3986 001e FFF7FEFF 		bl	move_window
 3987              	.LVL583:
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
 3988              		.loc 1 2145 0
 3989 0022 0746     		mov	r7, r0
 3990 0024 B0B9     		cbnz	r0, .L384
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) {
 3991              		.loc 1 2146 0
 3992 0026 236A     		ldr	r3, [r4, #32]
 3993 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3994              	.LVL584:
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
 3995              		.loc 1 2147 0
 3996 002a 92B1     		cbz	r2, .L388
2167:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3997              		.loc 1 2167 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 184


 3998 002c DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 3999 002e 03F03F03 		and	r3, r3, #63
 4000              	.LVL585:
 4001 0032 A371     		strb	r3, [r4, #6]
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 4002              		.loc 1 2188 0
 4003 0034 E52A     		cmp	r2, #229
 4004 0036 E9D0     		beq	.L385
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 4005              		.loc 1 2188 0 is_stmt 0 discriminator 1
 4006 0038 2E2A     		cmp	r2, #46
 4007 003a E7D0     		beq	.L385
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 4008              		.loc 1 2188 0 discriminator 2
 4009 003c 0F2B     		cmp	r3, #15
 4010 003e E5D0     		beq	.L385
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 4011              		.loc 1 2188 0 discriminator 3
 4012 0040 23F02003 		bic	r3, r3, #32
 4013              	.LVL586:
 4014 0044 082B     		cmp	r3, #8
 4015 0046 14BF     		ite	ne
 4016 0048 0023     		movne	r3, #0
 4017 004a 0123     		moveq	r3, #1
 4018 004c B342     		cmp	r3, r6
 4019 004e DDD1     		bne	.L385
 4020 0050 00E0     		b	.L384
 4021              	.LVL587:
 4022              	.L388:
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4023              		.loc 1 2148 0 is_stmt 1
 4024 0052 0427     		movs	r7, #4
 4025              	.LVL588:
 4026              	.L384:
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 4027              		.loc 1 2197 0
 4028 0054 0FB1     		cbz	r7, .L387
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 4029              		.loc 1 2197 0 is_stmt 0 discriminator 1
 4030 0056 0023     		movs	r3, #0
 4031 0058 E361     		str	r3, [r4, #28]
 4032              	.L387:
2199:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4033              		.loc 1 2199 0 is_stmt 1
 4034 005a 3846     		mov	r0, r7
 4035 005c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4036              		.cfi_endproc
 4037              	.LFE160:
 4039              		.section	.text.unlock_fs,"ax",%progbits
 4040              		.align	1
 4041              		.syntax unified
 4042              		.thumb
 4043              		.thumb_func
 4044              		.fpu fpv4-sp-d16
 4046              	unlock_fs:
 4047              	.LFB140:
 755:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 185


 4048              		.loc 1 755 0
 4049              		.cfi_startproc
 4050              		@ args = 0, pretend = 0, frame = 0
 4051              		@ frame_needed = 0, uses_anonymous_args = 0
 4052              	.LVL589:
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 4053              		.loc 1 756 0
 4054 0000 50B1     		cbz	r0, .L393
 755:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
 4055              		.loc 1 755 0 discriminator 1
 4056 0002 08B5     		push	{r3, lr}
 4057              	.LCFI44:
 4058              		.cfi_def_cfa_offset 8
 4059              		.cfi_offset 3, -8
 4060              		.cfi_offset 14, -4
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 4061              		.loc 1 756 0 discriminator 1
 4062 0004 0C29     		cmp	r1, #12
 4063 0006 06D0     		beq	.L390
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 4064              		.loc 1 756 0 is_stmt 0 discriminator 2
 4065 0008 0B29     		cmp	r1, #11
 4066 000a 04D0     		beq	.L390
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 4067              		.loc 1 756 0 discriminator 3
 4068 000c 0F29     		cmp	r1, #15
 4069 000e 02D0     		beq	.L390
 757:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4070              		.loc 1 757 0 is_stmt 1
 4071 0010 C068     		ldr	r0, [r0, #12]
 4072              	.LVL590:
 4073 0012 FFF7FEFF 		bl	ff_rel_grant
 4074              	.LVL591:
 4075              	.L390:
 759:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4076              		.loc 1 759 0
 4077 0016 08BD     		pop	{r3, pc}
 4078              	.LVL592:
 4079              	.L393:
 4080              	.LCFI45:
 4081              		.cfi_def_cfa_offset 0
 4082              		.cfi_restore 3
 4083              		.cfi_restore 14
 4084 0018 7047     		bx	lr
 4085              		.cfi_endproc
 4086              	.LFE140:
 4088              		.section	.text.sync_fs,"ax",%progbits
 4089              		.align	1
 4090              		.syntax unified
 4091              		.thumb
 4092              		.thumb_func
 4093              		.fpu fpv4-sp-d16
 4095              	sync_fs:
 4096              	.LFB148:
 947:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4097              		.loc 1 947 0
 4098              		.cfi_startproc
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 186


 4099              		@ args = 0, pretend = 0, frame = 0
 4100              		@ frame_needed = 0, uses_anonymous_args = 0
 4101              	.LVL593:
 4102 0000 70B5     		push	{r4, r5, r6, lr}
 4103              	.LCFI46:
 4104              		.cfi_def_cfa_offset 16
 4105              		.cfi_offset 4, -16
 4106              		.cfi_offset 5, -12
 4107              		.cfi_offset 6, -8
 4108              		.cfi_offset 14, -4
 4109 0002 0446     		mov	r4, r0
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 4110              		.loc 1 951 0
 4111 0004 FFF7FEFF 		bl	sync_window
 4112              	.LVL594:
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSInfo sector if needed */
 4113              		.loc 1 952 0
 4114 0008 0546     		mov	r5, r0
 4115 000a 48B9     		cbnz	r0, .L397
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 4116              		.loc 1 954 0
 4117 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4118 000e 032B     		cmp	r3, #3
 4119 0010 08D0     		beq	.L401
 4120              	.LVL595:
 4121              	.L398:
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4122              		.loc 1 968 0
 4123 0012 0022     		movs	r2, #0
 4124 0014 1146     		mov	r1, r2
 4125 0016 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 4126 0018 FFF7FEFF 		bl	disk_ioctl
 4127              	.LVL596:
 4128 001c 00B1     		cbz	r0, .L397
 4129 001e 0125     		movs	r5, #1
 4130              	.L397:
 4131              	.LVL597:
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4132              		.loc 1 972 0
 4133 0020 2846     		mov	r0, r5
 4134 0022 70BD     		pop	{r4, r5, r6, pc}
 4135              	.LVL598:
 4136              	.L401:
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 4137              		.loc 1 954 0 discriminator 1
 4138 0024 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 4139 0026 012B     		cmp	r3, #1
 4140 0028 F3D1     		bne	.L398
 956:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 4141              		.loc 1 956 0
 4142 002a 04F13406 		add	r6, r4, #52
 4143 002e 4FF40072 		mov	r2, #512
 4144 0032 0021     		movs	r1, #0
 4145 0034 3046     		mov	r0, r6
 4146              	.LVL599:
 4147 0036 FFF7FEFF 		bl	mem_set
 4148              	.LVL600:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 187


 957:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 4149              		.loc 1 957 0
 4150 003a 4AF65521 		movw	r1, #43605
 4151 003e 04F23220 		addw	r0, r4, #562
 4152 0042 FFF7FEFF 		bl	st_word
 4153              	.LVL601:
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 4154              		.loc 1 958 0
 4155 0046 0F49     		ldr	r1, .L402
 4156 0048 3046     		mov	r0, r6
 4157 004a FFF7FEFF 		bl	st_dword
 4158              	.LVL602:
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 4159              		.loc 1 959 0
 4160 004e 0E49     		ldr	r1, .L402+4
 4161 0050 04F50670 		add	r0, r4, #536
 4162 0054 FFF7FEFF 		bl	st_dword
 4163              	.LVL603:
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 4164              		.loc 1 960 0
 4165 0058 6169     		ldr	r1, [r4, #20]
 4166 005a 04F50770 		add	r0, r4, #540
 4167 005e FFF7FEFF 		bl	st_dword
 4168              	.LVL604:
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSInfo sector */
 4169              		.loc 1 961 0
 4170 0062 2169     		ldr	r1, [r4, #16]
 4171 0064 04F50870 		add	r0, r4, #544
 4172 0068 FFF7FEFF 		bl	st_dword
 4173              	.LVL605:
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 4174              		.loc 1 963 0
 4175 006c 226A     		ldr	r2, [r4, #32]
 4176 006e 0132     		adds	r2, r2, #1
 4177 0070 2263     		str	r2, [r4, #48]
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 4178              		.loc 1 964 0
 4179 0072 0123     		movs	r3, #1
 4180 0074 3146     		mov	r1, r6
 4181 0076 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 4182 0078 FFF7FEFF 		bl	disk_write
 4183              	.LVL606:
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4184              		.loc 1 965 0
 4185 007c 0023     		movs	r3, #0
 4186 007e 2371     		strb	r3, [r4, #4]
 4187 0080 C7E7     		b	.L398
 4188              	.L403:
 4189 0082 00BF     		.align	2
 4190              	.L402:
 4191 0084 52526141 		.word	1096897106
 4192 0088 72724161 		.word	1631679090
 4193              		.cfi_endproc
 4194              	.LFE148:
 4196              		.section	.text.f_mount,"ax",%progbits
 4197              		.align	1
 4198              		.global	f_mount
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 188


 4199              		.syntax unified
 4200              		.thumb
 4201              		.thumb_func
 4202              		.fpu fpv4-sp-d16
 4204              	f_mount:
 4205              	.LFB171:
3254:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
 4206              		.loc 1 3254 0
 4207              		.cfi_startproc
 4208              		@ args = 0, pretend = 0, frame = 16
 4209              		@ frame_needed = 0, uses_anonymous_args = 0
 4210              	.LVL607:
 4211 0000 70B5     		push	{r4, r5, r6, lr}
 4212              	.LCFI47:
 4213              		.cfi_def_cfa_offset 16
 4214              		.cfi_offset 4, -16
 4215              		.cfi_offset 5, -12
 4216              		.cfi_offset 6, -8
 4217              		.cfi_offset 14, -4
 4218 0002 84B0     		sub	sp, sp, #16
 4219              	.LCFI48:
 4220              		.cfi_def_cfa_offset 32
 4221 0004 0190     		str	r0, [sp, #4]
 4222 0006 0091     		str	r1, [sp]
 4223 0008 1646     		mov	r6, r2
3258:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4224              		.loc 1 3258 0
 4225 000a 04A8     		add	r0, sp, #16
 4226              	.LVL608:
 4227 000c 40F8041D 		str	r1, [r0, #-4]!
3262:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 4228              		.loc 1 3262 0
 4229 0010 FFF7FEFF 		bl	get_ldnumber
 4230              	.LVL609:
3263:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 4231              		.loc 1 3263 0
 4232 0014 051E     		subs	r5, r0, #0
 4233 0016 2CDB     		blt	.L408
3264:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4234              		.loc 1 3264 0
 4235 0018 1A4B     		ldr	r3, .L415
 4236 001a 53F82540 		ldr	r4, [r3, r5, lsl #2]
 4237              	.LVL610:
3266:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 4238              		.loc 1 3266 0
 4239 001e 44B1     		cbz	r4, .L406
3268:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4240              		.loc 1 3268 0
 4241 0020 2046     		mov	r0, r4
 4242              	.LVL611:
 4243 0022 FFF7FEFF 		bl	clear_lock
 4244              	.LVL612:
3271:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4245              		.loc 1 3271 0
 4246 0026 E068     		ldr	r0, [r4, #12]
 4247 0028 FFF7FEFF 		bl	ff_del_syncobj
 4248              	.LVL613:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 189


 4249 002c 18B3     		cbz	r0, .L409
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4250              		.loc 1 3273 0
 4251 002e 0023     		movs	r3, #0
 4252 0030 2370     		strb	r3, [r4]
 4253              	.L406:
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
 4254              		.loc 1 3276 0
 4255 0032 019B     		ldr	r3, [sp, #4]
 4256 0034 3BB1     		cbz	r3, .L407
3277:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
 4257              		.loc 1 3277 0
 4258 0036 0022     		movs	r2, #0
 4259 0038 1A70     		strb	r2, [r3]
3279:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4260              		.loc 1 3279 0
 4261 003a 0199     		ldr	r1, [sp, #4]
 4262 003c 0C31     		adds	r1, r1, #12
 4263 003e E8B2     		uxtb	r0, r5
 4264 0040 FFF7FEFF 		bl	ff_cre_syncobj
 4265              	.LVL614:
 4266 0044 C8B1     		cbz	r0, .L410
 4267              	.L407:
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4268              		.loc 1 3282 0
 4269 0046 019B     		ldr	r3, [sp, #4]
 4270 0048 0E4A     		ldr	r2, .L415
 4271 004a 42F82530 		str	r3, [r2, r5, lsl #2]
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4272              		.loc 1 3284 0
 4273 004e B3B1     		cbz	r3, .L411
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4274              		.loc 1 3284 0 is_stmt 0 discriminator 2
 4275 0050 012E     		cmp	r6, #1
 4276 0052 03D0     		beq	.L414
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4277              		.loc 1 3284 0
 4278 0054 0024     		movs	r4, #0
 4279              	.LVL615:
 4280              	.L405:
3288:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4281              		.loc 1 3288 0 is_stmt 1
 4282 0056 2046     		mov	r0, r4
 4283 0058 04B0     		add	sp, sp, #16
 4284              	.LCFI49:
 4285              		.cfi_remember_state
 4286              		.cfi_def_cfa_offset 16
 4287              		@ sp needed
 4288 005a 70BD     		pop	{r4, r5, r6, pc}
 4289              	.LVL616:
 4290              	.L414:
 4291              	.LCFI50:
 4292              		.cfi_restore_state
3286:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
 4293              		.loc 1 3286 0
 4294 005c 0022     		movs	r2, #0
 4295 005e 01A9     		add	r1, sp, #4
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 190


 4296 0060 6846     		mov	r0, sp
 4297 0062 FFF7FEFF 		bl	find_volume
 4298              	.LVL617:
 4299 0066 0446     		mov	r4, r0
 4300              	.LVL618:
3287:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4301              		.loc 1 3287 0
 4302 0068 0146     		mov	r1, r0
 4303 006a 0198     		ldr	r0, [sp, #4]
 4304              	.LVL619:
 4305 006c FFF7FEFF 		bl	unlock_fs
 4306              	.LVL620:
 4307 0070 F1E7     		b	.L405
 4308              	.LVL621:
 4309              	.L408:
3263:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 4310              		.loc 1 3263 0
 4311 0072 0B24     		movs	r4, #11
 4312 0074 EFE7     		b	.L405
 4313              	.LVL622:
 4314              	.L409:
3271:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4315              		.loc 1 3271 0
 4316 0076 0224     		movs	r4, #2
 4317              	.LVL623:
 4318 0078 EDE7     		b	.L405
 4319              	.LVL624:
 4320              	.L410:
3279:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4321              		.loc 1 3279 0
 4322 007a 0224     		movs	r4, #2
 4323              	.LVL625:
 4324 007c EBE7     		b	.L405
 4325              	.LVL626:
 4326              	.L411:
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4327              		.loc 1 3284 0
 4328 007e 0024     		movs	r4, #0
 4329              	.LVL627:
 4330 0080 E9E7     		b	.L405
 4331              	.L416:
 4332 0082 00BF     		.align	2
 4333              	.L415:
 4334 0084 00000000 		.word	.LANCHOR2
 4335              		.cfi_endproc
 4336              	.LFE171:
 4338              		.section	.text.f_open,"ax",%progbits
 4339              		.align	1
 4340              		.global	f_open
 4341              		.syntax unified
 4342              		.thumb
 4343              		.thumb_func
 4344              		.fpu fpv4-sp-d16
 4346              	f_open:
 4347              	.LFB172:
3302:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4348              		.loc 1 3302 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 191


 4349              		.cfi_startproc
 4350              		@ args = 0, pretend = 0, frame = 64
 4351              		@ frame_needed = 0, uses_anonymous_args = 0
 4352              	.LVL628:
 4353 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4354              	.LCFI51:
 4355              		.cfi_def_cfa_offset 28
 4356              		.cfi_offset 4, -28
 4357              		.cfi_offset 5, -24
 4358              		.cfi_offset 6, -20
 4359              		.cfi_offset 7, -16
 4360              		.cfi_offset 8, -12
 4361              		.cfi_offset 9, -8
 4362              		.cfi_offset 14, -4
 4363 0004 91B0     		sub	sp, sp, #68
 4364              	.LCFI52:
 4365              		.cfi_def_cfa_offset 96
 4366 0006 0191     		str	r1, [sp, #4]
3313:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4367              		.loc 1 3313 0
 4368 0008 0028     		cmp	r0, #0
 4369 000a 00F00F81 		beq	.L435
 4370 000e 0546     		mov	r5, r0
 4371 0010 1646     		mov	r6, r2
3316:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, mode);
 4372              		.loc 1 3316 0
 4373 0012 02F03F07 		and	r7, r2, #63
 4374              	.LVL629:
3317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 4375              		.loc 1 3317 0
 4376 0016 3A46     		mov	r2, r7
 4377 0018 03A9     		add	r1, sp, #12
 4378              	.LVL630:
 4379 001a 01A8     		add	r0, sp, #4
 4380              	.LVL631:
 4381 001c FFF7FEFF 		bl	find_volume
 4382              	.LVL632:
3318:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
 4383              		.loc 1 3318 0
 4384 0020 0446     		mov	r4, r0
 4385 0022 50B1     		cbz	r0, .L448
 4386              	.LVL633:
 4387              	.L419:
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4388              		.loc 1 3488 0
 4389 0024 0CB1     		cbz	r4, .L434
 4390              	.LVL634:
 4391              	.L433:
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4392              		.loc 1 3488 0 is_stmt 0 discriminator 1
 4393 0026 0023     		movs	r3, #0
 4394 0028 2B60     		str	r3, [r5]
 4395              	.L434:
3490:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4396              		.loc 1 3490 0 is_stmt 1
 4397 002a 2146     		mov	r1, r4
 4398 002c 0398     		ldr	r0, [sp, #12]
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 192


 4399 002e FFF7FEFF 		bl	unlock_fs
 4400              	.LVL635:
 4401              	.L418:
3491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4402              		.loc 1 3491 0
 4403 0032 2046     		mov	r0, r4
 4404 0034 11B0     		add	sp, sp, #68
 4405              	.LCFI53:
 4406              		.cfi_remember_state
 4407              		.cfi_def_cfa_offset 28
 4408              		@ sp needed
 4409 0036 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4410              	.LVL636:
 4411              	.L448:
 4412              	.LCFI54:
 4413              		.cfi_restore_state
3319:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 4414              		.loc 1 3319 0
 4415 003a 039B     		ldr	r3, [sp, #12]
 4416 003c 0493     		str	r3, [sp, #16]
3321:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
 4417              		.loc 1 3321 0
 4418 003e 0199     		ldr	r1, [sp, #4]
 4419 0040 04A8     		add	r0, sp, #16
 4420              	.LVL637:
 4421 0042 FFF7FEFF 		bl	follow_path
 4422              	.LVL638:
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
 4423              		.loc 1 3323 0
 4424 0046 0446     		mov	r4, r0
 4425 0048 60B9     		cbnz	r0, .L420
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 4426              		.loc 1 3324 0
 4427 004a 9DF93F30 		ldrsb	r3, [sp, #63]
 4428 004e 002B     		cmp	r3, #0
 4429 0050 51DB     		blt	.L436
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4430              		.loc 1 3329 0
 4431 0052 37F00103 		bics	r3, r7, #1
 4432 0056 14BF     		ite	ne
 4433 0058 0121     		movne	r1, #1
 4434 005a 0021     		moveq	r1, #0
 4435 005c 04A8     		add	r0, sp, #16
 4436              	.LVL639:
 4437 005e FFF7FEFF 		bl	chk_lock
 4438              	.LVL640:
 4439 0062 0446     		mov	r4, r0
 4440              	.LVL641:
 4441              	.L420:
3334:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 4442              		.loc 1 3334 0
 4443 0064 16F01C0F 		tst	r6, #28
 4444 0068 5BD0     		beq	.L421
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
 4445              		.loc 1 3335 0
 4446 006a 002C     		cmp	r4, #0
 4447 006c 4FD0     		beq	.L422
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 193


3336:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 4448              		.loc 1 3336 0
 4449 006e 042C     		cmp	r4, #4
 4450 0070 43D0     		beq	.L449
 4451              	.LVL642:
 4452              	.L423:
3343:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4453              		.loc 1 3343 0
 4454 0072 47F00807 		orr	r7, r7, #8
 4455              	.LVL643:
 4456              	.L424:
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
 4457              		.loc 1 3352 0
 4458 0076 002C     		cmp	r4, #0
 4459 0078 62D1     		bne	.L425
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
 4460              		.loc 1 3352 0 is_stmt 0 discriminator 1
 4461 007a 17F0080F 		tst	r7, #8
 4462 007e 5FD0     		beq	.L425
3353:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 4463              		.loc 1 3353 0 is_stmt 1
 4464 0080 FFF7FEFF 		bl	get_fattime
 4465              	.LVL644:
 4466 0084 0646     		mov	r6, r0
 4467              	.LVL645:
3381:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
 4468              		.loc 1 3381 0
 4469 0086 0146     		mov	r1, r0
 4470 0088 0C98     		ldr	r0, [sp, #48]
 4471              	.LVL646:
 4472 008a 0E30     		adds	r0, r0, #14
 4473 008c FFF7FEFF 		bl	st_dword
 4474              	.LVL647:
3382:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
 4475              		.loc 1 3382 0
 4476 0090 3146     		mov	r1, r6
 4477 0092 0C98     		ldr	r0, [sp, #48]
 4478 0094 1630     		adds	r0, r0, #22
 4479 0096 FFF7FEFF 		bl	st_dword
 4480              	.LVL648:
3383:Middlewares/Third_Party/FatFs/src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
 4481              		.loc 1 3383 0
 4482 009a 0C9B     		ldr	r3, [sp, #48]
 4483 009c 2022     		movs	r2, #32
 4484 009e DA72     		strb	r2, [r3, #11]
3384:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
 4485              		.loc 1 3384 0
 4486 00a0 039E     		ldr	r6, [sp, #12]
 4487              	.LVL649:
 4488 00a2 DDF83080 		ldr	r8, [sp, #48]
 4489 00a6 4146     		mov	r1, r8
 4490 00a8 3046     		mov	r0, r6
 4491 00aa FFF7FEFF 		bl	ld_clust
 4492              	.LVL650:
 4493 00ae 8146     		mov	r9, r0
 4494              	.LVL651:
3385:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 194


 4495              		.loc 1 3385 0
 4496 00b0 0022     		movs	r2, #0
 4497 00b2 4146     		mov	r1, r8
 4498 00b4 3046     		mov	r0, r6
 4499              	.LVL652:
 4500 00b6 FFF7FEFF 		bl	st_clust
 4501              	.LVL653:
3386:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 4502              		.loc 1 3386 0
 4503 00ba 0021     		movs	r1, #0
 4504 00bc 0C98     		ldr	r0, [sp, #48]
 4505 00be 1C30     		adds	r0, r0, #28
 4506 00c0 FFF7FEFF 		bl	st_dword
 4507              	.LVL654:
3387:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4508              		.loc 1 3387 0
 4509 00c4 039B     		ldr	r3, [sp, #12]
 4510 00c6 0122     		movs	r2, #1
 4511 00c8 DA70     		strb	r2, [r3, #3]
3389:Middlewares/Third_Party/FatFs/src/ff.c **** 						dw = fs->winsect;
 4512              		.loc 1 3389 0
 4513 00ca B9F1000F 		cmp	r9, #0
 4514 00ce 37D0     		beq	.L425
3390:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
 4515              		.loc 1 3390 0
 4516 00d0 039B     		ldr	r3, [sp, #12]
 4517 00d2 1E6B     		ldr	r6, [r3, #48]
 4518              	.LVL655:
3391:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 4519              		.loc 1 3391 0
 4520 00d4 0022     		movs	r2, #0
 4521 00d6 4946     		mov	r1, r9
 4522 00d8 04A8     		add	r0, sp, #16
 4523 00da FFF7FEFF 		bl	remove_chain
 4524              	.LVL656:
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, dw);
 4525              		.loc 1 3392 0
 4526 00de 0446     		mov	r4, r0
 4527 00e0 70BB     		cbnz	r0, .L425
3393:Middlewares/Third_Party/FatFs/src/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
 4528              		.loc 1 3393 0
 4529 00e2 3146     		mov	r1, r6
 4530 00e4 0398     		ldr	r0, [sp, #12]
 4531              	.LVL657:
 4532 00e6 FFF7FEFF 		bl	move_window
 4533              	.LVL658:
 4534 00ea 0446     		mov	r4, r0
 4535              	.LVL659:
3394:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 4536              		.loc 1 3394 0
 4537 00ec 09F1FF33 		add	r3, r9, #-1
 4538 00f0 039A     		ldr	r2, [sp, #12]
 4539 00f2 1361     		str	r3, [r2, #16]
 4540 00f4 24E0     		b	.L425
 4541              	.LVL660:
 4542              	.L436:
3325:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 195


 4543              		.loc 1 3325 0
 4544 00f6 0624     		movs	r4, #6
 4545 00f8 B4E7     		b	.L420
 4546              	.LVL661:
 4547              	.L449:
3338:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4548              		.loc 1 3338 0
 4549 00fa FFF7FEFF 		bl	enq_lock
 4550              	.LVL662:
 4551 00fe 08B9     		cbnz	r0, .L450
 4552 0100 1224     		movs	r4, #18
 4553              	.LVL663:
 4554 0102 B6E7     		b	.L423
 4555              	.LVL664:
 4556              	.L450:
3338:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4557              		.loc 1 3338 0 is_stmt 0 discriminator 1
 4558 0104 04A8     		add	r0, sp, #16
 4559 0106 FFF7FEFF 		bl	dir_register
 4560              	.LVL665:
 4561 010a 0446     		mov	r4, r0
 4562              	.LVL666:
 4563 010c B1E7     		b	.L423
 4564              	.LVL667:
 4565              	.L422:
3346:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
 4566              		.loc 1 3346 0 is_stmt 1
 4567 010e 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 4568 0112 13F0110F 		tst	r3, #17
 4569 0116 12D1     		bne	.L438
3349:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4570              		.loc 1 3349 0
 4571 0118 16F0040F 		tst	r6, #4
 4572 011c ABD0     		beq	.L424
 4573 011e 0824     		movs	r4, #8
 4574              	.LVL668:
 4575 0120 0EE0     		b	.L425
 4576              	.LVL669:
 4577              	.L421:
3401:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
 4578              		.loc 1 3401 0
 4579 0122 6CB9     		cbnz	r4, .L425
3402:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
 4580              		.loc 1 3402 0
 4581 0124 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 4582 0128 13F0100F 		tst	r3, #16
 4583 012c 4CD1     		bne	.L440
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 4584              		.loc 1 3405 0
 4585 012e 16F0020F 		tst	r6, #2
 4586 0132 05D0     		beq	.L425
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 4587              		.loc 1 3405 0 is_stmt 0 discriminator 1
 4588 0134 13F0010F 		tst	r3, #1
 4589 0138 02D0     		beq	.L425
3406:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4590              		.loc 1 3406 0 is_stmt 1
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 196


 4591 013a 0724     		movs	r4, #7
 4592              	.LVL670:
 4593 013c 16E0     		b	.L426
 4594              	.LVL671:
 4595              	.L438:
3347:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 4596              		.loc 1 3347 0
 4597 013e 0724     		movs	r4, #7
 4598              	.LVL672:
 4599              	.L425:
3411:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
 4600              		.loc 1 3411 0
 4601 0140 A4B9     		cbnz	r4, .L426
3412:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_MODIFIED;
 4602              		.loc 1 3412 0
 4603 0142 17F0080F 		tst	r7, #8
 4604 0146 01D0     		beq	.L427
3413:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
 4605              		.loc 1 3413 0
 4606 0148 47F04007 		orr	r7, r7, #64
 4607              	.LVL673:
 4608              	.L427:
3414:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dj.dir;
 4609              		.loc 1 3414 0
 4610 014c 039B     		ldr	r3, [sp, #12]
 4611 014e 1B6B     		ldr	r3, [r3, #48]
 4612 0150 6B62     		str	r3, [r5, #36]
3415:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 4613              		.loc 1 3415 0
 4614 0152 0C9B     		ldr	r3, [sp, #48]
 4615 0154 AB62     		str	r3, [r5, #40]
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
 4616              		.loc 1 3417 0
 4617 0156 37F00103 		bics	r3, r7, #1
 4618 015a 14BF     		ite	ne
 4619 015c 0121     		movne	r1, #1
 4620 015e 0021     		moveq	r1, #0
 4621 0160 04A8     		add	r0, sp, #16
 4622 0162 FFF7FEFF 		bl	inc_lock
 4623              	.LVL674:
 4624 0166 2861     		str	r0, [r5, #16]
3418:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4625              		.loc 1 3418 0
 4626 0168 0028     		cmp	r0, #0
 4627 016a 5DD0     		beq	.L442
 4628              	.LVL675:
 4629              	.L426:
3433:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 4630              		.loc 1 3433 0
 4631 016c 002C     		cmp	r4, #0
 4632 016e 7FF459AF 		bne	.L419
3445:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
 4633              		.loc 1 3445 0
 4634 0172 039E     		ldr	r6, [sp, #12]
 4635 0174 DDF83080 		ldr	r8, [sp, #48]
 4636 0178 4146     		mov	r1, r8
 4637 017a 3046     		mov	r0, r6
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 197


 4638 017c FFF7FEFF 		bl	ld_clust
 4639              	.LVL676:
 4640 0180 A860     		str	r0, [r5, #8]
3446:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4641              		.loc 1 3446 0
 4642 0182 08F11C00 		add	r0, r8, #28
 4643 0186 FFF7FEFF 		bl	ld_dword
 4644              	.LVL677:
 4645 018a E860     		str	r0, [r5, #12]
3449:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4646              		.loc 1 3449 0
 4647 018c 0021     		movs	r1, #0
 4648 018e E962     		str	r1, [r5, #44]
3451:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.id = fs->id;
 4649              		.loc 1 3451 0
 4650 0190 2E60     		str	r6, [r5]
3452:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
 4651              		.loc 1 3452 0
 4652 0192 F388     		ldrh	r3, [r6, #6]
 4653 0194 AB80     		strh	r3, [r5, #4]	@ movhi
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;			/* Clear error flag */
 4654              		.loc 1 3453 0
 4655 0196 2F75     		strb	r7, [r5, #20]
3454:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
 4656              		.loc 1 3454 0
 4657 0198 6975     		strb	r1, [r5, #21]
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
 4658              		.loc 1 3455 0
 4659 019a 2962     		str	r1, [r5, #32]
3456:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 4660              		.loc 1 3456 0
 4661 019c A961     		str	r1, [r5, #24]
3459:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4662              		.loc 1 3459 0
 4663 019e 05F13008 		add	r8, r5, #48
 4664 01a2 4FF40072 		mov	r2, #512
 4665 01a6 4046     		mov	r0, r8
 4666 01a8 FFF7FEFF 		bl	mem_set
 4667              	.LVL678:
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 4668              		.loc 1 3461 0
 4669 01ac 17F0200F 		tst	r7, #32
 4670 01b0 3FF438AF 		beq	.L419
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 4671              		.loc 1 3461 0 is_stmt 0 discriminator 1
 4672 01b4 EE68     		ldr	r6, [r5, #12]
 4673 01b6 002E     		cmp	r6, #0
 4674 01b8 3FF434AF 		beq	.L419
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
 4675              		.loc 1 3462 0 is_stmt 1
 4676 01bc AE61     		str	r6, [r5, #24]
3463:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
 4677              		.loc 1 3463 0
 4678 01be 039B     		ldr	r3, [sp, #12]
 4679 01c0 5F89     		ldrh	r7, [r3, #10]
 4680              	.LVL679:
 4681 01c2 7F02     		lsls	r7, r7, #9
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 198


 4682              	.LVL680:
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
 4683              		.loc 1 3464 0
 4684 01c4 A968     		ldr	r1, [r5, #8]
 4685              	.LVL681:
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4686              		.loc 1 3465 0
 4687 01c6 05E0     		b	.L428
 4688              	.LVL682:
 4689              	.L440:
3403:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 4690              		.loc 1 3403 0
 4691 01c8 0424     		movs	r4, #4
 4692              	.LVL683:
 4693 01ca CFE7     		b	.L426
 4694              	.LVL684:
 4695              	.L429:
3468:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4696              		.loc 1 3468 0
 4697 01cc B1F1FF3F 		cmp	r1, #-1
 4698 01d0 0BD0     		beq	.L451
 4699              	.LVL685:
 4700              	.L430:
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4701              		.loc 1 3465 0 discriminator 2
 4702 01d2 F61B     		subs	r6, r6, r7
 4703              	.LVL686:
 4704              	.L428:
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4705              		.loc 1 3465 0 is_stmt 0 discriminator 1
 4706 01d4 5CB9     		cbnz	r4, .L431
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4707              		.loc 1 3465 0 discriminator 3
 4708 01d6 BE42     		cmp	r6, r7
 4709 01d8 09D9     		bls	.L431
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
 4710              		.loc 1 3466 0 is_stmt 1
 4711 01da 2846     		mov	r0, r5
 4712 01dc FFF7FEFF 		bl	get_fat
 4713              	.LVL687:
 4714 01e0 0146     		mov	r1, r0
 4715              	.LVL688:
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 4716              		.loc 1 3467 0
 4717 01e2 0128     		cmp	r0, #1
 4718 01e4 F2D8     		bhi	.L429
 4719 01e6 0224     		movs	r4, #2
 4720              	.LVL689:
 4721 01e8 F0E7     		b	.L429
 4722              	.LVL690:
 4723              	.L451:
3468:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4724              		.loc 1 3468 0
 4725 01ea 0124     		movs	r4, #1
 4726              	.LVL691:
 4727 01ec F1E7     		b	.L430
 4728              	.LVL692:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 199


 4729              	.L431:
3470:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 4730              		.loc 1 3470 0
 4731 01ee E961     		str	r1, [r5, #28]
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 4732              		.loc 1 3471 0
 4733 01f0 002C     		cmp	r4, #0
 4734 01f2 7FF417AF 		bne	.L419
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 4735              		.loc 1 3471 0 is_stmt 0 discriminator 1
 4736 01f6 C6F30803 		ubfx	r3, r6, #0, #9
 4737 01fa 002B     		cmp	r3, #0
 4738 01fc 3FF412AF 		beq	.L419
3472:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_INT_ERR;
 4739              		.loc 1 3472 0 is_stmt 1
 4740 0200 039F     		ldr	r7, [sp, #12]
 4741              	.LVL693:
 4742 0202 3846     		mov	r0, r7
 4743 0204 FFF7FEFF 		bl	clust2sect
 4744              	.LVL694:
 4745 0208 08B9     		cbnz	r0, .L452
3473:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 4746              		.loc 1 3473 0
 4747 020a 0224     		movs	r4, #2
 4748              	.LVL695:
 4749 020c 0BE7     		b	.L433
 4750              	.LVL696:
 4751              	.L452:
3475:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 4752              		.loc 1 3475 0
 4753 020e 00EB5622 		add	r2, r0, r6, lsr #9
 4754 0212 2A62     		str	r2, [r5, #32]
3477:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4755              		.loc 1 3477 0
 4756 0214 0123     		movs	r3, #1
 4757 0216 4146     		mov	r1, r8
 4758 0218 7878     		ldrb	r0, [r7, #1]	@ zero_extendqisi2
 4759              	.LVL697:
 4760 021a FFF7FEFF 		bl	disk_read
 4761              	.LVL698:
 4762 021e 0028     		cmp	r0, #0
 4763 0220 3FF400AF 		beq	.L419
 4764 0224 0124     		movs	r4, #1
 4765              	.LVL699:
 4766 0226 FEE6     		b	.L433
 4767              	.LVL700:
 4768              	.L442:
3418:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4769              		.loc 1 3418 0
 4770 0228 0224     		movs	r4, #2
 4771              	.LVL701:
 4772 022a FBE6     		b	.L419
 4773              	.LVL702:
 4774              	.L435:
3313:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4775              		.loc 1 3313 0
 4776 022c 0924     		movs	r4, #9
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 200


 4777 022e 00E7     		b	.L418
 4778              		.cfi_endproc
 4779              	.LFE172:
 4781              		.section	.text.f_read,"ax",%progbits
 4782              		.align	1
 4783              		.global	f_read
 4784              		.syntax unified
 4785              		.thumb
 4786              		.thumb_func
 4787              		.fpu fpv4-sp-d16
 4789              	f_read:
 4790              	.LFB173:
3506:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4791              		.loc 1 3506 0
 4792              		.cfi_startproc
 4793              		@ args = 0, pretend = 0, frame = 16
 4794              		@ frame_needed = 0, uses_anonymous_args = 0
 4795              	.LVL703:
 4796 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4797              	.LCFI55:
 4798              		.cfi_def_cfa_offset 36
 4799              		.cfi_offset 4, -36
 4800              		.cfi_offset 5, -32
 4801              		.cfi_offset 6, -28
 4802              		.cfi_offset 7, -24
 4803              		.cfi_offset 8, -20
 4804              		.cfi_offset 9, -16
 4805              		.cfi_offset 10, -12
 4806              		.cfi_offset 11, -8
 4807              		.cfi_offset 14, -4
 4808 0004 85B0     		sub	sp, sp, #20
 4809              	.LCFI56:
 4810              		.cfi_def_cfa_offset 56
 4811 0006 0446     		mov	r4, r0
 4812 0008 0F46     		mov	r7, r1
 4813 000a 1646     		mov	r6, r2
 4814 000c 9946     		mov	r9, r3
 4815              	.LVL704:
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
 4816              		.loc 1 3515 0
 4817 000e 0023     		movs	r3, #0
 4818              	.LVL705:
 4819 0010 C9F80030 		str	r3, [r9]
3516:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 4820              		.loc 1 3516 0
 4821 0014 0190     		str	r0, [sp, #4]
 4822 0016 03A9     		add	r1, sp, #12
 4823              	.LVL706:
 4824 0018 FFF7FEFF 		bl	validate
 4825              	.LVL707:
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 4826              		.loc 1 3517 0
 4827 001c 0090     		str	r0, [sp]
 4828 001e 70B9     		cbnz	r0, .L454
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 4829              		.loc 1 3517 0 is_stmt 0 discriminator 2
 4830 0020 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 201


 4831 0022 0093     		str	r3, [sp]
 4832              	.LVL708:
 4833 0024 5BB9     		cbnz	r3, .L454
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 4834              		.loc 1 3518 0 is_stmt 1
 4835 0026 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 4836              	.LVL709:
 4837 0028 13F0010F 		tst	r3, #1
 4838 002c 0FD0     		beq	.L482
3519:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
 4839              		.loc 1 3519 0
 4840 002e E568     		ldr	r5, [r4, #12]
 4841 0030 A369     		ldr	r3, [r4, #24]
 4842 0032 ED1A     		subs	r5, r5, r3
 4843              	.LVL710:
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4844              		.loc 1 3520 0
 4845 0034 B542     		cmp	r5, r6
 4846 0036 C0F08280 		bcc	.L477
 4847 003a 3546     		mov	r5, r6
 4848              	.LVL711:
 4849 003c 7FE0     		b	.L477
 4850              	.LVL712:
 4851              	.L454:
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 4852              		.loc 1 3517 0 discriminator 3
 4853 003e 0099     		ldr	r1, [sp]
 4854 0040 0398     		ldr	r0, [sp, #12]
 4855 0042 FFF7FEFF 		bl	unlock_fs
 4856              	.LVL713:
 4857              	.L456:
3590:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4858              		.loc 1 3590 0
 4859 0046 0098     		ldr	r0, [sp]
 4860 0048 05B0     		add	sp, sp, #20
 4861              	.LCFI57:
 4862              		.cfi_remember_state
 4863              		.cfi_def_cfa_offset 36
 4864              		@ sp needed
 4865 004a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4866              	.LVL714:
 4867              	.L482:
 4868              	.LCFI58:
 4869              		.cfi_restore_state
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 4870              		.loc 1 3518 0 discriminator 1
 4871 004e 0721     		movs	r1, #7
 4872 0050 0398     		ldr	r0, [sp, #12]
 4873 0052 FFF7FEFF 		bl	unlock_fs
 4874              	.LVL715:
 4875 0056 0723     		movs	r3, #7
 4876 0058 0093     		str	r3, [sp]
 4877              	.LVL716:
 4878 005a F4E7     		b	.L456
 4879              	.LVL717:
 4880              	.L462:
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 202


 4881              		.loc 1 3531 0
 4882 005c E36A     		ldr	r3, [r4, #44]
 4883 005e 1BB1     		cbz	r3, .L464
3532:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
 4884              		.loc 1 3532 0
 4885 0060 2046     		mov	r0, r4
 4886 0062 FFF7FEFF 		bl	clmt_clust
 4887              	.LVL718:
 4888 0066 7BE0     		b	.L463
 4889              	.LVL719:
 4890              	.L464:
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4891              		.loc 1 3536 0
 4892 0068 E169     		ldr	r1, [r4, #28]
 4893 006a 0198     		ldr	r0, [sp, #4]
 4894 006c FFF7FEFF 		bl	get_fat
 4895              	.LVL720:
 4896 0070 76E0     		b	.L463
 4897              	.L486:
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 4898              		.loc 1 3539 0 discriminator 1
 4899 0072 4FF00208 		mov	r8, #2
 4900 0076 84F81580 		strb	r8, [r4, #21]
 4901 007a 4146     		mov	r1, r8
 4902 007c 0398     		ldr	r0, [sp, #12]
 4903              	.LVL721:
 4904 007e FFF7FEFF 		bl	unlock_fs
 4905              	.LVL722:
 4906 0082 CDF80080 		str	r8, [sp]
 4907              	.LVL723:
 4908 0086 DEE7     		b	.L456
 4909              	.LVL724:
 4910              	.L487:
3540:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 4911              		.loc 1 3540 0 discriminator 1
 4912 0088 4FF00108 		mov	r8, #1
 4913 008c 84F81580 		strb	r8, [r4, #21]
 4914 0090 4146     		mov	r1, r8
 4915 0092 0398     		ldr	r0, [sp, #12]
 4916              	.LVL725:
 4917 0094 FFF7FEFF 		bl	unlock_fs
 4918              	.LVL726:
 4919 0098 CDF80080 		str	r8, [sp]
 4920              	.LVL727:
 4921 009c D3E7     		b	.L456
 4922              	.LVL728:
 4923              	.L488:
3544:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 4924              		.loc 1 3544 0 discriminator 1
 4925 009e 4FF00208 		mov	r8, #2
 4926 00a2 84F81580 		strb	r8, [r4, #21]
 4927 00a6 4146     		mov	r1, r8
 4928 00a8 5846     		mov	r0, fp
 4929              	.LVL729:
 4930 00aa FFF7FEFF 		bl	unlock_fs
 4931              	.LVL730:
 4932 00ae CDF80080 		str	r8, [sp]
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 203


 4933              	.LVL731:
 4934 00b2 C8E7     		b	.L456
 4935              	.LVL732:
 4936              	.L489:
3551:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 4937              		.loc 1 3551 0 discriminator 1
 4938 00b4 4FF00108 		mov	r8, #1
 4939              	.LVL733:
 4940 00b8 84F81580 		strb	r8, [r4, #21]
 4941 00bc 4146     		mov	r1, r8
 4942 00be 0398     		ldr	r0, [sp, #12]
 4943 00c0 FFF7FEFF 		bl	unlock_fs
 4944              	.LVL734:
 4945 00c4 CDF80080 		str	r8, [sp]
 4946              	.LVL735:
 4947 00c8 BDE7     		b	.L456
 4948              	.LVL736:
 4949              	.L490:
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 4950              		.loc 1 3558 0 discriminator 1
 4951 00ca 206A     		ldr	r0, [r4, #32]
 4952 00cc A0EB0A00 		sub	r0, r0, r10
 4953 00d0 4045     		cmp	r0, r8
 4954 00d2 6DD2     		bcs	.L471
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4955              		.loc 1 3559 0
 4956 00d4 4FF40072 		mov	r2, #512
 4957 00d8 04F13001 		add	r1, r4, #48
 4958 00dc 07EB4020 		add	r0, r7, r0, lsl #9
 4959 00e0 FFF7FEFF 		bl	mem_cpy
 4960              	.LVL737:
 4961 00e4 64E0     		b	.L471
 4962              	.L468:
3567:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 4963              		.loc 1 3567 0
 4964 00e6 226A     		ldr	r2, [r4, #32]
 4965 00e8 5245     		cmp	r2, r10
 4966 00ea 0DD0     		beq	.L473
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 4967              		.loc 1 3569 0
 4968 00ec 94F91430 		ldrsb	r3, [r4, #20]
 4969 00f0 002B     		cmp	r3, #0
 4970 00f2 60DB     		blt	.L483
 4971              	.L474:
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4972              		.loc 1 3574 0
 4973 00f4 0123     		movs	r3, #1
 4974 00f6 5246     		mov	r2, r10
 4975 00f8 04F13001 		add	r1, r4, #48
 4976 00fc 0398     		ldr	r0, [sp, #12]
 4977 00fe 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 4978 0100 FFF7FEFF 		bl	disk_read
 4979              	.LVL738:
 4980 0104 0028     		cmp	r0, #0
 4981 0106 6ED1     		bne	.L484
 4982              	.L473:
3577:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 204


 4983              		.loc 1 3577 0
 4984 0108 C4F820A0 		str	r10, [r4, #32]
 4985              	.LVL739:
 4986              	.L460:
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
 4987              		.loc 1 3579 0
 4988 010c A369     		ldr	r3, [r4, #24]
 4989 010e C3F30803 		ubfx	r3, r3, #0, #9
 4990 0112 C3F50076 		rsb	r6, r3, #512
 4991              	.LVL740:
3580:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
 4992              		.loc 1 3580 0
 4993 0116 B542     		cmp	r5, r6
 4994 0118 00D2     		bcs	.L476
 4995 011a 2E46     		mov	r6, r5
 4996              	.LVL741:
 4997              	.L476:
3585:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4998              		.loc 1 3585 0
 4999 011c 04F13001 		add	r1, r4, #48
 5000 0120 3246     		mov	r2, r6
 5001 0122 1944     		add	r1, r1, r3
 5002 0124 3846     		mov	r0, r7
 5003 0126 FFF7FEFF 		bl	mem_cpy
 5004              	.LVL742:
 5005              	.L472:
3523:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 5006              		.loc 1 3523 0
 5007 012a 3744     		add	r7, r7, r6
 5008              	.LVL743:
 5009 012c A369     		ldr	r3, [r4, #24]
 5010 012e 3344     		add	r3, r3, r6
 5011 0130 A361     		str	r3, [r4, #24]
 5012 0132 D9F80030 		ldr	r3, [r9]
 5013 0136 3344     		add	r3, r3, r6
 5014 0138 C9F80030 		str	r3, [r9]
 5015 013c AD1B     		subs	r5, r5, r6
 5016              	.LVL744:
 5017              	.L477:
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 5018              		.loc 1 3522 0
 5019 013e 002D     		cmp	r5, #0
 5020 0140 5CD0     		beq	.L485
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
 5021              		.loc 1 3524 0
 5022 0142 A169     		ldr	r1, [r4, #24]
 5023 0144 C1F30803 		ubfx	r3, r1, #0, #9
 5024 0148 002B     		cmp	r3, #0
 5025 014a DFD1     		bne	.L460
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
 5026              		.loc 1 3525 0
 5027 014c 039B     		ldr	r3, [sp, #12]
 5028 014e 5E89     		ldrh	r6, [r3, #10]
 5029 0150 013E     		subs	r6, r6, #1
 5030              	.LVL745:
3526:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 5031              		.loc 1 3526 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 205


 5032 0152 16EA5126 		ands	r6, r6, r1, lsr #9
 5033              	.LVL746:
 5034 0156 09D1     		bne	.L461
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
 5035              		.loc 1 3527 0
 5036 0158 0029     		cmp	r1, #0
 5037 015a 7FF47FAF 		bne	.L462
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
 5038              		.loc 1 3528 0
 5039 015e A068     		ldr	r0, [r4, #8]
 5040              	.LVL747:
 5041              	.L463:
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5042              		.loc 1 3539 0
 5043 0160 0128     		cmp	r0, #1
 5044 0162 86D9     		bls	.L486
3540:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 5045              		.loc 1 3540 0
 5046 0164 B0F1FF3F 		cmp	r0, #-1
 5047 0168 8ED0     		beq	.L487
3541:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5048              		.loc 1 3541 0
 5049 016a E061     		str	r0, [r4, #28]
 5050              	.LVL748:
 5051              	.L461:
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
 5052              		.loc 1 3543 0
 5053 016c DDF80CB0 		ldr	fp, [sp, #12]
 5054 0170 E169     		ldr	r1, [r4, #28]
 5055 0172 5846     		mov	r0, fp
 5056 0174 FFF7FEFF 		bl	clust2sect
 5057              	.LVL749:
3544:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 5058              		.loc 1 3544 0
 5059 0178 8246     		mov	r10, r0
 5060 017a 0028     		cmp	r0, #0
 5061 017c 8FD0     		beq	.L488
3545:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
 5062              		.loc 1 3545 0
 5063 017e B244     		add	r10, r10, r6
 5064              	.LVL750:
3547:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 5065              		.loc 1 3547 0
 5066 0180 5FEA5528 		lsrs	r8, r5, #9
 5067              	.LVL751:
 5068 0184 AFD0     		beq	.L468
3548:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
 5069              		.loc 1 3548 0
 5070 0186 06EB0803 		add	r3, r6, r8
 5071 018a BBF80A20 		ldrh	r2, [fp, #10]
 5072 018e 9342     		cmp	r3, r2
 5073 0190 01D9     		bls	.L469
3549:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5074              		.loc 1 3549 0
 5075 0192 A2EB0608 		sub	r8, r2, r6
 5076              	.LVL752:
 5077              	.L469:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 206


3551:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 5078              		.loc 1 3551 0
 5079 0196 4346     		mov	r3, r8
 5080 0198 5246     		mov	r2, r10
 5081 019a 3946     		mov	r1, r7
 5082 019c 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 5083 01a0 FFF7FEFF 		bl	disk_read
 5084              	.LVL753:
 5085 01a4 0028     		cmp	r0, #0
 5086 01a6 85D1     		bne	.L489
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 5087              		.loc 1 3558 0
 5088 01a8 94F91430 		ldrsb	r3, [r4, #20]
 5089 01ac 002B     		cmp	r3, #0
 5090 01ae 8CDB     		blt	.L490
 5091              	.L471:
3563:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 5092              		.loc 1 3563 0
 5093 01b0 4FEA4826 		lsl	r6, r8, #9
 5094              	.LVL754:
3564:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5095              		.loc 1 3564 0
 5096 01b4 B9E7     		b	.L472
 5097              	.LVL755:
 5098              	.L483:
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 5099              		.loc 1 3570 0
 5100 01b6 0123     		movs	r3, #1
 5101 01b8 04F13001 		add	r1, r4, #48
 5102 01bc 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 5103 01c0 FFF7FEFF 		bl	disk_write
 5104              	.LVL756:
 5105 01c4 20B9     		cbnz	r0, .L491
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5106              		.loc 1 3571 0
 5107 01c6 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5108 01c8 03F07F03 		and	r3, r3, #127
 5109 01cc 2375     		strb	r3, [r4, #20]
 5110 01ce 91E7     		b	.L474
 5111              	.L491:
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 5112              		.loc 1 3570 0 discriminator 1
 5113 01d0 4FF00108 		mov	r8, #1
 5114              	.LVL757:
 5115 01d4 84F81580 		strb	r8, [r4, #21]
 5116 01d8 4146     		mov	r1, r8
 5117 01da 0398     		ldr	r0, [sp, #12]
 5118 01dc FFF7FEFF 		bl	unlock_fs
 5119              	.LVL758:
 5120 01e0 CDF80080 		str	r8, [sp]
 5121              	.LVL759:
 5122 01e4 2FE7     		b	.L456
 5123              	.LVL760:
 5124              	.L484:
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5125              		.loc 1 3574 0 discriminator 1
 5126 01e6 4FF00108 		mov	r8, #1
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 207


 5127              	.LVL761:
 5128 01ea 84F81580 		strb	r8, [r4, #21]
 5129 01ee 4146     		mov	r1, r8
 5130 01f0 0398     		ldr	r0, [sp, #12]
 5131 01f2 FFF7FEFF 		bl	unlock_fs
 5132              	.LVL762:
 5133 01f6 CDF80080 		str	r8, [sp]
 5134              	.LVL763:
 5135 01fa 24E7     		b	.L456
 5136              	.LVL764:
 5137              	.L485:
3589:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5138              		.loc 1 3589 0
 5139 01fc 0021     		movs	r1, #0
 5140 01fe 0398     		ldr	r0, [sp, #12]
 5141 0200 FFF7FEFF 		bl	unlock_fs
 5142              	.LVL765:
 5143 0204 1FE7     		b	.L456
 5144              		.cfi_endproc
 5145              	.LFE173:
 5147              		.section	.text.f_write,"ax",%progbits
 5148              		.align	1
 5149              		.global	f_write
 5150              		.syntax unified
 5151              		.thumb
 5152              		.thumb_func
 5153              		.fpu fpv4-sp-d16
 5155              	f_write:
 5156              	.LFB174:
3606:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5157              		.loc 1 3606 0
 5158              		.cfi_startproc
 5159              		@ args = 0, pretend = 0, frame = 16
 5160              		@ frame_needed = 0, uses_anonymous_args = 0
 5161              	.LVL766:
 5162 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5163              	.LCFI59:
 5164              		.cfi_def_cfa_offset 36
 5165              		.cfi_offset 4, -36
 5166              		.cfi_offset 5, -32
 5167              		.cfi_offset 6, -28
 5168              		.cfi_offset 7, -24
 5169              		.cfi_offset 8, -20
 5170              		.cfi_offset 9, -16
 5171              		.cfi_offset 10, -12
 5172              		.cfi_offset 11, -8
 5173              		.cfi_offset 14, -4
 5174 0004 85B0     		sub	sp, sp, #20
 5175              	.LCFI60:
 5176              		.cfi_def_cfa_offset 56
 5177 0006 0446     		mov	r4, r0
 5178 0008 8846     		mov	r8, r1
 5179 000a 1646     		mov	r6, r2
 5180 000c 9946     		mov	r9, r3
 5181              	.LVL767:
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
 5182              		.loc 1 3614 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 208


 5183 000e 0023     		movs	r3, #0
 5184              	.LVL768:
 5185 0010 C9F80030 		str	r3, [r9]
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 5186              		.loc 1 3615 0
 5187 0014 0190     		str	r0, [sp, #4]
 5188 0016 03A9     		add	r1, sp, #12
 5189              	.LVL769:
 5190 0018 FFF7FEFF 		bl	validate
 5191              	.LVL770:
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 5192              		.loc 1 3616 0
 5193 001c 0090     		str	r0, [sp]
 5194 001e 60B9     		cbnz	r0, .L493
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 5195              		.loc 1 3616 0 is_stmt 0 discriminator 2
 5196 0020 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 5197 0022 0093     		str	r3, [sp]
 5198              	.LVL771:
 5199 0024 4BB9     		cbnz	r3, .L493
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5200              		.loc 1 3617 0 is_stmt 1
 5201 0026 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5202              	.LVL772:
 5203 0028 13F0020F 		tst	r3, #2
 5204 002c 0DD0     		beq	.L520
3620:Middlewares/Third_Party/FatFs/src/ff.c **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
 5205              		.loc 1 3620 0
 5206 002e A369     		ldr	r3, [r4, #24]
 5207 0030 F342     		cmn	r3, r6
 5208 0032 C0F0CA80 		bcc	.L516
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5209              		.loc 1 3621 0
 5210 0036 DE43     		mvns	r6, r3
 5211              	.LVL773:
 5212 0038 C7E0     		b	.L516
 5213              	.LVL774:
 5214              	.L493:
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 5215              		.loc 1 3616 0 discriminator 3
 5216 003a 0099     		ldr	r1, [sp]
 5217 003c 0398     		ldr	r0, [sp, #12]
 5218 003e FFF7FEFF 		bl	unlock_fs
 5219              	.LVL775:
 5220              	.L495:
3712:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5221              		.loc 1 3712 0
 5222 0042 0098     		ldr	r0, [sp]
 5223 0044 05B0     		add	sp, sp, #20
 5224              	.LCFI61:
 5225              		.cfi_remember_state
 5226              		.cfi_def_cfa_offset 36
 5227              		@ sp needed
 5228 0046 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5229              	.LVL776:
 5230              	.L520:
 5231              	.LCFI62:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 209


 5232              		.cfi_restore_state
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5233              		.loc 1 3617 0 discriminator 1
 5234 004a 0721     		movs	r1, #7
 5235 004c 0398     		ldr	r0, [sp, #12]
 5236 004e FFF7FEFF 		bl	unlock_fs
 5237              	.LVL777:
 5238 0052 0723     		movs	r3, #7
 5239 0054 0093     		str	r3, [sp]
 5240              	.LVL778:
 5241 0056 F4E7     		b	.L495
 5242              	.LVL779:
 5243              	.L500:
3636:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 5244              		.loc 1 3636 0
 5245 0058 E36A     		ldr	r3, [r4, #44]
 5246 005a A3B3     		cbz	r3, .L502
3637:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
 5247              		.loc 1 3637 0
 5248 005c 2046     		mov	r0, r4
 5249 005e FFF7FEFF 		bl	clmt_clust
 5250              	.LVL780:
 5251              	.L501:
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
 5252              		.loc 1 3644 0
 5253 0062 0028     		cmp	r0, #0
 5254 0064 00F0DE80 		beq	.L503
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5255              		.loc 1 3645 0
 5256 0068 0128     		cmp	r0, #1
 5257 006a 31D0     		beq	.L521
3646:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 5258              		.loc 1 3646 0
 5259 006c B0F1FF3F 		cmp	r0, #-1
 5260 0070 39D0     		beq	.L522
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
 5261              		.loc 1 3647 0
 5262 0072 E061     		str	r0, [r4, #28]
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5263              		.loc 1 3648 0
 5264 0074 A368     		ldr	r3, [r4, #8]
 5265 0076 03B9     		cbnz	r3, .L499
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5266              		.loc 1 3648 0 is_stmt 0 discriminator 1
 5267 0078 A060     		str	r0, [r4, #8]
 5268              	.LVL781:
 5269              	.L499:
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 5270              		.loc 1 3653 0 is_stmt 1
 5271 007a 94F91430 		ldrsb	r3, [r4, #20]
 5272 007e 002B     		cmp	r3, #0
 5273 0080 3CDB     		blt	.L523
 5274              	.L506:
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
 5275              		.loc 1 3658 0
 5276 0082 DDF80CB0 		ldr	fp, [sp, #12]
 5277 0086 E169     		ldr	r1, [r4, #28]
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 210


 5278 0088 5846     		mov	r0, fp
 5279 008a FFF7FEFF 		bl	clust2sect
 5280              	.LVL782:
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 5281              		.loc 1 3659 0
 5282 008e 8246     		mov	r10, r0
 5283 0090 0028     		cmp	r0, #0
 5284 0092 4CD0     		beq	.L524
3660:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
 5285              		.loc 1 3660 0
 5286 0094 BA44     		add	r10, r10, r7
 5287              	.LVL783:
3662:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 5288              		.loc 1 3662 0
 5289 0096 750A     		lsrs	r5, r6, #9
 5290              	.LVL784:
 5291 0098 6CD0     		beq	.L509
3663:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
 5292              		.loc 1 3663 0
 5293 009a 7B19     		adds	r3, r7, r5
 5294 009c BBF80A20 		ldrh	r2, [fp, #10]
 5295 00a0 9342     		cmp	r3, r2
 5296 00a2 00D9     		bls	.L510
3664:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5297              		.loc 1 3664 0
 5298 00a4 D51B     		subs	r5, r2, r7
 5299              	.LVL785:
 5300              	.L510:
3666:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
 5301              		.loc 1 3666 0
 5302 00a6 2B46     		mov	r3, r5
 5303 00a8 5246     		mov	r2, r10
 5304 00aa 4146     		mov	r1, r8
 5305 00ac 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 5306 00b0 FFF7FEFF 		bl	disk_write
 5307              	.LVL786:
 5308 00b4 0028     		cmp	r0, #0
 5309 00b6 45D1     		bne	.L525
3674:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
 5310              		.loc 1 3674 0
 5311 00b8 216A     		ldr	r1, [r4, #32]
 5312 00ba A1EB0A01 		sub	r1, r1, r10
 5313 00be A942     		cmp	r1, r5
 5314 00c0 4BD3     		bcc	.L526
 5315              	.L512:
3680:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 5316              		.loc 1 3680 0
 5317 00c2 6D02     		lsls	r5, r5, #9
 5318              	.LVL787:
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5319              		.loc 1 3681 0
 5320 00c4 72E0     		b	.L513
 5321              	.LVL788:
 5322              	.L502:
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5323              		.loc 1 3641 0
 5324 00c6 E169     		ldr	r1, [r4, #28]
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 211


 5325 00c8 0198     		ldr	r0, [sp, #4]
 5326 00ca FFF7FEFF 		bl	create_chain
 5327              	.LVL789:
 5328 00ce C8E7     		b	.L501
 5329              	.L521:
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5330              		.loc 1 3645 0 discriminator 1
 5331 00d0 4FF0020A 		mov	r10, #2
 5332 00d4 84F815A0 		strb	r10, [r4, #21]
 5333 00d8 5146     		mov	r1, r10
 5334 00da 0398     		ldr	r0, [sp, #12]
 5335              	.LVL790:
 5336 00dc FFF7FEFF 		bl	unlock_fs
 5337              	.LVL791:
 5338 00e0 CDF800A0 		str	r10, [sp]
 5339              	.LVL792:
 5340 00e4 ADE7     		b	.L495
 5341              	.LVL793:
 5342              	.L522:
3646:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 5343              		.loc 1 3646 0 discriminator 1
 5344 00e6 4FF0010A 		mov	r10, #1
 5345 00ea 84F815A0 		strb	r10, [r4, #21]
 5346 00ee 5146     		mov	r1, r10
 5347 00f0 0398     		ldr	r0, [sp, #12]
 5348              	.LVL794:
 5349 00f2 FFF7FEFF 		bl	unlock_fs
 5350              	.LVL795:
 5351 00f6 CDF800A0 		str	r10, [sp]
 5352              	.LVL796:
 5353 00fa A2E7     		b	.L495
 5354              	.LVL797:
 5355              	.L523:
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5356              		.loc 1 3654 0
 5357 00fc 0123     		movs	r3, #1
 5358 00fe 226A     		ldr	r2, [r4, #32]
 5359 0100 04F13001 		add	r1, r4, #48
 5360 0104 0398     		ldr	r0, [sp, #12]
 5361 0106 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5362 0108 FFF7FEFF 		bl	disk_write
 5363              	.LVL798:
 5364 010c 20B9     		cbnz	r0, .L527
3655:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5365              		.loc 1 3655 0
 5366 010e 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5367 0110 03F07F03 		and	r3, r3, #127
 5368 0114 2375     		strb	r3, [r4, #20]
 5369 0116 B4E7     		b	.L506
 5370              	.L527:
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5371              		.loc 1 3654 0 discriminator 1
 5372 0118 4FF0010A 		mov	r10, #1
 5373 011c 84F815A0 		strb	r10, [r4, #21]
 5374 0120 5146     		mov	r1, r10
 5375 0122 0398     		ldr	r0, [sp, #12]
 5376 0124 FFF7FEFF 		bl	unlock_fs
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 212


 5377              	.LVL799:
 5378 0128 CDF800A0 		str	r10, [sp]
 5379              	.LVL800:
 5380 012c 89E7     		b	.L495
 5381              	.LVL801:
 5382              	.L524:
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 5383              		.loc 1 3659 0 discriminator 1
 5384 012e 4FF0020A 		mov	r10, #2
 5385 0132 84F815A0 		strb	r10, [r4, #21]
 5386 0136 5146     		mov	r1, r10
 5387 0138 5846     		mov	r0, fp
 5388              	.LVL802:
 5389 013a FFF7FEFF 		bl	unlock_fs
 5390              	.LVL803:
 5391 013e CDF800A0 		str	r10, [sp]
 5392              	.LVL804:
 5393 0142 7EE7     		b	.L495
 5394              	.LVL805:
 5395              	.L525:
3666:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
 5396              		.loc 1 3666 0 discriminator 1
 5397 0144 4FF0010A 		mov	r10, #1
 5398              	.LVL806:
 5399 0148 84F815A0 		strb	r10, [r4, #21]
 5400 014c 5146     		mov	r1, r10
 5401 014e 0398     		ldr	r0, [sp, #12]
 5402 0150 FFF7FEFF 		bl	unlock_fs
 5403              	.LVL807:
 5404 0154 CDF800A0 		str	r10, [sp]
 5405              	.LVL808:
 5406 0158 73E7     		b	.L495
 5407              	.LVL809:
 5408              	.L526:
3675:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 5409              		.loc 1 3675 0
 5410 015a 4FF40072 		mov	r2, #512
 5411 015e 08EB4121 		add	r1, r8, r1, lsl #9
 5412 0162 04F13000 		add	r0, r4, #48
 5413 0166 FFF7FEFF 		bl	mem_cpy
 5414              	.LVL810:
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5415              		.loc 1 3676 0
 5416 016a 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5417 016c 03F07F03 		and	r3, r3, #127
 5418 0170 2375     		strb	r3, [r4, #20]
 5419 0172 A6E7     		b	.L512
 5420              	.L509:
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
 5421              		.loc 1 3689 0
 5422 0174 236A     		ldr	r3, [r4, #32]
 5423 0176 5345     		cmp	r3, r10
 5424 0178 03D0     		beq	.L514
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
 5425              		.loc 1 3690 0 discriminator 1
 5426 017a A269     		ldr	r2, [r4, #24]
 5427 017c E368     		ldr	r3, [r4, #12]
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 213


3689:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
 5428              		.loc 1 3689 0 discriminator 1
 5429 017e 9A42     		cmp	r2, r3
 5430 0180 3BD3     		bcc	.L528
 5431              	.L514:
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5432              		.loc 1 3695 0
 5433 0182 C4F820A0 		str	r10, [r4, #32]
 5434              	.LVL811:
 5435              	.L498:
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
 5436              		.loc 1 3697 0
 5437 0186 A369     		ldr	r3, [r4, #24]
 5438 0188 C3F30803 		ubfx	r3, r3, #0, #9
 5439 018c C3F50075 		rsb	r5, r3, #512
 5440              	.LVL812:
3698:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
 5441              		.loc 1 3698 0
 5442 0190 AE42     		cmp	r6, r5
 5443 0192 00D2     		bcs	.L515
 5444 0194 3546     		mov	r5, r6
 5445              	.LVL813:
 5446              	.L515:
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_DIRTY;
 5447              		.loc 1 3704 0
 5448 0196 04F13000 		add	r0, r4, #48
 5449 019a 2A46     		mov	r2, r5
 5450 019c 4146     		mov	r1, r8
 5451 019e 1844     		add	r0, r0, r3
 5452 01a0 FFF7FEFF 		bl	mem_cpy
 5453              	.LVL814:
3705:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5454              		.loc 1 3705 0
 5455 01a4 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5456 01a6 63F07F03 		orn	r3, r3, #127
 5457 01aa 2375     		strb	r3, [r4, #20]
 5458              	.L513:
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 5459              		.loc 1 3625 0
 5460 01ac A844     		add	r8, r8, r5
 5461              	.LVL815:
 5462 01ae A369     		ldr	r3, [r4, #24]
 5463 01b0 2B44     		add	r3, r3, r5
 5464 01b2 A361     		str	r3, [r4, #24]
 5465 01b4 E268     		ldr	r2, [r4, #12]
 5466 01b6 9342     		cmp	r3, r2
 5467 01b8 38BF     		it	cc
 5468 01ba 1346     		movcc	r3, r2
 5469 01bc E360     		str	r3, [r4, #12]
 5470 01be D9F80030 		ldr	r3, [r9]
 5471 01c2 2B44     		add	r3, r3, r5
 5472 01c4 C9F80030 		str	r3, [r9]
 5473 01c8 761B     		subs	r6, r6, r5
 5474              	.LVL816:
 5475              	.L516:
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
 5476              		.loc 1 3624 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 214


 5477 01ca 5EB3     		cbz	r6, .L503
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
 5478              		.loc 1 3626 0
 5479 01cc A169     		ldr	r1, [r4, #24]
 5480 01ce C1F30803 		ubfx	r3, r1, #0, #9
 5481 01d2 002B     		cmp	r3, #0
 5482 01d4 D7D1     		bne	.L498
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {				/* On the cluster boundary? */
 5483              		.loc 1 3627 0
 5484 01d6 039B     		ldr	r3, [sp, #12]
 5485 01d8 5F89     		ldrh	r7, [r3, #10]
 5486 01da 013F     		subs	r7, r7, #1
 5487              	.LVL817:
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
 5488              		.loc 1 3628 0
 5489 01dc 17EA5127 		ands	r7, r7, r1, lsr #9
 5490              	.LVL818:
 5491 01e0 7FF44BAF 		bne	.L499
3629:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;	/* Follow from the origin */
 5492              		.loc 1 3629 0
 5493 01e4 0029     		cmp	r1, #0
 5494 01e6 7FF437AF 		bne	.L500
3630:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) {		/* If no cluster is allocated, */
 5495              		.loc 1 3630 0
 5496 01ea A068     		ldr	r0, [r4, #8]
 5497              	.LVL819:
3631:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
 5498              		.loc 1 3631 0
 5499 01ec 0028     		cmp	r0, #0
 5500 01ee 7FF438AF 		bne	.L501
3632:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5501              		.loc 1 3632 0
 5502 01f2 0198     		ldr	r0, [sp, #4]
 5503              	.LVL820:
 5504 01f4 FFF7FEFF 		bl	create_chain
 5505              	.LVL821:
 5506 01f8 33E7     		b	.L501
 5507              	.LVL822:
 5508              	.L528:
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fs, FR_DISK_ERR);
 5509              		.loc 1 3691 0
 5510 01fa 0123     		movs	r3, #1
 5511 01fc 5246     		mov	r2, r10
 5512 01fe 04F13001 		add	r1, r4, #48
 5513 0202 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 5514 0206 FFF7FEFF 		bl	disk_read
 5515              	.LVL823:
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
 5516              		.loc 1 3690 0
 5517 020a 0028     		cmp	r0, #0
 5518 020c B9D0     		beq	.L514
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5519              		.loc 1 3692 0
 5520 020e 4FF0010A 		mov	r10, #1
 5521              	.LVL824:
 5522 0212 84F815A0 		strb	r10, [r4, #21]
 5523 0216 5146     		mov	r1, r10
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 215


 5524 0218 0398     		ldr	r0, [sp, #12]
 5525 021a FFF7FEFF 		bl	unlock_fs
 5526              	.LVL825:
 5527 021e CDF800A0 		str	r10, [sp]
 5528              	.LVL826:
 5529 0222 0EE7     		b	.L495
 5530              	.LVL827:
 5531              	.L503:
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5532              		.loc 1 3709 0
 5533 0224 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5534 0226 43F04003 		orr	r3, r3, #64
 5535 022a 2375     		strb	r3, [r4, #20]
3711:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5536              		.loc 1 3711 0
 5537 022c 0021     		movs	r1, #0
 5538 022e 0398     		ldr	r0, [sp, #12]
 5539 0230 FFF7FEFF 		bl	unlock_fs
 5540              	.LVL828:
 5541 0234 05E7     		b	.L495
 5542              		.cfi_endproc
 5543              	.LFE174:
 5545              		.section	.text.putc_bfd,"ax",%progbits
 5546              		.align	1
 5547              		.syntax unified
 5548              		.thumb
 5549              		.thumb_func
 5550              		.fpu fpv4-sp-d16
 5552              	putc_bfd:
 5553              	.LFB189:
5910:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
 5554              		.loc 1 5910 0
 5555              		.cfi_startproc
 5556              		@ args = 0, pretend = 0, frame = 8
 5557              		@ frame_needed = 0, uses_anonymous_args = 0
 5558              	.LVL829:
 5559 0000 70B5     		push	{r4, r5, r6, lr}
 5560              	.LCFI63:
 5561              		.cfi_def_cfa_offset 16
 5562              		.cfi_offset 4, -16
 5563              		.cfi_offset 5, -12
 5564              		.cfi_offset 6, -8
 5565              		.cfi_offset 14, -4
 5566 0002 82B0     		sub	sp, sp, #8
 5567              	.LCFI64:
 5568              		.cfi_def_cfa_offset 24
 5569 0004 0446     		mov	r4, r0
 5570 0006 0D46     		mov	r5, r1
5915:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
 5571              		.loc 1 5915 0
 5572 0008 0A29     		cmp	r1, #10
 5573 000a 0DD0     		beq	.L536
 5574              	.LVL830:
 5575              	.L530:
5919:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
 5576              		.loc 1 5919 0
 5577 000c 6368     		ldr	r3, [r4, #4]
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 216


 5578              	.LVL831:
5920:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5579              		.loc 1 5920 0
 5580 000e 002B     		cmp	r3, #0
 5581 0010 08DB     		blt	.L529
5949:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5582              		.loc 1 5949 0
 5583 0012 5E1C     		adds	r6, r3, #1
 5584              	.LVL832:
 5585 0014 2344     		add	r3, r3, r4
 5586 0016 1D73     		strb	r5, [r3, #12]
5952:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
 5587              		.loc 1 5952 0
 5588 0018 3C2E     		cmp	r6, #60
 5589 001a 09DC     		bgt	.L537
 5590              	.LVL833:
 5591              	.L532:
5956:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
 5592              		.loc 1 5956 0
 5593 001c 6660     		str	r6, [r4, #4]
5957:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5594              		.loc 1 5957 0
 5595 001e A368     		ldr	r3, [r4, #8]
 5596 0020 0133     		adds	r3, r3, #1
 5597 0022 A360     		str	r3, [r4, #8]
 5598              	.LVL834:
 5599              	.L529:
5958:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5600              		.loc 1 5958 0
 5601 0024 02B0     		add	sp, sp, #8
 5602              	.LCFI65:
 5603              		.cfi_remember_state
 5604              		.cfi_def_cfa_offset 16
 5605              		@ sp needed
 5606 0026 70BD     		pop	{r4, r5, r6, pc}
 5607              	.LVL835:
 5608              	.L536:
 5609              	.LCFI66:
 5610              		.cfi_restore_state
5916:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5611              		.loc 1 5916 0
 5612 0028 0D21     		movs	r1, #13
 5613              	.LVL836:
 5614 002a FFF7E9FF 		bl	putc_bfd
 5615              	.LVL837:
 5616 002e EDE7     		b	.L530
 5617              	.LVL838:
 5618              	.L537:
5953:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
 5619              		.loc 1 5953 0
 5620 0030 01AB     		add	r3, sp, #4
 5621 0032 3246     		mov	r2, r6
 5622 0034 04F10C01 		add	r1, r4, #12
 5623 0038 2068     		ldr	r0, [r4]
 5624 003a FFF7FEFF 		bl	f_write
 5625              	.LVL839:
5954:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 217


 5626              		.loc 1 5954 0
 5627 003e 019B     		ldr	r3, [sp, #4]
 5628 0040 9E42     		cmp	r6, r3
 5629 0042 02D0     		beq	.L538
 5630 0044 4FF0FF36 		mov	r6, #-1
 5631              	.LVL840:
 5632 0048 E8E7     		b	.L532
 5633              	.LVL841:
 5634              	.L538:
 5635 004a 0026     		movs	r6, #0
 5636              	.LVL842:
 5637 004c E6E7     		b	.L532
 5638              		.cfi_endproc
 5639              	.LFE189:
 5641              		.section	.text.putc_flush,"ax",%progbits
 5642              		.align	1
 5643              		.syntax unified
 5644              		.thumb
 5645              		.thumb_func
 5646              		.fpu fpv4-sp-d16
 5648              	putc_flush:
 5649              	.LFB190:
5965:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
 5650              		.loc 1 5965 0
 5651              		.cfi_startproc
 5652              		@ args = 0, pretend = 0, frame = 8
 5653              		@ frame_needed = 0, uses_anonymous_args = 0
 5654              	.LVL843:
5968:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb->fp, pb->buf, (UINT)pb->idx, &nw) == FR_OK
 5655              		.loc 1 5968 0
 5656 0000 4268     		ldr	r2, [r0, #4]
 5657 0002 002A     		cmp	r2, #0
 5658 0004 10DB     		blt	.L541
5965:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
 5659              		.loc 1 5965 0
 5660 0006 10B5     		push	{r4, lr}
 5661              	.LCFI67:
 5662              		.cfi_def_cfa_offset 8
 5663              		.cfi_offset 4, -8
 5664              		.cfi_offset 14, -4
 5665 0008 82B0     		sub	sp, sp, #8
 5666              	.LCFI68:
 5667              		.cfi_def_cfa_offset 16
 5668 000a 0446     		mov	r4, r0
5969:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb->idx == nw) return pb->nchr;
 5669              		.loc 1 5969 0
 5670 000c 01AB     		add	r3, sp, #4
 5671 000e 00F10C01 		add	r1, r0, #12
 5672 0012 0068     		ldr	r0, [r0]
 5673              	.LVL844:
 5674 0014 FFF7FEFF 		bl	f_write
 5675              	.LVL845:
 5676 0018 48B9     		cbnz	r0, .L542
5970:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 5677              		.loc 1 5970 0
 5678 001a 6268     		ldr	r2, [r4, #4]
 5679 001c 019B     		ldr	r3, [sp, #4]
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 218


 5680 001e 9A42     		cmp	r2, r3
 5681 0020 08D1     		bne	.L543
5970:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 5682              		.loc 1 5970 0 is_stmt 0 discriminator 1
 5683 0022 A068     		ldr	r0, [r4, #8]
 5684              	.L539:
5972:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5685              		.loc 1 5972 0 is_stmt 1
 5686 0024 02B0     		add	sp, sp, #8
 5687              	.LCFI69:
 5688              		.cfi_def_cfa_offset 8
 5689              		@ sp needed
 5690 0026 10BD     		pop	{r4, pc}
 5691              	.LVL846:
 5692              	.L541:
 5693              	.LCFI70:
 5694              		.cfi_def_cfa_offset 0
 5695              		.cfi_restore 4
 5696              		.cfi_restore 14
5971:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5697              		.loc 1 5971 0
 5698 0028 4FF0FF30 		mov	r0, #-1
 5699              	.LVL847:
5972:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5700              		.loc 1 5972 0
 5701 002c 7047     		bx	lr
 5702              	.LVL848:
 5703              	.L542:
 5704              	.LCFI71:
 5705              		.cfi_def_cfa_offset 16
 5706              		.cfi_offset 4, -8
 5707              		.cfi_offset 14, -4
5971:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5708              		.loc 1 5971 0
 5709 002e 4FF0FF30 		mov	r0, #-1
 5710 0032 F7E7     		b	.L539
 5711              	.L543:
 5712 0034 4FF0FF30 		mov	r0, #-1
 5713 0038 F4E7     		b	.L539
 5714              		.cfi_endproc
 5715              	.LFE190:
 5717              		.section	.text.f_sync,"ax",%progbits
 5718              		.align	1
 5719              		.global	f_sync
 5720              		.syntax unified
 5721              		.thumb
 5722              		.thumb_func
 5723              		.fpu fpv4-sp-d16
 5725              	f_sync:
 5726              	.LFB175:
3724:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5727              		.loc 1 3724 0
 5728              		.cfi_startproc
 5729              		@ args = 0, pretend = 0, frame = 8
 5730              		@ frame_needed = 0, uses_anonymous_args = 0
 5731              	.LVL849:
 5732 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 219


 5733              	.LCFI72:
 5734              		.cfi_def_cfa_offset 16
 5735              		.cfi_offset 4, -16
 5736              		.cfi_offset 5, -12
 5737              		.cfi_offset 6, -8
 5738              		.cfi_offset 14, -4
 5739 0002 82B0     		sub	sp, sp, #8
 5740              	.LCFI73:
 5741              		.cfi_def_cfa_offset 24
 5742 0004 0546     		mov	r5, r0
3734:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5743              		.loc 1 3734 0
 5744 0006 01A9     		add	r1, sp, #4
 5745 0008 FFF7FEFF 		bl	validate
 5746              	.LVL850:
3735:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
 5747              		.loc 1 3735 0
 5748 000c 0446     		mov	r4, r0
 5749 000e 78B9     		cbnz	r0, .L549
3736:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5750              		.loc 1 3736 0
 5751 0010 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 5752 0012 13F0400F 		tst	r3, #64
 5753 0016 0BD0     		beq	.L549
3738:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
 5754              		.loc 1 3738 0
 5755 0018 13F0800F 		tst	r3, #128
 5756 001c 0FD1     		bne	.L554
 5757              	.LVL851:
 5758              	.L550:
3744:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 5759              		.loc 1 3744 0
 5760 001e FFF7FEFF 		bl	get_fattime
 5761              	.LVL852:
 5762 0022 0646     		mov	r6, r0
 5763              	.LVL853:
3774:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
 5764              		.loc 1 3774 0
 5765 0024 696A     		ldr	r1, [r5, #36]
 5766 0026 0198     		ldr	r0, [sp, #4]
 5767              	.LVL854:
 5768 0028 FFF7FEFF 		bl	move_window
 5769              	.LVL855:
3775:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = fp->dir_ptr;
 5770              		.loc 1 3775 0
 5771 002c 0446     		mov	r4, r0
 5772 002e D0B1     		cbz	r0, .L555
 5773              	.LVL856:
 5774              	.L549:
3790:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5775              		.loc 1 3790 0
 5776 0030 2146     		mov	r1, r4
 5777 0032 0198     		ldr	r0, [sp, #4]
 5778 0034 FFF7FEFF 		bl	unlock_fs
 5779              	.LVL857:
 5780              	.L552:
3791:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 220


 5781              		.loc 1 3791 0
 5782 0038 2046     		mov	r0, r4
 5783 003a 02B0     		add	sp, sp, #8
 5784              	.LCFI74:
 5785              		.cfi_remember_state
 5786              		.cfi_def_cfa_offset 16
 5787              		@ sp needed
 5788 003c 70BD     		pop	{r4, r5, r6, pc}
 5789              	.LVL858:
 5790              	.L554:
 5791              	.LCFI75:
 5792              		.cfi_restore_state
3739:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5793              		.loc 1 3739 0
 5794 003e 0123     		movs	r3, #1
 5795 0040 2A6A     		ldr	r2, [r5, #32]
 5796 0042 05F13001 		add	r1, r5, #48
 5797 0046 0198     		ldr	r0, [sp, #4]
 5798              	.LVL859:
 5799 0048 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5800 004a FFF7FEFF 		bl	disk_write
 5801              	.LVL860:
 5802 004e 20B9     		cbnz	r0, .L556
3740:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5803              		.loc 1 3740 0
 5804 0050 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 5805 0052 03F07F03 		and	r3, r3, #127
 5806 0056 2B75     		strb	r3, [r5, #20]
 5807 0058 E1E7     		b	.L550
 5808              	.L556:
3739:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5809              		.loc 1 3739 0 discriminator 1
 5810 005a 0121     		movs	r1, #1
 5811 005c 0198     		ldr	r0, [sp, #4]
 5812 005e FFF7FEFF 		bl	unlock_fs
 5813              	.LVL861:
 5814 0062 0124     		movs	r4, #1
 5815 0064 E8E7     		b	.L552
 5816              	.LVL862:
 5817              	.L555:
3776:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
 5818              		.loc 1 3776 0
 5819 0066 AC6A     		ldr	r4, [r5, #40]
 5820              	.LVL863:
3777:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
 5821              		.loc 1 3777 0
 5822 0068 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 5823 006a 43F02003 		orr	r3, r3, #32
 5824 006e E372     		strb	r3, [r4, #11]
3778:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
 5825              		.loc 1 3778 0
 5826 0070 AA68     		ldr	r2, [r5, #8]
 5827 0072 2146     		mov	r1, r4
 5828 0074 2868     		ldr	r0, [r5]
 5829              	.LVL864:
 5830 0076 FFF7FEFF 		bl	st_clust
 5831              	.LVL865:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 221


3779:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
 5832              		.loc 1 3779 0
 5833 007a E968     		ldr	r1, [r5, #12]
 5834 007c 04F11C00 		add	r0, r4, #28
 5835 0080 FFF7FEFF 		bl	st_dword
 5836              	.LVL866:
3780:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
 5837              		.loc 1 3780 0
 5838 0084 3146     		mov	r1, r6
 5839 0086 04F11600 		add	r0, r4, #22
 5840 008a FFF7FEFF 		bl	st_dword
 5841              	.LVL867:
3781:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 5842              		.loc 1 3781 0
 5843 008e 0021     		movs	r1, #0
 5844 0090 04F11200 		add	r0, r4, #18
 5845 0094 FFF7FEFF 		bl	st_word
 5846              	.LVL868:
3782:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
 5847              		.loc 1 3782 0
 5848 0098 019B     		ldr	r3, [sp, #4]
 5849 009a 0122     		movs	r2, #1
 5850 009c DA70     		strb	r2, [r3, #3]
3783:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
 5851              		.loc 1 3783 0
 5852 009e 0198     		ldr	r0, [sp, #4]
 5853 00a0 FFF7FEFF 		bl	sync_fs
 5854              	.LVL869:
 5855 00a4 0446     		mov	r4, r0
 5856              	.LVL870:
3784:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5857              		.loc 1 3784 0
 5858 00a6 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 5859 00a8 23F04003 		bic	r3, r3, #64
 5860 00ac 2B75     		strb	r3, [r5, #20]
 5861 00ae BFE7     		b	.L549
 5862              		.cfi_endproc
 5863              	.LFE175:
 5865              		.section	.text.f_close,"ax",%progbits
 5866              		.align	1
 5867              		.global	f_close
 5868              		.syntax unified
 5869              		.thumb
 5870              		.thumb_func
 5871              		.fpu fpv4-sp-d16
 5873              	f_close:
 5874              	.LFB176:
3805:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5875              		.loc 1 3805 0
 5876              		.cfi_startproc
 5877              		@ args = 0, pretend = 0, frame = 8
 5878              		@ frame_needed = 0, uses_anonymous_args = 0
 5879              	.LVL871:
 5880 0000 30B5     		push	{r4, r5, lr}
 5881              	.LCFI76:
 5882              		.cfi_def_cfa_offset 12
 5883              		.cfi_offset 4, -12
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 222


 5884              		.cfi_offset 5, -8
 5885              		.cfi_offset 14, -4
 5886 0002 83B0     		sub	sp, sp, #12
 5887              	.LCFI77:
 5888              		.cfi_def_cfa_offset 24
 5889 0004 0546     		mov	r5, r0
3810:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
 5890              		.loc 1 3810 0
 5891 0006 FFF7FEFF 		bl	f_sync
 5892              	.LVL872:
3811:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5893              		.loc 1 3811 0
 5894 000a 0446     		mov	r4, r0
 5895 000c 10B1     		cbz	r0, .L561
 5896              	.LVL873:
 5897              	.L558:
3829:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5898              		.loc 1 3829 0
 5899 000e 2046     		mov	r0, r4
 5900 0010 03B0     		add	sp, sp, #12
 5901              	.LCFI78:
 5902              		.cfi_remember_state
 5903              		.cfi_def_cfa_offset 12
 5904              		@ sp needed
 5905 0012 30BD     		pop	{r4, r5, pc}
 5906              	.LVL874:
 5907              	.L561:
 5908              	.LCFI79:
 5909              		.cfi_restore_state
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 5910              		.loc 1 3814 0
 5911 0014 01A9     		add	r1, sp, #4
 5912 0016 2846     		mov	r0, r5
 5913              	.LVL875:
 5914 0018 FFF7FEFF 		bl	validate
 5915              	.LVL876:
3815:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 5916              		.loc 1 3815 0
 5917 001c 0446     		mov	r4, r0
 5918 001e 0028     		cmp	r0, #0
 5919 0020 F5D1     		bne	.L558
3817:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
 5920              		.loc 1 3817 0
 5921 0022 2869     		ldr	r0, [r5, #16]
 5922              	.LVL877:
 5923 0024 FFF7FEFF 		bl	dec_lock
 5924              	.LVL878:
3818:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5925              		.loc 1 3818 0
 5926 0028 0446     		mov	r4, r0
 5927 002a 08B9     		cbnz	r0, .L559
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5928              		.loc 1 3821 0
 5929 002c 0023     		movs	r3, #0
 5930 002e 2B60     		str	r3, [r5]
 5931              	.L559:
3824:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 223


 5932              		.loc 1 3824 0
 5933 0030 0021     		movs	r1, #0
 5934 0032 0198     		ldr	r0, [sp, #4]
 5935              	.LVL879:
 5936 0034 FFF7FEFF 		bl	unlock_fs
 5937              	.LVL880:
 5938 0038 E9E7     		b	.L558
 5939              		.cfi_endproc
 5940              	.LFE176:
 5942              		.section	.text.f_lseek,"ax",%progbits
 5943              		.align	1
 5944              		.global	f_lseek
 5945              		.syntax unified
 5946              		.thumb
 5947              		.thumb_func
 5948              		.fpu fpv4-sp-d16
 5950              	f_lseek:
 5951              	.LFB177:
3994:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5952              		.loc 1 3994 0
 5953              		.cfi_startproc
 5954              		@ args = 0, pretend = 0, frame = 16
 5955              		@ frame_needed = 0, uses_anonymous_args = 0
 5956              	.LVL881:
 5957 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5958              	.LCFI80:
 5959              		.cfi_def_cfa_offset 36
 5960              		.cfi_offset 4, -36
 5961              		.cfi_offset 5, -32
 5962              		.cfi_offset 6, -28
 5963              		.cfi_offset 7, -24
 5964              		.cfi_offset 8, -20
 5965              		.cfi_offset 9, -16
 5966              		.cfi_offset 10, -12
 5967              		.cfi_offset 11, -8
 5968              		.cfi_offset 14, -4
 5969 0004 85B0     		sub	sp, sp, #20
 5970              	.LCFI81:
 5971              		.cfi_def_cfa_offset 56
 5972 0006 0446     		mov	r4, r0
 5973 0008 0E46     		mov	r6, r1
4003:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
 5974              		.loc 1 4003 0
 5975 000a 0190     		str	r0, [sp, #4]
 5976 000c 03A9     		add	r1, sp, #12
 5977              	.LVL882:
 5978 000e FFF7FEFF 		bl	validate
 5979              	.LVL883:
4004:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 5980              		.loc 1 4004 0
 5981 0012 0546     		mov	r5, r0
 5982 0014 00B9     		cbnz	r0, .L563
4004:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 5983              		.loc 1 4004 0 is_stmt 0 discriminator 1
 5984 0016 657D     		ldrb	r5, [r4, #21]	@ zero_extendqisi2
 5985              	.LVL884:
 5986              	.L563:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 224


4010:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5987              		.loc 1 4010 0 is_stmt 1
 5988 0018 ADB9     		cbnz	r5, .L608
4013:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
 5989              		.loc 1 4013 0
 5990 001a E36A     		ldr	r3, [r4, #44]
 5991 001c 002B     		cmp	r3, #0
 5992 001e 00F0A880 		beq	.L566
4014:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
 5993              		.loc 1 4014 0
 5994 0022 B6F1FF3F 		cmp	r6, #-1
 5995 0026 13D0     		beq	.L609
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
 5996              		.loc 1 4040 0
 5997 0028 E768     		ldr	r7, [r4, #12]
 5998 002a B742     		cmp	r7, r6
 5999 002c 00D3     		bcc	.L575
 6000 002e 3746     		mov	r7, r6
 6001              	.L575:
 6002              	.LVL885:
4041:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
 6003              		.loc 1 4041 0
 6004 0030 A761     		str	r7, [r4, #24]
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
 6005              		.loc 1 4042 0
 6006 0032 002F     		cmp	r7, #0
 6007 0034 51D1     		bne	.L610
 6008              	.LVL886:
 6009              	.L574:
4141:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6010              		.loc 1 4141 0
 6011 0036 2946     		mov	r1, r5
 6012 0038 0398     		ldr	r0, [sp, #12]
 6013 003a FFF7FEFF 		bl	unlock_fs
 6014              	.LVL887:
 6015              	.L565:
4142:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6016              		.loc 1 4142 0
 6017 003e 2846     		mov	r0, r5
 6018 0040 05B0     		add	sp, sp, #20
 6019              	.LCFI82:
 6020              		.cfi_remember_state
 6021              		.cfi_def_cfa_offset 36
 6022              		@ sp needed
 6023 0042 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6024              	.LVL888:
 6025              	.L608:
 6026              	.LCFI83:
 6027              		.cfi_restore_state
4010:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6028              		.loc 1 4010 0 discriminator 1
 6029 0046 2946     		mov	r1, r5
 6030 0048 0398     		ldr	r0, [sp, #12]
 6031 004a FFF7FEFF 		bl	unlock_fs
 6032              	.LVL889:
 6033 004e F6E7     		b	.L565
 6034              	.L609:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 225


 6035              	.LVL890:
4016:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 6036              		.loc 1 4016 0
 6037 0050 03F1040B 		add	fp, r3, #4
 6038              	.LVL891:
 6039 0054 D3F800A0 		ldr	r10, [r3]
 6040              	.LVL892:
4017:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
 6041              		.loc 1 4017 0
 6042 0058 D4F80890 		ldr	r9, [r4, #8]
 6043              	.LVL893:
4018:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 6044              		.loc 1 4018 0
 6045 005c B9F1000F 		cmp	r9, #0
 6046 0060 2FD0     		beq	.L600
4016:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 6047              		.loc 1 4016 0
 6048 0062 4FF00208 		mov	r8, #2
 6049              	.LVL894:
 6050              	.L573:
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 6051              		.loc 1 4021 0
 6052 0066 08F10208 		add	r8, r8, #2
 6053              	.LVL895:
 6054 006a 4E46     		mov	r6, r9
 6055 006c 0027     		movs	r7, #0
 6056              	.LVL896:
 6057              	.L571:
4023:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(&fp->obj, cl);
 6058              		.loc 1 4023 0
 6059 006e 0137     		adds	r7, r7, #1
 6060              	.LVL897:
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 6061              		.loc 1 4024 0
 6062 0070 3146     		mov	r1, r6
 6063 0072 0198     		ldr	r0, [sp, #4]
 6064 0074 FFF7FEFF 		bl	get_fat
 6065              	.LVL898:
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6066              		.loc 1 4025 0
 6067 0078 0128     		cmp	r0, #1
 6068 007a 14D9     		bls	.L611
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 6069              		.loc 1 4026 0
 6070 007c B0F1FF3F 		cmp	r0, #-1
 6071 0080 18D0     		beq	.L612
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 6072              		.loc 1 4027 0
 6073 0082 731C     		adds	r3, r6, #1
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 6074              		.loc 1 4024 0
 6075 0084 0646     		mov	r6, r0
 6076              	.LVL899:
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 6077              		.loc 1 4027 0
 6078 0086 8342     		cmp	r3, r0
 6079 0088 F1D0     		beq	.L571
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 226


4028:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
 6080              		.loc 1 4028 0
 6081 008a C245     		cmp	r10, r8
 6082 008c 05D3     		bcc	.L572
 6083              	.LVL900:
4029:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6084              		.loc 1 4029 0
 6085 008e 5B46     		mov	r3, fp
 6086              	.LVL901:
 6087 0090 43F8087B 		str	r7, [r3], #8
 6088              	.LVL902:
 6089 0094 CBF80490 		str	r9, [fp, #4]
 6090 0098 9B46     		mov	fp, r3
 6091              	.LVL903:
 6092              	.L572:
4031:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6093              		.loc 1 4031 0
 6094 009a 039B     		ldr	r3, [sp, #12]
 6095 009c 9B69     		ldr	r3, [r3, #24]
 6096 009e 8342     		cmp	r3, r0
 6097 00a0 11D9     		bls	.L568
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 6098              		.loc 1 4024 0
 6099 00a2 8146     		mov	r9, r0
 6100              	.LVL904:
 6101 00a4 DFE7     		b	.L573
 6102              	.LVL905:
 6103              	.L611:
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6104              		.loc 1 4025 0 discriminator 1
 6105 00a6 0225     		movs	r5, #2
 6106              	.LVL906:
 6107 00a8 6575     		strb	r5, [r4, #21]
 6108 00aa 2946     		mov	r1, r5
 6109 00ac 0398     		ldr	r0, [sp, #12]
 6110              	.LVL907:
 6111 00ae FFF7FEFF 		bl	unlock_fs
 6112              	.LVL908:
 6113 00b2 C4E7     		b	.L565
 6114              	.LVL909:
 6115              	.L612:
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 6116              		.loc 1 4026 0 discriminator 1
 6117 00b4 0125     		movs	r5, #1
 6118              	.LVL910:
 6119 00b6 6575     		strb	r5, [r4, #21]
 6120 00b8 2946     		mov	r1, r5
 6121 00ba 0398     		ldr	r0, [sp, #12]
 6122              	.LVL911:
 6123 00bc FFF7FEFF 		bl	unlock_fs
 6124              	.LVL912:
 6125 00c0 BDE7     		b	.L565
 6126              	.LVL913:
 6127              	.L600:
4016:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 6128              		.loc 1 4016 0
 6129 00c2 4FF00208 		mov	r8, #2
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 227


 6130              	.LVL914:
 6131              	.L568:
4033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen) {
 6132              		.loc 1 4033 0
 6133 00c6 E36A     		ldr	r3, [r4, #44]
 6134 00c8 C3F80080 		str	r8, [r3]
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
 6135              		.loc 1 4034 0
 6136 00cc D045     		cmp	r8, r10
 6137 00ce 00F21881 		bhi	.L602
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 6138              		.loc 1 4035 0
 6139 00d2 0023     		movs	r3, #0
 6140 00d4 CBF80030 		str	r3, [fp]
 6141 00d8 ADE7     		b	.L574
 6142              	.LVL915:
 6143              	.L610:
4043:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
 6144              		.loc 1 4043 0
 6145 00da 07F1FF39 		add	r9, r7, #-1
 6146 00de 4946     		mov	r1, r9
 6147 00e0 2046     		mov	r0, r4
 6148 00e2 FFF7FEFF 		bl	clmt_clust
 6149              	.LVL916:
 6150 00e6 0146     		mov	r1, r0
 6151 00e8 E061     		str	r0, [r4, #28]
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fs, FR_INT_ERR);
 6152              		.loc 1 4044 0
 6153 00ea DDF80C80 		ldr	r8, [sp, #12]
 6154 00ee 4046     		mov	r0, r8
 6155 00f0 FFF7FEFF 		bl	clust2sect
 6156              	.LVL917:
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 6157              		.loc 1 4045 0
 6158 00f4 D8B1     		cbz	r0, .L613
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
 6159              		.loc 1 4046 0
 6160 00f6 B8F80A60 		ldrh	r6, [r8, #10]
 6161 00fa 013E     		subs	r6, r6, #1
 6162 00fc 06EA5926 		and	r6, r6, r9, lsr #9
 6163 0100 0644     		add	r6, r6, r0
 6164              	.LVL918:
4047:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6165              		.loc 1 4047 0
 6166 0102 C7F30807 		ubfx	r7, r7, #0, #9
 6167              	.LVL919:
 6168 0106 002F     		cmp	r7, #0
 6169 0108 95D0     		beq	.L574
4047:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6170              		.loc 1 4047 0 is_stmt 0 discriminator 1
 6171 010a 226A     		ldr	r2, [r4, #32]
 6172 010c B242     		cmp	r2, r6
 6173 010e 92D0     		beq	.L574
4050:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 6174              		.loc 1 4050 0 is_stmt 1
 6175 0110 94F91430 		ldrsb	r3, [r4, #20]
 6176 0114 002B     		cmp	r3, #0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 228


 6177 0116 11DB     		blt	.L614
 6178              	.L577:
4055:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6179              		.loc 1 4055 0
 6180 0118 0123     		movs	r3, #1
 6181 011a 3246     		mov	r2, r6
 6182 011c 04F13001 		add	r1, r4, #48
 6183 0120 0398     		ldr	r0, [sp, #12]
 6184 0122 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 6185 0124 FFF7FEFF 		bl	disk_read
 6186              	.LVL920:
 6187 0128 E0B9     		cbnz	r0, .L615
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6188              		.loc 1 4057 0
 6189 012a 2662     		str	r6, [r4, #32]
 6190 012c 83E7     		b	.L574
 6191              	.LVL921:
 6192              	.L613:
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 6193              		.loc 1 4045 0 discriminator 1
 6194 012e 0225     		movs	r5, #2
 6195              	.LVL922:
 6196 0130 6575     		strb	r5, [r4, #21]
 6197 0132 2946     		mov	r1, r5
 6198 0134 4046     		mov	r0, r8
 6199              	.LVL923:
 6200 0136 FFF7FEFF 		bl	unlock_fs
 6201              	.LVL924:
 6202 013a 80E7     		b	.L565
 6203              	.LVL925:
 6204              	.L614:
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 6205              		.loc 1 4051 0
 6206 013c 0123     		movs	r3, #1
 6207 013e 04F13001 		add	r1, r4, #48
 6208 0142 98F80100 		ldrb	r0, [r8, #1]	@ zero_extendqisi2
 6209 0146 FFF7FEFF 		bl	disk_write
 6210              	.LVL926:
 6211 014a 20B9     		cbnz	r0, .L616
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6212              		.loc 1 4052 0
 6213 014c 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 6214 014e 03F07F03 		and	r3, r3, #127
 6215 0152 2375     		strb	r3, [r4, #20]
 6216 0154 E0E7     		b	.L577
 6217              	.L616:
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 6218              		.loc 1 4051 0 discriminator 1
 6219 0156 0125     		movs	r5, #1
 6220              	.LVL927:
 6221 0158 6575     		strb	r5, [r4, #21]
 6222 015a 2946     		mov	r1, r5
 6223 015c 0398     		ldr	r0, [sp, #12]
 6224 015e FFF7FEFF 		bl	unlock_fs
 6225              	.LVL928:
 6226 0162 6CE7     		b	.L565
 6227              	.LVL929:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 229


 6228              	.L615:
4055:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6229              		.loc 1 4055 0 discriminator 1
 6230 0164 0125     		movs	r5, #1
 6231              	.LVL930:
 6232 0166 6575     		strb	r5, [r4, #21]
 6233 0168 2946     		mov	r1, r5
 6234 016a 0398     		ldr	r0, [sp, #12]
 6235 016c FFF7FEFF 		bl	unlock_fs
 6236              	.LVL931:
 6237 0170 65E7     		b	.L565
 6238              	.LVL932:
 6239              	.L566:
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
 6240              		.loc 1 4069 0
 6241 0172 E368     		ldr	r3, [r4, #12]
 6242 0174 B342     		cmp	r3, r6
 6243 0176 04D2     		bcs	.L580
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
 6244              		.loc 1 4069 0 is_stmt 0 discriminator 1
 6245 0178 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 6246 017a 12F0020F 		tst	r2, #2
 6247 017e 00D1     		bne	.L580
4070:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6248              		.loc 1 4070 0 is_stmt 1
 6249 0180 1E46     		mov	r6, r3
 6250              	.LVL933:
 6251              	.L580:
4072:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
 6252              		.loc 1 4072 0
 6253 0182 A369     		ldr	r3, [r4, #24]
 6254              	.LVL934:
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 6255              		.loc 1 4073 0
 6256 0184 0022     		movs	r2, #0
 6257 0186 A261     		str	r2, [r4, #24]
4074:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
 6258              		.loc 1 4074 0
 6259 0188 002E     		cmp	r6, #0
 6260 018a 7BD0     		beq	.L604
4075:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
 6261              		.loc 1 4075 0
 6262 018c 039A     		ldr	r2, [sp, #12]
 6263 018e B2F80A80 		ldrh	r8, [r2, #10]
 6264 0192 4FEA4828 		lsl	r8, r8, #9
 6265              	.LVL935:
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 6266              		.loc 1 4076 0
 6267 0196 73B1     		cbz	r3, .L582
4077:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
 6268              		.loc 1 4077 0 discriminator 1
 6269 0198 721E     		subs	r2, r6, #1
 6270 019a B2FBF8F2 		udiv	r2, r2, r8
 6271 019e 013B     		subs	r3, r3, #1
 6272              	.LVL936:
 6273 01a0 B3FBF8F1 		udiv	r1, r3, r8
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 230


 6274              		.loc 1 4076 0 discriminator 1
 6275 01a4 8A42     		cmp	r2, r1
 6276 01a6 06D3     		bcc	.L582
4078:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
 6277              		.loc 1 4078 0
 6278 01a8 C8F10002 		rsb	r2, r8, #0
 6279 01ac 1340     		ands	r3, r3, r2
 6280              	.LVL937:
 6281 01ae A361     		str	r3, [r4, #24]
4079:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
 6282              		.loc 1 4079 0
 6283 01b0 F61A     		subs	r6, r6, r3
 6284              	.LVL938:
4080:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
 6285              		.loc 1 4080 0
 6286 01b2 E769     		ldr	r7, [r4, #28]
 6287              	.LVL939:
 6288 01b4 02E0     		b	.L583
 6289              	.LVL940:
 6290              	.L582:
4082:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 6291              		.loc 1 4082 0
 6292 01b6 A768     		ldr	r7, [r4, #8]
 6293              	.LVL941:
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&fp->obj, 0);
 6294              		.loc 1 4084 0
 6295 01b8 17B1     		cbz	r7, .L617
 6296              	.L584:
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6297              		.loc 1 4091 0
 6298 01ba E761     		str	r7, [r4, #28]
 6299              	.L583:
4093:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
 6300              		.loc 1 4093 0
 6301 01bc 4FBB     		cbnz	r7, .L587
 6302 01be 62E0     		b	.L581
 6303              	.L617:
4085:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
 6304              		.loc 1 4085 0
 6305 01c0 0021     		movs	r1, #0
 6306 01c2 2046     		mov	r0, r4
 6307 01c4 FFF7FEFF 		bl	create_chain
 6308              	.LVL942:
 6309 01c8 0746     		mov	r7, r0
 6310              	.LVL943:
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6311              		.loc 1 4086 0
 6312 01ca 0128     		cmp	r0, #1
 6313 01cc 04D0     		beq	.L618
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
 6314              		.loc 1 4087 0
 6315 01ce B0F1FF3F 		cmp	r0, #-1
 6316 01d2 08D0     		beq	.L619
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6317              		.loc 1 4088 0
 6318 01d4 A060     		str	r0, [r4, #8]
 6319 01d6 F0E7     		b	.L584
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 231


 6320              	.L618:
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6321              		.loc 1 4086 0 discriminator 1
 6322 01d8 0225     		movs	r5, #2
 6323              	.LVL944:
 6324 01da 6575     		strb	r5, [r4, #21]
 6325 01dc 2946     		mov	r1, r5
 6326 01de 0398     		ldr	r0, [sp, #12]
 6327              	.LVL945:
 6328 01e0 FFF7FEFF 		bl	unlock_fs
 6329              	.LVL946:
 6330 01e4 2BE7     		b	.L565
 6331              	.LVL947:
 6332              	.L619:
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
 6333              		.loc 1 4087 0 discriminator 1
 6334 01e6 0125     		movs	r5, #1
 6335              	.LVL948:
 6336 01e8 6575     		strb	r5, [r4, #21]
 6337 01ea 2946     		mov	r1, r5
 6338 01ec 0398     		ldr	r0, [sp, #12]
 6339              	.LVL949:
 6340 01ee FFF7FEFF 		bl	unlock_fs
 6341              	.LVL950:
 6342 01f2 24E7     		b	.L565
 6343              	.LVL951:
 6344              	.L588:
4109:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6345              		.loc 1 4109 0
 6346 01f4 3946     		mov	r1, r7
 6347 01f6 0198     		ldr	r0, [sp, #4]
 6348 01f8 FFF7FEFF 		bl	get_fat
 6349              	.LVL952:
 6350 01fc 0746     		mov	r7, r0
 6351              	.LVL953:
 6352              	.L590:
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 6353              		.loc 1 4111 0
 6354 01fe B7F1FF3F 		cmp	r7, #-1
 6355 0202 2AD0     		beq	.L620
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 6356              		.loc 1 4112 0
 6357 0204 012F     		cmp	r7, #1
 6358 0206 2FD9     		bls	.L592
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 6359              		.loc 1 4112 0 is_stmt 0 discriminator 2
 6360 0208 039B     		ldr	r3, [sp, #12]
 6361 020a 9B69     		ldr	r3, [r3, #24]
 6362 020c BB42     		cmp	r3, r7
 6363 020e 2BD9     		bls	.L592
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6364              		.loc 1 4113 0 is_stmt 1
 6365 0210 E761     		str	r7, [r4, #28]
 6366              	.LVL954:
 6367              	.L587:
4094:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
 6368              		.loc 1 4094 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 232


 6369 0212 4645     		cmp	r6, r8
 6370 0214 10D9     		bls	.L589
4095:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 6371              		.loc 1 4095 0
 6372 0216 A6EB0806 		sub	r6, r6, r8
 6373              	.LVL955:
 6374 021a A369     		ldr	r3, [r4, #24]
 6375 021c 4344     		add	r3, r3, r8
 6376 021e A361     		str	r3, [r4, #24]
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
 6377              		.loc 1 4097 0
 6378 0220 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 6379 0222 13F0020F 		tst	r3, #2
 6380 0226 E5D0     		beq	.L588
4102:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
 6381              		.loc 1 4102 0
 6382 0228 3946     		mov	r1, r7
 6383 022a 0198     		ldr	r0, [sp, #4]
 6384 022c FFF7FEFF 		bl	create_chain
 6385              	.LVL956:
4103:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = 0; break;
 6386              		.loc 1 4103 0
 6387 0230 0746     		mov	r7, r0
 6388 0232 0028     		cmp	r0, #0
 6389 0234 E3D1     		bne	.L590
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 6390              		.loc 1 4104 0
 6391 0236 0026     		movs	r6, #0
 6392              	.LVL957:
 6393              	.L589:
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fs)) {
 6394              		.loc 1 4115 0
 6395 0238 A369     		ldr	r3, [r4, #24]
 6396 023a 3344     		add	r3, r3, r6
 6397 023c A361     		str	r3, [r4, #24]
4116:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
 6398              		.loc 1 4116 0
 6399 023e C6F30803 		ubfx	r3, r6, #0, #9
 6400 0242 002B     		cmp	r3, #0
 6401 0244 40D0     		beq	.L606
4117:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fs, FR_INT_ERR);
 6402              		.loc 1 4117 0
 6403 0246 DDF80C80 		ldr	r8, [sp, #12]
 6404              	.LVL958:
 6405 024a 3946     		mov	r1, r7
 6406 024c 4046     		mov	r0, r8
 6407 024e FFF7FEFF 		bl	clust2sect
 6408              	.LVL959:
4118:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 6409              		.loc 1 4118 0
 6410 0252 80B1     		cbz	r0, .L621
4119:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6411              		.loc 1 4119 0
 6412 0254 00EB5627 		add	r7, r0, r6, lsr #9
 6413              	.LVL960:
 6414 0258 15E0     		b	.L581
 6415              	.LVL961:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 233


 6416              	.L620:
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 6417              		.loc 1 4111 0 discriminator 1
 6418 025a 0125     		movs	r5, #1
 6419              	.LVL962:
 6420 025c 6575     		strb	r5, [r4, #21]
 6421 025e 2946     		mov	r1, r5
 6422 0260 0398     		ldr	r0, [sp, #12]
 6423              	.LVL963:
 6424 0262 FFF7FEFF 		bl	unlock_fs
 6425              	.LVL964:
 6426 0266 EAE6     		b	.L565
 6427              	.LVL965:
 6428              	.L592:
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 6429              		.loc 1 4112 0 discriminator 3
 6430 0268 0225     		movs	r5, #2
 6431              	.LVL966:
 6432 026a 6575     		strb	r5, [r4, #21]
 6433 026c 2946     		mov	r1, r5
 6434 026e 0398     		ldr	r0, [sp, #12]
 6435              	.LVL967:
 6436 0270 FFF7FEFF 		bl	unlock_fs
 6437              	.LVL968:
 6438 0274 E3E6     		b	.L565
 6439              	.LVL969:
 6440              	.L621:
4118:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 6441              		.loc 1 4118 0 discriminator 1
 6442 0276 0225     		movs	r5, #2
 6443              	.LVL970:
 6444 0278 6575     		strb	r5, [r4, #21]
 6445 027a 2946     		mov	r1, r5
 6446 027c 4046     		mov	r0, r8
 6447              	.LVL971:
 6448 027e FFF7FEFF 		bl	unlock_fs
 6449              	.LVL972:
 6450 0282 DCE6     		b	.L565
 6451              	.LVL973:
 6452              	.L604:
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 6453              		.loc 1 4073 0
 6454 0284 0027     		movs	r7, #0
 6455              	.LVL974:
 6456              	.L581:
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fp->fptr;
 6457              		.loc 1 4123 0
 6458 0286 A369     		ldr	r3, [r4, #24]
 6459 0288 E268     		ldr	r2, [r4, #12]
 6460 028a 9342     		cmp	r3, r2
 6461 028c 04D9     		bls	.L596
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
 6462              		.loc 1 4124 0
 6463 028e E360     		str	r3, [r4, #12]
4125:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6464              		.loc 1 4125 0
 6465 0290 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 234


 6466 0292 42F04002 		orr	r2, r2, #64
 6467 0296 2275     		strb	r2, [r4, #20]
 6468              	.L596:
4127:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6469              		.loc 1 4127 0
 6470 0298 C3F30803 		ubfx	r3, r3, #0, #9
 6471 029c 002B     		cmp	r3, #0
 6472 029e 3FF4CAAE 		beq	.L574
4127:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6473              		.loc 1 4127 0 is_stmt 0 discriminator 1
 6474 02a2 226A     		ldr	r2, [r4, #32]
 6475 02a4 BA42     		cmp	r2, r7
 6476 02a6 3FF4C6AE 		beq	.L574
4130:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 6477              		.loc 1 4130 0 is_stmt 1
 6478 02aa 94F91430 		ldrsb	r3, [r4, #20]
 6479 02ae 002B     		cmp	r3, #0
 6480 02b0 0CDB     		blt	.L622
 6481              	.L597:
4135:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6482              		.loc 1 4135 0
 6483 02b2 0123     		movs	r3, #1
 6484 02b4 3A46     		mov	r2, r7
 6485 02b6 04F13001 		add	r1, r4, #48
 6486 02ba 0398     		ldr	r0, [sp, #12]
 6487 02bc 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 6488 02be FFF7FEFF 		bl	disk_read
 6489              	.LVL975:
 6490 02c2 B8B9     		cbnz	r0, .L623
4137:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6491              		.loc 1 4137 0
 6492 02c4 2762     		str	r7, [r4, #32]
 6493 02c6 B6E6     		b	.L574
 6494              	.LVL976:
 6495              	.L606:
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 6496              		.loc 1 4073 0
 6497 02c8 0027     		movs	r7, #0
 6498              	.LVL977:
 6499 02ca DCE7     		b	.L581
 6500              	.LVL978:
 6501              	.L622:
4131:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 6502              		.loc 1 4131 0
 6503 02cc 0123     		movs	r3, #1
 6504 02ce 04F13001 		add	r1, r4, #48
 6505 02d2 0398     		ldr	r0, [sp, #12]
 6506 02d4 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 6507 02d6 FFF7FEFF 		bl	disk_write
 6508              	.LVL979:
 6509 02da 20B9     		cbnz	r0, .L624
4132:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6510              		.loc 1 4132 0
 6511 02dc 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 6512 02de 03F07F03 		and	r3, r3, #127
 6513 02e2 2375     		strb	r3, [r4, #20]
 6514 02e4 E5E7     		b	.L597
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 235


 6515              	.L624:
4131:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 6516              		.loc 1 4131 0 discriminator 1
 6517 02e6 0125     		movs	r5, #1
 6518              	.LVL980:
 6519 02e8 6575     		strb	r5, [r4, #21]
 6520 02ea 2946     		mov	r1, r5
 6521 02ec 0398     		ldr	r0, [sp, #12]
 6522 02ee FFF7FEFF 		bl	unlock_fs
 6523              	.LVL981:
 6524 02f2 A4E6     		b	.L565
 6525              	.LVL982:
 6526              	.L623:
4135:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6527              		.loc 1 4135 0 discriminator 1
 6528 02f4 0125     		movs	r5, #1
 6529              	.LVL983:
 6530 02f6 6575     		strb	r5, [r4, #21]
 6531 02f8 2946     		mov	r1, r5
 6532 02fa 0398     		ldr	r0, [sp, #12]
 6533 02fc FFF7FEFF 		bl	unlock_fs
 6534              	.LVL984:
 6535 0300 9DE6     		b	.L565
 6536              	.LVL985:
 6537              	.L602:
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6538              		.loc 1 4037 0
 6539 0302 1125     		movs	r5, #17
 6540              	.LVL986:
 6541 0304 97E6     		b	.L574
 6542              		.cfi_endproc
 6543              	.LFE177:
 6545              		.section	.text.f_opendir,"ax",%progbits
 6546              		.align	1
 6547              		.global	f_opendir
 6548              		.syntax unified
 6549              		.thumb
 6550              		.thumb_func
 6551              		.fpu fpv4-sp-d16
 6553              	f_opendir:
 6554              	.LFB178:
4155:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6555              		.loc 1 4155 0
 6556              		.cfi_startproc
 6557              		@ args = 0, pretend = 0, frame = 16
 6558              		@ frame_needed = 0, uses_anonymous_args = 0
 6559              	.LVL987:
 6560 0000 30B5     		push	{r4, r5, lr}
 6561              	.LCFI84:
 6562              		.cfi_def_cfa_offset 12
 6563              		.cfi_offset 4, -12
 6564              		.cfi_offset 5, -8
 6565              		.cfi_offset 14, -4
 6566 0002 85B0     		sub	sp, sp, #20
 6567              	.LCFI85:
 6568              		.cfi_def_cfa_offset 32
 6569 0004 0191     		str	r1, [sp, #4]
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 236


4162:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6570              		.loc 1 4162 0
 6571 0006 0028     		cmp	r0, #0
 6572 0008 41D0     		beq	.L633
 6573 000a 0546     		mov	r5, r0
 6574              	.LVL988:
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6575              		.loc 1 4166 0
 6576 000c 0022     		movs	r2, #0
 6577 000e 03A9     		add	r1, sp, #12
 6578              	.LVL989:
 6579 0010 01A8     		add	r0, sp, #4
 6580              	.LVL990:
 6581 0012 FFF7FEFF 		bl	find_volume
 6582              	.LVL991:
4167:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->fs = fs;
 6583              		.loc 1 4167 0
 6584 0016 0446     		mov	r4, r0
 6585 0018 48B1     		cbz	r0, .L638
 6586              	.L627:
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6587              		.loc 1 4209 0
 6588 001a 0CB1     		cbz	r4, .L632
 6589              	.L631:
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6590              		.loc 1 4209 0 is_stmt 0 discriminator 1
 6591 001c 0023     		movs	r3, #0
 6592 001e 2B60     		str	r3, [r5]
 6593              	.L632:
4211:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6594              		.loc 1 4211 0 is_stmt 1
 6595 0020 2146     		mov	r1, r4
 6596 0022 0398     		ldr	r0, [sp, #12]
 6597 0024 FFF7FEFF 		bl	unlock_fs
 6598              	.LVL992:
 6599              	.L626:
4212:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6600              		.loc 1 4212 0
 6601 0028 2046     		mov	r0, r4
 6602 002a 05B0     		add	sp, sp, #20
 6603              	.LCFI86:
 6604              		.cfi_remember_state
 6605              		.cfi_def_cfa_offset 12
 6606              		@ sp needed
 6607 002c 30BD     		pop	{r4, r5, pc}
 6608              	.LVL993:
 6609              	.L638:
 6610              	.LCFI87:
 6611              		.cfi_restore_state
4168:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 6612              		.loc 1 4168 0
 6613 002e 039B     		ldr	r3, [sp, #12]
 6614 0030 2B60     		str	r3, [r5]
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
 6615              		.loc 1 4170 0
 6616 0032 0199     		ldr	r1, [sp, #4]
 6617 0034 2846     		mov	r0, r5
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 237


 6618 0036 FFF7FEFF 		bl	follow_path
 6619              	.LVL994:
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
 6620              		.loc 1 4171 0
 6621 003a 0446     		mov	r4, r0
 6622 003c 18BB     		cbnz	r0, .L628
4172:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
 6623              		.loc 1 4172 0
 6624 003e 95F92F30 		ldrsb	r3, [r5, #47]
 6625 0042 002B     		cmp	r3, #0
 6626 0044 08DB     		blt	.L629
4173:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 6627              		.loc 1 4173 0
 6628 0046 AB79     		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 6629 0048 13F0100F 		tst	r3, #16
 6630 004c 1AD0     		beq	.L634
4185:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6631              		.loc 1 4185 0
 6632 004e 296A     		ldr	r1, [r5, #32]
 6633 0050 0398     		ldr	r0, [sp, #12]
 6634 0052 FFF7FEFF 		bl	ld_clust
 6635              	.LVL995:
 6636 0056 A860     		str	r0, [r5, #8]
 6637              	.L629:
4192:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
 6638              		.loc 1 4192 0
 6639 0058 039B     		ldr	r3, [sp, #12]
 6640 005a DB88     		ldrh	r3, [r3, #6]
 6641 005c AB80     		strh	r3, [r5, #4]	@ movhi
4193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 6642              		.loc 1 4193 0
 6643 005e 0021     		movs	r1, #0
 6644 0060 2846     		mov	r0, r5
 6645 0062 FFF7FEFF 		bl	dir_sdi
 6646              	.LVL996:
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->sclust) {
 6647              		.loc 1 4195 0
 6648 0066 0446     		mov	r4, r0
 6649 0068 68B9     		cbnz	r0, .L628
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
 6650              		.loc 1 4196 0
 6651 006a AB68     		ldr	r3, [r5, #8]
 6652 006c 13B9     		cbnz	r3, .L639
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6653              		.loc 1 4200 0
 6654 006e 0023     		movs	r3, #0
 6655 0070 2B61     		str	r3, [r5, #16]
 6656 0072 08E0     		b	.L628
 6657              	.L639:
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
 6658              		.loc 1 4197 0
 6659 0074 0021     		movs	r1, #0
 6660 0076 2846     		mov	r0, r5
 6661 0078 FFF7FEFF 		bl	inc_lock
 6662              	.LVL997:
 6663 007c 2861     		str	r0, [r5, #16]
4198:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 238


 6664              		.loc 1 4198 0
 6665 007e 10B9     		cbnz	r0, .L628
 6666              	.LVL998:
 6667 0080 1224     		movs	r4, #18
 6668 0082 CAE7     		b	.L627
 6669              	.LVL999:
 6670              	.L634:
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6671              		.loc 1 4188 0
 6672 0084 0524     		movs	r4, #5
 6673              	.LVL1000:
 6674              	.L628:
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6675              		.loc 1 4207 0
 6676 0086 042C     		cmp	r4, #4
 6677 0088 C7D1     		bne	.L627
 6678              	.LVL1001:
 6679 008a 0524     		movs	r4, #5
 6680 008c C6E7     		b	.L631
 6681              	.LVL1002:
 6682              	.L633:
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6683              		.loc 1 4162 0
 6684 008e 0924     		movs	r4, #9
 6685 0090 CAE7     		b	.L626
 6686              		.cfi_endproc
 6687              	.LFE178:
 6689              		.section	.text.f_closedir,"ax",%progbits
 6690              		.align	1
 6691              		.global	f_closedir
 6692              		.syntax unified
 6693              		.thumb
 6694              		.thumb_func
 6695              		.fpu fpv4-sp-d16
 6697              	f_closedir:
 6698              	.LFB179:
4224:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6699              		.loc 1 4224 0
 6700              		.cfi_startproc
 6701              		@ args = 0, pretend = 0, frame = 8
 6702              		@ frame_needed = 0, uses_anonymous_args = 0
 6703              	.LVL1003:
 6704 0000 30B5     		push	{r4, r5, lr}
 6705              	.LCFI88:
 6706              		.cfi_def_cfa_offset 12
 6707              		.cfi_offset 4, -12
 6708              		.cfi_offset 5, -8
 6709              		.cfi_offset 14, -4
 6710 0002 83B0     		sub	sp, sp, #12
 6711              	.LCFI89:
 6712              		.cfi_def_cfa_offset 24
 6713 0004 0546     		mov	r5, r0
4229:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6714              		.loc 1 4229 0
 6715 0006 01A9     		add	r1, sp, #4
 6716 0008 FFF7FEFF 		bl	validate
 6717              	.LVL1004:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 239


4230:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 6718              		.loc 1 4230 0
 6719 000c 0446     		mov	r4, r0
 6720 000e 40B9     		cbnz	r0, .L641
4232:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->obj.lockid);
 6721              		.loc 1 4232 0
 6722 0010 2869     		ldr	r0, [r5, #16]
 6723              	.LVL1005:
 6724 0012 48B9     		cbnz	r0, .L645
 6725              	.L642:
 6726              	.LVL1006:
4235:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6727              		.loc 1 4235 0
 6728 0014 0CB9     		cbnz	r4, .L643
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6729              		.loc 1 4238 0
 6730 0016 0023     		movs	r3, #0
 6731 0018 2B60     		str	r3, [r5]
 6732              	.L643:
4241:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6733              		.loc 1 4241 0
 6734 001a 0021     		movs	r1, #0
 6735 001c 0198     		ldr	r0, [sp, #4]
 6736 001e FFF7FEFF 		bl	unlock_fs
 6737              	.LVL1007:
 6738              	.L641:
4245:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6739              		.loc 1 4245 0
 6740 0022 2046     		mov	r0, r4
 6741 0024 03B0     		add	sp, sp, #12
 6742              	.LCFI90:
 6743              		.cfi_remember_state
 6744              		.cfi_def_cfa_offset 12
 6745              		@ sp needed
 6746 0026 30BD     		pop	{r4, r5, pc}
 6747              	.LVL1008:
 6748              	.L645:
 6749              	.LCFI91:
 6750              		.cfi_restore_state
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6751              		.loc 1 4233 0
 6752 0028 FFF7FEFF 		bl	dec_lock
 6753              	.LVL1009:
 6754 002c 0446     		mov	r4, r0
 6755              	.LVL1010:
 6756 002e F1E7     		b	.L642
 6757              		.cfi_endproc
 6758              	.LFE179:
 6760              		.section	.text.f_readdir,"ax",%progbits
 6761              		.align	1
 6762              		.global	f_readdir
 6763              		.syntax unified
 6764              		.thumb
 6765              		.thumb_func
 6766              		.fpu fpv4-sp-d16
 6768              	f_readdir:
 6769              	.LFB180:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 240


4258:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6770              		.loc 1 4258 0
 6771              		.cfi_startproc
 6772              		@ args = 0, pretend = 0, frame = 8
 6773              		@ frame_needed = 0, uses_anonymous_args = 0
 6774              	.LVL1011:
 6775 0000 70B5     		push	{r4, r5, r6, lr}
 6776              	.LCFI92:
 6777              		.cfi_def_cfa_offset 16
 6778              		.cfi_offset 4, -16
 6779              		.cfi_offset 5, -12
 6780              		.cfi_offset 6, -8
 6781              		.cfi_offset 14, -4
 6782 0002 82B0     		sub	sp, sp, #8
 6783              	.LCFI93:
 6784              		.cfi_def_cfa_offset 24
 6785 0004 0546     		mov	r5, r0
 6786 0006 0E46     		mov	r6, r1
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6787              		.loc 1 4264 0
 6788 0008 01A9     		add	r1, sp, #4
 6789              	.LVL1012:
 6790 000a FFF7FEFF 		bl	validate
 6791              	.LVL1013:
4265:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
 6792              		.loc 1 4265 0
 6793 000e 0446     		mov	r4, r0
 6794 0010 90B9     		cbnz	r0, .L647
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
 6795              		.loc 1 4266 0
 6796 0012 C6B1     		cbz	r6, .L652
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 6797              		.loc 1 4270 0
 6798 0014 0021     		movs	r1, #0
 6799 0016 2846     		mov	r0, r5
 6800              	.LVL1014:
 6801 0018 FFF7FEFF 		bl	dir_read
 6802              	.LVL1015:
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
 6803              		.loc 1 4271 0
 6804 001c 0428     		cmp	r0, #4
 6805 001e 00D0     		beq	.L649
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
 6806              		.loc 1 4272 0
 6807 0020 B8B9     		cbnz	r0, .L650
 6808              	.L649:
4273:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
 6809              		.loc 1 4273 0
 6810 0022 3146     		mov	r1, r6
 6811 0024 2846     		mov	r0, r5
 6812              	.LVL1016:
 6813 0026 FFF7FEFF 		bl	get_fileinfo
 6814              	.LVL1017:
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 6815              		.loc 1 4274 0
 6816 002a 0021     		movs	r1, #0
 6817 002c 2846     		mov	r0, r5
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 241


 6818 002e FFF7FEFF 		bl	dir_next
 6819              	.LVL1018:
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6820              		.loc 1 4275 0
 6821 0032 0428     		cmp	r0, #4
 6822 0034 00D0     		beq	.L647
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 6823              		.loc 1 4274 0
 6824 0036 0446     		mov	r4, r0
 6825              	.LVL1019:
 6826              	.L647:
4280:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6827              		.loc 1 4280 0
 6828 0038 2146     		mov	r1, r4
 6829 003a 0198     		ldr	r0, [sp, #4]
 6830 003c FFF7FEFF 		bl	unlock_fs
 6831              	.LVL1020:
4281:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6832              		.loc 1 4281 0
 6833 0040 2046     		mov	r0, r4
 6834 0042 02B0     		add	sp, sp, #8
 6835              	.LCFI94:
 6836              		.cfi_remember_state
 6837              		.cfi_def_cfa_offset 16
 6838              		@ sp needed
 6839 0044 70BD     		pop	{r4, r5, r6, pc}
 6840              	.LVL1021:
 6841              	.L652:
 6842              	.LCFI95:
 6843              		.cfi_restore_state
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 6844              		.loc 1 4267 0
 6845 0046 0021     		movs	r1, #0
 6846 0048 2846     		mov	r0, r5
 6847              	.LVL1022:
 6848 004a FFF7FEFF 		bl	dir_sdi
 6849              	.LVL1023:
 6850 004e 0446     		mov	r4, r0
 6851              	.LVL1024:
 6852 0050 F2E7     		b	.L647
 6853              	.LVL1025:
 6854              	.L650:
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 6855              		.loc 1 4270 0
 6856 0052 0446     		mov	r4, r0
 6857 0054 F0E7     		b	.L647
 6858              		.cfi_endproc
 6859              	.LFE180:
 6861              		.section	.text.f_stat,"ax",%progbits
 6862              		.align	1
 6863              		.global	f_stat
 6864              		.syntax unified
 6865              		.thumb
 6866              		.thumb_func
 6867              		.fpu fpv4-sp-d16
 6869              	f_stat:
 6870              	.LFB181:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 242


4346:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6871              		.loc 1 4346 0
 6872              		.cfi_startproc
 6873              		@ args = 0, pretend = 0, frame = 56
 6874              		@ frame_needed = 0, uses_anonymous_args = 0
 6875              	.LVL1026:
 6876 0000 30B5     		push	{r4, r5, lr}
 6877              	.LCFI96:
 6878              		.cfi_def_cfa_offset 12
 6879              		.cfi_offset 4, -12
 6880              		.cfi_offset 5, -8
 6881              		.cfi_offset 14, -4
 6882 0002 8FB0     		sub	sp, sp, #60
 6883              	.LCFI97:
 6884              		.cfi_def_cfa_offset 72
 6885 0004 0190     		str	r0, [sp, #4]
 6886 0006 0D46     		mov	r5, r1
4353:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6887              		.loc 1 4353 0
 6888 0008 0022     		movs	r2, #0
 6889 000a 02A9     		add	r1, sp, #8
 6890              	.LVL1027:
 6891 000c 01A8     		add	r0, sp, #4
 6892              	.LVL1028:
 6893 000e FFF7FEFF 		bl	find_volume
 6894              	.LVL1029:
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
 6895              		.loc 1 4354 0
 6896 0012 0446     		mov	r4, r0
 6897 0014 30B1     		cbz	r0, .L657
 6898              	.LVL1030:
 6899              	.L654:
4367:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6900              		.loc 1 4367 0
 6901 0016 2146     		mov	r1, r4
 6902 0018 0298     		ldr	r0, [sp, #8]
 6903 001a FFF7FEFF 		bl	unlock_fs
 6904              	.LVL1031:
4368:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6905              		.loc 1 4368 0
 6906 001e 2046     		mov	r0, r4
 6907 0020 0FB0     		add	sp, sp, #60
 6908              	.LCFI98:
 6909              		.cfi_remember_state
 6910              		.cfi_def_cfa_offset 12
 6911              		@ sp needed
 6912 0022 30BD     		pop	{r4, r5, pc}
 6913              	.LVL1032:
 6914              	.L657:
 6915              	.LCFI99:
 6916              		.cfi_restore_state
4356:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
 6917              		.loc 1 4356 0
 6918 0024 0199     		ldr	r1, [sp, #4]
 6919 0026 02A8     		add	r0, sp, #8
 6920              	.LVL1033:
 6921 0028 FFF7FEFF 		bl	follow_path
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 243


 6922              	.LVL1034:
4357:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
 6923              		.loc 1 4357 0
 6924 002c 0446     		mov	r4, r0
 6925 002e 0028     		cmp	r0, #0
 6926 0030 F1D1     		bne	.L654
4358:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 6927              		.loc 1 4358 0
 6928 0032 9DF93730 		ldrsb	r3, [sp, #55]
 6929 0036 002B     		cmp	r3, #0
 6930 0038 06DB     		blt	.L655
4361:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6931              		.loc 1 4361 0
 6932 003a 002D     		cmp	r5, #0
 6933 003c EBD0     		beq	.L654
4361:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6934              		.loc 1 4361 0 is_stmt 0 discriminator 1
 6935 003e 2946     		mov	r1, r5
 6936 0040 02A8     		add	r0, sp, #8
 6937              	.LVL1035:
 6938 0042 FFF7FEFF 		bl	get_fileinfo
 6939              	.LVL1036:
 6940 0046 E6E7     		b	.L654
 6941              	.LVL1037:
 6942              	.L655:
4359:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {							/* Found an object */
 6943              		.loc 1 4359 0 is_stmt 1
 6944 0048 0624     		movs	r4, #6
 6945 004a E4E7     		b	.L654
 6946              		.cfi_endproc
 6947              	.LFE181:
 6949              		.section	.text.f_getfree,"ax",%progbits
 6950              		.align	1
 6951              		.global	f_getfree
 6952              		.syntax unified
 6953              		.thumb
 6954              		.thumb_func
 6955              		.fpu fpv4-sp-d16
 6957              	f_getfree:
 6958              	.LFB182:
4382:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6959              		.loc 1 4382 0
 6960              		.cfi_startproc
 6961              		@ args = 0, pretend = 0, frame = 32
 6962              		@ frame_needed = 0, uses_anonymous_args = 0
 6963              	.LVL1038:
 6964 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6965              	.LCFI100:
 6966              		.cfi_def_cfa_offset 32
 6967              		.cfi_offset 4, -32
 6968              		.cfi_offset 5, -28
 6969              		.cfi_offset 6, -24
 6970              		.cfi_offset 7, -20
 6971              		.cfi_offset 8, -16
 6972              		.cfi_offset 9, -12
 6973              		.cfi_offset 10, -8
 6974              		.cfi_offset 14, -4
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 244


 6975 0004 88B0     		sub	sp, sp, #32
 6976              	.LCFI101:
 6977              		.cfi_def_cfa_offset 64
 6978 0006 0190     		str	r0, [sp, #4]
 6979 0008 8A46     		mov	r10, r1
 6980 000a 1446     		mov	r4, r2
4392:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6981              		.loc 1 4392 0
 6982 000c 0022     		movs	r2, #0
 6983              	.LVL1039:
 6984 000e 07A9     		add	r1, sp, #28
 6985              	.LVL1040:
 6986 0010 01A8     		add	r0, sp, #4
 6987              	.LVL1041:
 6988 0012 FFF7FEFF 		bl	find_volume
 6989              	.LVL1042:
4393:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
 6990              		.loc 1 4393 0
 6991 0016 0746     		mov	r7, r0
 6992 0018 0028     		cmp	r0, #0
 6993 001a 5ED1     		bne	.L659
4394:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
 6994              		.loc 1 4394 0
 6995 001c 079B     		ldr	r3, [sp, #28]
 6996 001e 2360     		str	r3, [r4]
4396:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clst;
 6997              		.loc 1 4396 0
 6998 0020 5A69     		ldr	r2, [r3, #20]
 6999 0022 9D69     		ldr	r5, [r3, #24]
 7000 0024 A91E     		subs	r1, r5, #2
 7001 0026 8A42     		cmp	r2, r1
 7002 0028 08D9     		bls	.L674
 7003              	.LVL1043:
4401:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2; obj.fs = fs;
 7004              		.loc 1 4401 0
 7005 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7006 002c 012A     		cmp	r2, #1
 7007 002e 08D0     		beq	.L675
 7008              	.LVL1044:
4429:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0; p = 0;
 7009              		.loc 1 4429 0
 7010 0030 D3F82490 		ldr	r9, [r3, #36]
 7011              	.LVL1045:
4430:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 7012              		.loc 1 4430 0
 7013 0034 0024     		movs	r4, #0
 7014              	.LVL1046:
 7015 0036 2646     		mov	r6, r4
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
 7016              		.loc 1 4400 0
 7017 0038 A046     		mov	r8, r4
 7018 003a 35E0     		b	.L670
 7019              	.LVL1047:
 7020              	.L674:
4397:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 7021              		.loc 1 4397 0
 7022 003c CAF80020 		str	r2, [r10]
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 245


 7023 0040 4BE0     		b	.L659
 7024              	.LVL1048:
 7025              	.L675:
4402:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 7026              		.loc 1 4402 0
 7027 0042 0293     		str	r3, [sp, #8]
 7028 0044 0224     		movs	r4, #2
 7029              	.LVL1049:
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
 7030              		.loc 1 4400 0
 7031 0046 4FF00008 		mov	r8, #0
 7032 004a 04E0     		b	.L664
 7033              	.LVL1050:
 7034              	.L663:
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 7035              		.loc 1 4408 0
 7036 004c 0134     		adds	r4, r4, #1
 7037              	.LVL1051:
 7038 004e 079B     		ldr	r3, [sp, #28]
 7039 0050 9B69     		ldr	r3, [r3, #24]
 7040 0052 A342     		cmp	r3, r4
 7041 0054 38D9     		bls	.L662
 7042              	.LVL1052:
 7043              	.L664:
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 7044              		.loc 1 4404 0
 7045 0056 2146     		mov	r1, r4
 7046 0058 02A8     		add	r0, sp, #8
 7047 005a FFF7FEFF 		bl	get_fat
 7048              	.LVL1053:
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 7049              		.loc 1 4405 0
 7050 005e B0F1FF3F 		cmp	r0, #-1
 7051 0062 30D0     		beq	.L671
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
 7052              		.loc 1 4406 0
 7053 0064 0128     		cmp	r0, #1
 7054 0066 40D0     		beq	.L672
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 7055              		.loc 1 4407 0
 7056 0068 0028     		cmp	r0, #0
 7057 006a EFD1     		bne	.L663
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 7058              		.loc 1 4407 0 is_stmt 0 discriminator 1
 7059 006c 08F10108 		add	r8, r8, #1
 7060              	.LVL1054:
 7061 0070 ECE7     		b	.L663
 7062              	.LVL1055:
 7063              	.L676:
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
 7064              		.loc 1 4433 0 is_stmt 1
 7065 0072 09F10106 		add	r6, r9, #1
 7066              	.LVL1056:
 7067 0076 4946     		mov	r1, r9
 7068 0078 0798     		ldr	r0, [sp, #28]
 7069 007a FFF7FEFF 		bl	move_window
 7070              	.LVL1057:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 246


4434:Middlewares/Third_Party/FatFs/src/ff.c **** 							p = fs->win;
 7071              		.loc 1 4434 0
 7072 007e 0746     		mov	r7, r0
 7073 0080 10BB     		cbnz	r0, .L662
4435:Middlewares/Third_Party/FatFs/src/ff.c **** 							i = SS(fs);
 7074              		.loc 1 4435 0
 7075 0082 079C     		ldr	r4, [sp, #28]
 7076              	.LVL1058:
 7077 0084 3434     		adds	r4, r4, #52
 7078              	.LVL1059:
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
 7079              		.loc 1 4433 0
 7080 0086 B146     		mov	r9, r6
4436:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 7081              		.loc 1 4436 0
 7082 0088 4FF40076 		mov	r6, #512
 7083              	.LVL1060:
 7084 008c 0EE0     		b	.L665
 7085              	.LVL1061:
 7086              	.L677:
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
 7087              		.loc 1 4439 0
 7088 008e 2046     		mov	r0, r4
 7089 0090 FFF7FEFF 		bl	ld_word
 7090              	.LVL1062:
 7091 0094 08B9     		cbnz	r0, .L667
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
 7092              		.loc 1 4439 0 is_stmt 0 discriminator 1
 7093 0096 08F10108 		add	r8, r8, #1
 7094              	.LVL1063:
 7095              	.L667:
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
 7096              		.loc 1 4440 0 is_stmt 1
 7097 009a 0234     		adds	r4, r4, #2
 7098              	.LVL1064:
 7099 009c 023E     		subs	r6, r6, #2
 7100              	.LVL1065:
 7101 009e 01E0     		b	.L668
 7102              	.L669:
4443:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 7103              		.loc 1 4443 0
 7104 00a0 0434     		adds	r4, r4, #4
 7105              	.LVL1066:
 7106 00a2 043E     		subs	r6, r6, #4
 7107              	.LVL1067:
 7108              	.L668:
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7109              		.loc 1 4445 0
 7110 00a4 013D     		subs	r5, r5, #1
 7111              	.LVL1068:
 7112 00a6 0FD0     		beq	.L662
 7113              	.LVL1069:
 7114              	.L670:
4432:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, sect++);
 7115              		.loc 1 4432 0
 7116 00a8 002E     		cmp	r6, #0
 7117 00aa E2D0     		beq	.L676
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 247


 7118              	.LVL1070:
 7119              	.L665:
4438:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (ld_word(p) == 0) nfree++;
 7120              		.loc 1 4438 0
 7121 00ac 079B     		ldr	r3, [sp, #28]
 7122 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7123 00b0 022B     		cmp	r3, #2
 7124 00b2 ECD0     		beq	.L677
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
 7125              		.loc 1 4442 0
 7126 00b4 2046     		mov	r0, r4
 7127 00b6 FFF7FEFF 		bl	ld_dword
 7128              	.LVL1071:
 7129 00ba 30F07043 		bics	r3, r0, #-268435456
 7130 00be EFD1     		bne	.L669
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
 7131              		.loc 1 4442 0 is_stmt 0 discriminator 1
 7132 00c0 08F10108 		add	r8, r8, #1
 7133              	.LVL1072:
 7134 00c4 ECE7     		b	.L669
 7135              	.LVL1073:
 7136              	.L671:
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 7137              		.loc 1 4405 0 is_stmt 1
 7138 00c6 0127     		movs	r7, #1
 7139              	.LVL1074:
 7140              	.L662:
4448:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
 7141              		.loc 1 4448 0
 7142 00c8 CAF80080 		str	r8, [r10]
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;		/* FSInfo is to be updated */
 7143              		.loc 1 4449 0
 7144 00cc 079B     		ldr	r3, [sp, #28]
 7145 00ce C3F81480 		str	r8, [r3, #20]
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 7146              		.loc 1 4450 0
 7147 00d2 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 7148 00d4 42F00102 		orr	r2, r2, #1
 7149 00d8 1A71     		strb	r2, [r3, #4]
 7150              	.LVL1075:
 7151              	.L659:
4454:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7152              		.loc 1 4454 0
 7153 00da 3946     		mov	r1, r7
 7154 00dc 0798     		ldr	r0, [sp, #28]
 7155 00de FFF7FEFF 		bl	unlock_fs
 7156              	.LVL1076:
4455:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7157              		.loc 1 4455 0
 7158 00e2 3846     		mov	r0, r7
 7159 00e4 08B0     		add	sp, sp, #32
 7160              	.LCFI102:
 7161              		.cfi_remember_state
 7162              		.cfi_def_cfa_offset 32
 7163              		@ sp needed
 7164 00e6 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 7165              	.LVL1077:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 248


 7166              	.L672:
 7167              	.LCFI103:
 7168              		.cfi_restore_state
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
 7169              		.loc 1 4406 0
 7170 00ea 0227     		movs	r7, #2
 7171 00ec ECE7     		b	.L662
 7172              		.cfi_endproc
 7173              	.LFE182:
 7175              		.section	.text.f_truncate,"ax",%progbits
 7176              		.align	1
 7177              		.global	f_truncate
 7178              		.syntax unified
 7179              		.thumb
 7180              		.thumb_func
 7181              		.fpu fpv4-sp-d16
 7183              	f_truncate:
 7184              	.LFB183:
4467:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7185              		.loc 1 4467 0
 7186              		.cfi_startproc
 7187              		@ args = 0, pretend = 0, frame = 8
 7188              		@ frame_needed = 0, uses_anonymous_args = 0
 7189              	.LVL1078:
 7190 0000 30B5     		push	{r4, r5, lr}
 7191              	.LCFI104:
 7192              		.cfi_def_cfa_offset 12
 7193              		.cfi_offset 4, -12
 7194              		.cfi_offset 5, -8
 7195              		.cfi_offset 14, -4
 7196 0002 83B0     		sub	sp, sp, #12
 7197              	.LCFI105:
 7198              		.cfi_def_cfa_offset 24
 7199 0004 0546     		mov	r5, r0
4473:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
 7200              		.loc 1 4473 0
 7201 0006 01A9     		add	r1, sp, #4
 7202 0008 FFF7FEFF 		bl	validate
 7203              	.LVL1079:
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 7204              		.loc 1 4474 0
 7205 000c 0446     		mov	r4, r0
 7206 000e 18BB     		cbnz	r0, .L679
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 7207              		.loc 1 4474 0 is_stmt 0 discriminator 2
 7208 0010 6C7D     		ldrb	r4, [r5, #21]	@ zero_extendqisi2
 7209              	.LVL1080:
 7210 0012 0CBB     		cbnz	r4, .L679
4475:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7211              		.loc 1 4475 0 is_stmt 1
 7212 0014 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 7213 0016 13F0020F 		tst	r3, #2
 7214 001a 24D0     		beq	.L693
4477:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 7215              		.loc 1 4477 0
 7216 001c AB69     		ldr	r3, [r5, #24]
 7217 001e EA68     		ldr	r2, [r5, #12]
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 249


 7218 0020 9342     		cmp	r3, r2
 7219 0022 14D2     		bcs	.L683
4478:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
 7220              		.loc 1 4478 0
 7221 0024 2BBB     		cbnz	r3, .L684
4479:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = 0;
 7222              		.loc 1 4479 0
 7223 0026 0022     		movs	r2, #0
 7224 0028 A968     		ldr	r1, [r5, #8]
 7225 002a 2846     		mov	r0, r5
 7226 002c FFF7FEFF 		bl	remove_chain
 7227              	.LVL1081:
 7228 0030 0446     		mov	r4, r0
 7229              	.LVL1082:
4480:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
 7230              		.loc 1 4480 0
 7231 0032 0023     		movs	r3, #0
 7232 0034 AB60     		str	r3, [r5, #8]
 7233              	.LVL1083:
 7234              	.L685:
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_MODIFIED;
 7235              		.loc 1 4490 0
 7236 0036 AB69     		ldr	r3, [r5, #24]
 7237 0038 EB60     		str	r3, [r5, #12]
4491:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 7238              		.loc 1 4491 0
 7239 003a 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 7240 003c 43F04003 		orr	r3, r3, #64
 7241 0040 2B75     		strb	r3, [r5, #20]
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 7242              		.loc 1 4493 0
 7243 0042 14B9     		cbnz	r4, .L687
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 7244              		.loc 1 4493 0 is_stmt 0 discriminator 1
 7245 0044 13F0800F 		tst	r3, #128
 7246 0048 2DD1     		bne	.L694
 7247              	.L687:
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7248              		.loc 1 4501 0 is_stmt 1
 7249 004a 002C     		cmp	r4, #0
 7250 004c 3AD1     		bne	.L688
 7251              	.L683:
4504:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7252              		.loc 1 4504 0
 7253 004e 2146     		mov	r1, r4
 7254 0050 0198     		ldr	r0, [sp, #4]
 7255 0052 FFF7FEFF 		bl	unlock_fs
 7256              	.LVL1084:
 7257 0056 03E0     		b	.L681
 7258              	.LVL1085:
 7259              	.L679:
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 7260              		.loc 1 4474 0 discriminator 3
 7261 0058 2146     		mov	r1, r4
 7262 005a 0198     		ldr	r0, [sp, #4]
 7263 005c FFF7FEFF 		bl	unlock_fs
 7264              	.LVL1086:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 250


 7265              	.L681:
4505:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7266              		.loc 1 4505 0
 7267 0060 2046     		mov	r0, r4
 7268 0062 03B0     		add	sp, sp, #12
 7269              	.LCFI106:
 7270              		.cfi_remember_state
 7271              		.cfi_def_cfa_offset 12
 7272              		@ sp needed
 7273 0064 30BD     		pop	{r4, r5, pc}
 7274              	.LVL1087:
 7275              	.L693:
 7276              	.LCFI107:
 7277              		.cfi_restore_state
4475:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7278              		.loc 1 4475 0 discriminator 1
 7279 0066 0721     		movs	r1, #7
 7280 0068 0198     		ldr	r0, [sp, #4]
 7281 006a FFF7FEFF 		bl	unlock_fs
 7282              	.LVL1088:
 7283 006e 0724     		movs	r4, #7
 7284              	.LVL1089:
 7285 0070 F6E7     		b	.L681
 7286              	.LVL1090:
 7287              	.L684:
4482:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 7288              		.loc 1 4482 0
 7289 0072 E969     		ldr	r1, [r5, #28]
 7290 0074 2846     		mov	r0, r5
 7291 0076 FFF7FEFF 		bl	get_fat
 7292              	.LVL1091:
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 7293              		.loc 1 4484 0
 7294 007a B0F1FF3F 		cmp	r0, #-1
 7295 007e 0ED0     		beq	.L695
 7296              	.L686:
 7297              	.LVL1092:
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 7298              		.loc 1 4485 0
 7299 0080 0128     		cmp	r0, #1
 7300 0082 0ED0     		beq	.L690
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 7301              		.loc 1 4486 0
 7302 0084 002C     		cmp	r4, #0
 7303 0086 D6D1     		bne	.L685
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 7304              		.loc 1 4486 0 is_stmt 0 discriminator 1
 7305 0088 019B     		ldr	r3, [sp, #4]
 7306 008a 9B69     		ldr	r3, [r3, #24]
 7307 008c 8342     		cmp	r3, r0
 7308 008e D2D9     		bls	.L685
4487:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7309              		.loc 1 4487 0 is_stmt 1
 7310 0090 EA69     		ldr	r2, [r5, #28]
 7311 0092 0146     		mov	r1, r0
 7312 0094 2846     		mov	r0, r5
 7313              	.LVL1093:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 251


 7314 0096 FFF7FEFF 		bl	remove_chain
 7315              	.LVL1094:
 7316 009a 0446     		mov	r4, r0
 7317              	.LVL1095:
 7318 009c CBE7     		b	.L685
 7319              	.LVL1096:
 7320              	.L695:
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 7321              		.loc 1 4484 0
 7322 009e 0124     		movs	r4, #1
 7323 00a0 EEE7     		b	.L686
 7324              	.LVL1097:
 7325              	.L690:
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 7326              		.loc 1 4485 0
 7327 00a2 0224     		movs	r4, #2
 7328              	.LVL1098:
 7329 00a4 C7E7     		b	.L685
 7330              	.LVL1099:
 7331              	.L694:
4494:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 7332              		.loc 1 4494 0
 7333 00a6 0123     		movs	r3, #1
 7334 00a8 2A6A     		ldr	r2, [r5, #32]
 7335 00aa 05F13001 		add	r1, r5, #48
 7336 00ae 0198     		ldr	r0, [sp, #4]
 7337 00b0 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 7338 00b2 FFF7FEFF 		bl	disk_write
 7339              	.LVL1100:
 7340 00b6 20B9     		cbnz	r0, .L691
4497:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7341              		.loc 1 4497 0
 7342 00b8 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 7343 00ba 03F07F03 		and	r3, r3, #127
 7344 00be 2B75     		strb	r3, [r5, #20]
 7345 00c0 C3E7     		b	.L687
 7346              	.L691:
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 7347              		.loc 1 4495 0
 7348 00c2 0124     		movs	r4, #1
 7349              	.LVL1101:
 7350              	.L688:
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7351              		.loc 1 4501 0 discriminator 1
 7352 00c4 6C75     		strb	r4, [r5, #21]
 7353 00c6 2146     		mov	r1, r4
 7354 00c8 0198     		ldr	r0, [sp, #4]
 7355 00ca FFF7FEFF 		bl	unlock_fs
 7356              	.LVL1102:
 7357 00ce C7E7     		b	.L681
 7358              		.cfi_endproc
 7359              	.LFE183:
 7361              		.section	.text.f_unlink,"ax",%progbits
 7362              		.align	1
 7363              		.global	f_unlink
 7364              		.syntax unified
 7365              		.thumb
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 252


 7366              		.thumb_func
 7367              		.fpu fpv4-sp-d16
 7369              	f_unlink:
 7370              	.LFB184:
4517:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7371              		.loc 1 4517 0
 7372              		.cfi_startproc
 7373              		@ args = 0, pretend = 0, frame = 112
 7374              		@ frame_needed = 0, uses_anonymous_args = 0
 7375              	.LVL1103:
 7376 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 7377              	.LCFI108:
 7378              		.cfi_def_cfa_offset 20
 7379              		.cfi_offset 4, -20
 7380              		.cfi_offset 5, -16
 7381              		.cfi_offset 6, -12
 7382              		.cfi_offset 7, -8
 7383              		.cfi_offset 14, -4
 7384 0002 9DB0     		sub	sp, sp, #116
 7385              	.LCFI109:
 7386              		.cfi_def_cfa_offset 136
 7387 0004 0190     		str	r0, [sp, #4]
 7388              	.LVL1104:
4529:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
 7389              		.loc 1 4529 0
 7390 0006 0222     		movs	r2, #2
 7391 0008 03A9     		add	r1, sp, #12
 7392 000a 01A8     		add	r0, sp, #4
 7393              	.LVL1105:
 7394 000c FFF7FEFF 		bl	find_volume
 7395              	.LVL1106:
4530:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7396              		.loc 1 4530 0
 7397 0010 039B     		ldr	r3, [sp, #12]
 7398 0012 1093     		str	r3, [sp, #64]
4531:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 7399              		.loc 1 4531 0
 7400 0014 0446     		mov	r4, r0
 7401 0016 30B1     		cbz	r0, .L706
 7402              	.LVL1107:
 7403              	.L697:
4599:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7404              		.loc 1 4599 0
 7405 0018 2146     		mov	r1, r4
 7406 001a 0398     		ldr	r0, [sp, #12]
 7407 001c FFF7FEFF 		bl	unlock_fs
 7408              	.LVL1108:
4600:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7409              		.loc 1 4600 0
 7410 0020 2046     		mov	r0, r4
 7411 0022 1DB0     		add	sp, sp, #116
 7412              	.LCFI110:
 7413              		.cfi_remember_state
 7414              		.cfi_def_cfa_offset 20
 7415              		@ sp needed
 7416 0024 F0BD     		pop	{r4, r5, r6, r7, pc}
 7417              	.LVL1109:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 253


 7418              	.L706:
 7419              	.LCFI111:
 7420              		.cfi_restore_state
4533:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
 7421              		.loc 1 4533 0
 7422 0026 0199     		ldr	r1, [sp, #4]
 7423 0028 10A8     		add	r0, sp, #64
 7424              	.LVL1110:
 7425 002a FFF7FEFF 		bl	follow_path
 7426              	.LVL1111:
4538:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7427              		.loc 1 4538 0
 7428 002e 0446     		mov	r4, r0
 7429 0030 20B9     		cbnz	r0, .L698
4538:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7430              		.loc 1 4538 0 is_stmt 0 discriminator 1
 7431 0032 0221     		movs	r1, #2
 7432 0034 10A8     		add	r0, sp, #64
 7433              	.LVL1112:
 7434 0036 FFF7FEFF 		bl	chk_lock
 7435              	.LVL1113:
 7436 003a 0446     		mov	r4, r0
 7437              	.LVL1114:
 7438              	.L698:
4540:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
 7439              		.loc 1 4540 0 is_stmt 1
 7440 003c 002C     		cmp	r4, #0
 7441 003e EBD1     		bne	.L697
4541:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
 7442              		.loc 1 4541 0
 7443 0040 9DF96F30 		ldrsb	r3, [sp, #111]
 7444 0044 002B     		cmp	r3, #0
 7445 0046 1EDB     		blt	.L702
4544:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
 7446              		.loc 1 4544 0
 7447 0048 9DF84650 		ldrb	r5, [sp, #70]	@ zero_extendqisi2
 7448 004c 15F0010F 		tst	r5, #1
 7449 0050 2AD1     		bne	.L703
4558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7450              		.loc 1 4558 0
 7451 0052 039F     		ldr	r7, [sp, #12]
 7452 0054 1899     		ldr	r1, [sp, #96]
 7453 0056 3846     		mov	r0, r7
 7454 0058 FFF7FEFF 		bl	ld_clust
 7455              	.LVL1115:
 7456 005c 0646     		mov	r6, r0
 7457              	.LVL1116:
4560:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
 7458              		.loc 1 4560 0
 7459 005e 15F0100F 		tst	r5, #16
 7460 0062 12D0     		beq	.L699
4567:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.sclust = dclst;
 7461              		.loc 1 4567 0
 7462 0064 0497     		str	r7, [sp, #16]
4568:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7463              		.loc 1 4568 0
 7464 0066 0690     		str	r0, [sp, #24]
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 254


4575:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 7465              		.loc 1 4575 0
 7466 0068 0021     		movs	r1, #0
 7467 006a 04A8     		add	r0, sp, #16
 7468              	.LVL1117:
 7469 006c FFF7FEFF 		bl	dir_sdi
 7470              	.LVL1118:
4576:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item */
 7471              		.loc 1 4576 0
 7472 0070 0446     		mov	r4, r0
 7473 0072 50B9     		cbnz	r0, .L699
4577:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
 7474              		.loc 1 4577 0
 7475 0074 0021     		movs	r1, #0
 7476 0076 04A8     		add	r0, sp, #16
 7477              	.LVL1119:
 7478 0078 FFF7FEFF 		bl	dir_read
 7479              	.LVL1120:
4578:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 7480              		.loc 1 4578 0
 7481 007c 0446     		mov	r4, r0
 7482 007e B0B1     		cbz	r0, .L704
4579:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 7483              		.loc 1 4579 0
 7484 0080 0428     		cmp	r0, #4
 7485 0082 02D1     		bne	.L699
 7486 0084 03E0     		b	.L700
 7487              	.LVL1121:
 7488              	.L702:
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
 7489              		.loc 1 4520 0
 7490 0086 0026     		movs	r6, #0
4542:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 7491              		.loc 1 4542 0
 7492 0088 0624     		movs	r4, #6
 7493              	.LVL1122:
 7494              	.L699:
4584:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);			/* Remove the directory entry */
 7495              		.loc 1 4584 0
 7496 008a 002C     		cmp	r4, #0
 7497 008c C4D1     		bne	.L697
 7498              	.LVL1123:
 7499              	.L700:
4585:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst) {	/* Remove the cluster chain if exist */
 7500              		.loc 1 4585 0
 7501 008e 10A8     		add	r0, sp, #64
 7502 0090 FFF7FEFF 		bl	dir_remove
 7503              	.LVL1124:
4586:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7504              		.loc 1 4586 0
 7505 0094 0446     		mov	r4, r0
 7506 0096 00B9     		cbnz	r0, .L701
4586:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7507              		.loc 1 4586 0 is_stmt 0 discriminator 1
 7508 0098 5EB9     		cbnz	r6, .L707
 7509              	.LVL1125:
 7510              	.L701:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 255


4593:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7511              		.loc 1 4593 0 is_stmt 1
 7512 009a 002C     		cmp	r4, #0
 7513 009c BCD1     		bne	.L697
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7514              		.loc 1 4593 0 is_stmt 0 discriminator 1
 7515 009e 0398     		ldr	r0, [sp, #12]
 7516 00a0 FFF7FEFF 		bl	sync_fs
 7517              	.LVL1126:
 7518 00a4 0446     		mov	r4, r0
 7519              	.LVL1127:
 7520 00a6 B7E7     		b	.L697
 7521              	.LVL1128:
 7522              	.L703:
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
 7523              		.loc 1 4520 0 is_stmt 1
 7524 00a8 0026     		movs	r6, #0
4545:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7525              		.loc 1 4545 0
 7526 00aa 0724     		movs	r4, #7
 7527              	.LVL1129:
 7528 00ac EDE7     		b	.L699
 7529              	.LVL1130:
 7530              	.L704:
4578:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 7531              		.loc 1 4578 0
 7532 00ae 0724     		movs	r4, #7
 7533 00b0 EBE7     		b	.L699
 7534              	.L707:
4590:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7535              		.loc 1 4590 0
 7536 00b2 0022     		movs	r2, #0
 7537 00b4 3146     		mov	r1, r6
 7538 00b6 10A8     		add	r0, sp, #64
 7539              	.LVL1131:
 7540 00b8 FFF7FEFF 		bl	remove_chain
 7541              	.LVL1132:
 7542 00bc 0446     		mov	r4, r0
 7543              	.LVL1133:
 7544 00be ECE7     		b	.L701
 7545              		.cfi_endproc
 7546              	.LFE184:
 7548              		.section	.text.f_mkdir,"ax",%progbits
 7549              		.align	1
 7550              		.global	f_mkdir
 7551              		.syntax unified
 7552              		.thumb
 7553              		.thumb_func
 7554              		.fpu fpv4-sp-d16
 7556              	f_mkdir:
 7557              	.LFB185:
4612:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7558              		.loc 1 4612 0
 7559              		.cfi_startproc
 7560              		@ args = 0, pretend = 0, frame = 64
 7561              		@ frame_needed = 0, uses_anonymous_args = 0
 7562              	.LVL1134:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 256


 7563 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7564              	.LCFI112:
 7565              		.cfi_def_cfa_offset 36
 7566              		.cfi_offset 4, -36
 7567              		.cfi_offset 5, -32
 7568              		.cfi_offset 6, -28
 7569              		.cfi_offset 7, -24
 7570              		.cfi_offset 8, -20
 7571              		.cfi_offset 9, -16
 7572              		.cfi_offset 10, -12
 7573              		.cfi_offset 11, -8
 7574              		.cfi_offset 14, -4
 7575 0004 91B0     		sub	sp, sp, #68
 7576              	.LCFI113:
 7577              		.cfi_def_cfa_offset 104
 7578 0006 0190     		str	r0, [sp, #4]
4623:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
 7579              		.loc 1 4623 0
 7580 0008 0222     		movs	r2, #2
 7581 000a 03A9     		add	r1, sp, #12
 7582 000c 01A8     		add	r0, sp, #4
 7583              	.LVL1135:
 7584 000e FFF7FEFF 		bl	find_volume
 7585              	.LVL1136:
4624:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7586              		.loc 1 4624 0
 7587 0012 039B     		ldr	r3, [sp, #12]
 7588 0014 0493     		str	r3, [sp, #16]
4625:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 7589              		.loc 1 4625 0
 7590 0016 0446     		mov	r4, r0
 7591 0018 38B1     		cbz	r0, .L726
 7592              	.LVL1137:
 7593              	.L709:
4696:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7594              		.loc 1 4696 0
 7595 001a 2146     		mov	r1, r4
 7596 001c 0398     		ldr	r0, [sp, #12]
 7597 001e FFF7FEFF 		bl	unlock_fs
 7598              	.LVL1138:
4697:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7599              		.loc 1 4697 0
 7600 0022 2046     		mov	r0, r4
 7601 0024 11B0     		add	sp, sp, #68
 7602              	.LCFI114:
 7603              		.cfi_remember_state
 7604              		.cfi_def_cfa_offset 36
 7605              		@ sp needed
 7606 0026 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7607              	.LVL1139:
 7608              	.L726:
 7609              	.LCFI115:
 7610              		.cfi_restore_state
4627:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 7611              		.loc 1 4627 0
 7612 002a 0199     		ldr	r1, [sp, #4]
 7613 002c 04A8     		add	r0, sp, #16
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 257


 7614              	.LVL1140:
 7615 002e FFF7FEFF 		bl	follow_path
 7616              	.LVL1141:
4628:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
 7617              		.loc 1 4628 0
 7618 0032 0028     		cmp	r0, #0
 7619 0034 00F09980 		beq	.L719
4632:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
 7620              		.loc 1 4632 0
 7621 0038 0428     		cmp	r0, #4
 7622 003a 01D0     		beq	.L727
4627:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 7623              		.loc 1 4627 0
 7624 003c 0446     		mov	r4, r0
 7625 003e ECE7     		b	.L709
 7626              	.L727:
4633:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
 7627              		.loc 1 4633 0
 7628 0040 0021     		movs	r1, #0
 7629 0042 04A8     		add	r0, sp, #16
 7630              	.LVL1142:
 7631 0044 FFF7FEFF 		bl	create_chain
 7632              	.LVL1143:
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 7633              		.loc 1 4634 0
 7634 0048 039A     		ldr	r2, [sp, #12]
 7635 004a 5389     		ldrh	r3, [r2, #10]
 7636 004c 5B02     		lsls	r3, r3, #9
 7637 004e 0793     		str	r3, [sp, #28]
 7638              	.LVL1144:
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
 7639              		.loc 1 4636 0
 7640 0050 0746     		mov	r7, r0
 7641 0052 00B9     		cbnz	r0, .L710
 7642 0054 0724     		movs	r4, #7
 7643              	.L710:
 7644              	.LVL1145:
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 7645              		.loc 1 4637 0
 7646 0056 012F     		cmp	r7, #1
 7647 0058 11D0     		beq	.L728
 7648              	.LVL1146:
 7649              	.L711:
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 7650              		.loc 1 4638 0
 7651 005a B7F1FF3F 		cmp	r7, #-1
 7652 005e 15D0     		beq	.L723
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
 7653              		.loc 1 4639 0
 7654 0060 7CB1     		cbz	r4, .L729
 7655              	.LVL1147:
 7656              	.L712:
4640:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 7657              		.loc 1 4640 0
 7658 0062 FFF7FEFF 		bl	get_fattime
 7659              	.LVL1148:
 7660 0066 8246     		mov	r10, r0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 258


 7661              	.LVL1149:
4641:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, dcl);
 7662              		.loc 1 4641 0
 7663 0068 94B1     		cbz	r4, .L730
 7664              	.LVL1150:
 7665              	.L713:
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_register(&dj);	/* Register the object to the directoy */
 7666              		.loc 1 4664 0
 7667 006a 002C     		cmp	r4, #0
 7668 006c 63D0     		beq	.L731
 7669              	.L717:
4667:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7670              		.loc 1 4667 0
 7671 006e 002C     		cmp	r4, #0
 7672 0070 66D0     		beq	.L732
4690:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7673              		.loc 1 4690 0
 7674 0072 0022     		movs	r2, #0
 7675 0074 3946     		mov	r1, r7
 7676 0076 04A8     		add	r0, sp, #16
 7677 0078 FFF7FEFF 		bl	remove_chain
 7678              	.LVL1151:
 7679 007c CDE7     		b	.L709
 7680              	.LVL1152:
 7681              	.L728:
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 7682              		.loc 1 4637 0
 7683 007e 0224     		movs	r4, #2
 7684              	.LVL1153:
 7685 0080 EBE7     		b	.L711
 7686              	.LVL1154:
 7687              	.L729:
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
 7688              		.loc 1 4639 0 discriminator 1
 7689 0082 1046     		mov	r0, r2
 7690              	.LVL1155:
 7691 0084 FFF7FEFF 		bl	sync_window
 7692              	.LVL1156:
 7693 0088 0446     		mov	r4, r0
 7694              	.LVL1157:
 7695 008a EAE7     		b	.L712
 7696              	.LVL1158:
 7697              	.L723:
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 7698              		.loc 1 4638 0
 7699 008c 0124     		movs	r4, #1
 7700              	.LVL1159:
 7701 008e E8E7     		b	.L712
 7702              	.LVL1160:
 7703              	.L730:
4642:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fs->win;
 7704              		.loc 1 4642 0
 7705 0090 039D     		ldr	r5, [sp, #12]
 7706 0092 3946     		mov	r1, r7
 7707 0094 2846     		mov	r0, r5
 7708              	.LVL1161:
 7709 0096 FFF7FEFF 		bl	clust2sect
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 259


 7710              	.LVL1162:
 7711 009a 0646     		mov	r6, r0
 7712              	.LVL1163:
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(fs));
 7713              		.loc 1 4643 0
 7714 009c 05F13409 		add	r9, r5, #52
 7715              	.LVL1164:
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 7716              		.loc 1 4644 0
 7717 00a0 4FF40072 		mov	r2, #512
 7718 00a4 0021     		movs	r1, #0
 7719 00a6 4846     		mov	r0, r9
 7720              	.LVL1165:
 7721 00a8 FFF7FEFF 		bl	mem_set
 7722              	.LVL1166:
4646:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Name] = '.';
 7723              		.loc 1 4646 0
 7724 00ac 0B22     		movs	r2, #11
 7725 00ae 2021     		movs	r1, #32
 7726 00b0 4846     		mov	r0, r9
 7727 00b2 FFF7FEFF 		bl	mem_set
 7728              	.LVL1167:
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
 7729              		.loc 1 4647 0
 7730 00b6 4FF02E0B 		mov	fp, #46
 7731 00ba 85F834B0 		strb	fp, [r5, #52]
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
 7732              		.loc 1 4648 0
 7733 00be 1023     		movs	r3, #16
 7734 00c0 85F83F30 		strb	r3, [r5, #63]
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);
 7735              		.loc 1 4649 0
 7736 00c4 5146     		mov	r1, r10
 7737 00c6 05F14A00 		add	r0, r5, #74
 7738 00ca FFF7FEFF 		bl	st_dword
 7739              	.LVL1168:
4650:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
 7740              		.loc 1 4650 0
 7741 00ce 3A46     		mov	r2, r7
 7742 00d0 4946     		mov	r1, r9
 7743 00d2 0398     		ldr	r0, [sp, #12]
 7744 00d4 FFF7FEFF 		bl	st_clust
 7745              	.LVL1169:
4651:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
 7746              		.loc 1 4651 0
 7747 00d8 05F15408 		add	r8, r5, #84
 7748 00dc 2022     		movs	r2, #32
 7749 00de 4946     		mov	r1, r9
 7750 00e0 4046     		mov	r0, r8
 7751 00e2 FFF7FEFF 		bl	mem_cpy
 7752              	.LVL1170:
4652:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
 7753              		.loc 1 4652 0
 7754 00e6 85F855B0 		strb	fp, [r5, #85]
 7755 00ea 069A     		ldr	r2, [sp, #24]
 7756              	.LVL1171:
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 260


 7757              		.loc 1 4653 0
 7758 00ec 0398     		ldr	r0, [sp, #12]
 7759 00ee 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 7760 00f0 032B     		cmp	r3, #3
 7761 00f2 1BD0     		beq	.L733
 7762              	.LVL1172:
 7763              	.L714:
4654:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7764              		.loc 1 4654 0
 7765 00f4 4146     		mov	r1, r8
 7766 00f6 FFF7FEFF 		bl	st_clust
 7767              	.LVL1173:
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 7768              		.loc 1 4656 0
 7769 00fa 039B     		ldr	r3, [sp, #12]
 7770 00fc 5D89     		ldrh	r5, [r3, #10]
 7771              	.LVL1174:
 7772              	.L715:
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 7773              		.loc 1 4656 0 is_stmt 0 discriminator 1
 7774 00fe 002D     		cmp	r5, #0
 7775 0100 B3D0     		beq	.L713
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7776              		.loc 1 4657 0 is_stmt 1
 7777 0102 06F10108 		add	r8, r6, #1
 7778              	.LVL1175:
 7779 0106 039B     		ldr	r3, [sp, #12]
 7780 0108 1E63     		str	r6, [r3, #48]
4658:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(fs);
 7781              		.loc 1 4658 0
 7782 010a 0122     		movs	r2, #1
 7783 010c DA70     		strb	r2, [r3, #3]
4659:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
 7784              		.loc 1 4659 0
 7785 010e 0398     		ldr	r0, [sp, #12]
 7786 0110 FFF7FEFF 		bl	sync_window
 7787              	.LVL1176:
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(fs));
 7788              		.loc 1 4660 0
 7789 0114 0446     		mov	r4, r0
 7790 0116 0028     		cmp	r0, #0
 7791 0118 A7D1     		bne	.L713
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7792              		.loc 1 4661 0 discriminator 2
 7793 011a 4FF40072 		mov	r2, #512
 7794 011e 0021     		movs	r1, #0
 7795 0120 4846     		mov	r0, r9
 7796              	.LVL1177:
 7797 0122 FFF7FEFF 		bl	mem_set
 7798              	.LVL1178:
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 7799              		.loc 1 4656 0 discriminator 2
 7800 0126 013D     		subs	r5, r5, #1
 7801              	.LVL1179:
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7802              		.loc 1 4657 0 discriminator 2
 7803 0128 4646     		mov	r6, r8
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 261


 7804 012a E8E7     		b	.L715
 7805              	.LVL1180:
 7806              	.L733:
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 7807              		.loc 1 4653 0 discriminator 1
 7808 012c 836A     		ldr	r3, [r0, #40]
 7809 012e 9342     		cmp	r3, r2
 7810 0130 E0D1     		bne	.L714
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 7811              		.loc 1 4653 0 is_stmt 0
 7812 0132 0022     		movs	r2, #0
 7813              	.LVL1181:
 7814 0134 DEE7     		b	.L714
 7815              	.LVL1182:
 7816              	.L731:
4665:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7817              		.loc 1 4665 0 is_stmt 1
 7818 0136 04A8     		add	r0, sp, #16
 7819 0138 FFF7FEFF 		bl	dir_register
 7820              	.LVL1183:
 7821 013c 0446     		mov	r4, r0
 7822              	.LVL1184:
 7823 013e 96E7     		b	.L717
 7824              	.L732:
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
 7825              		.loc 1 4680 0
 7826 0140 0C9C     		ldr	r4, [sp, #48]
 7827              	.LVL1185:
4681:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
 7828              		.loc 1 4681 0
 7829 0142 5146     		mov	r1, r10
 7830 0144 04F11600 		add	r0, r4, #22
 7831 0148 FFF7FEFF 		bl	st_dword
 7832              	.LVL1186:
4682:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
 7833              		.loc 1 4682 0
 7834 014c 3A46     		mov	r2, r7
 7835 014e 2146     		mov	r1, r4
 7836 0150 0398     		ldr	r0, [sp, #12]
 7837 0152 FFF7FEFF 		bl	st_clust
 7838              	.LVL1187:
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7839              		.loc 1 4683 0
 7840 0156 1023     		movs	r3, #16
 7841 0158 E372     		strb	r3, [r4, #11]
4684:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7842              		.loc 1 4684 0
 7843 015a 039B     		ldr	r3, [sp, #12]
 7844 015c 0122     		movs	r2, #1
 7845 015e DA70     		strb	r2, [r3, #3]
4687:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7846              		.loc 1 4687 0
 7847 0160 0398     		ldr	r0, [sp, #12]
 7848 0162 FFF7FEFF 		bl	sync_fs
 7849              	.LVL1188:
 7850 0166 0446     		mov	r4, r0
 7851              	.LVL1189:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 262


 7852 0168 57E7     		b	.L709
 7853              	.LVL1190:
 7854              	.L719:
4628:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
 7855              		.loc 1 4628 0
 7856 016a 0824     		movs	r4, #8
 7857 016c 55E7     		b	.L709
 7858              		.cfi_endproc
 7859              	.LFE185:
 7861              		.section	.text.f_rename,"ax",%progbits
 7862              		.align	1
 7863              		.global	f_rename
 7864              		.syntax unified
 7865              		.thumb
 7866              		.thumb_func
 7867              		.fpu fpv4-sp-d16
 7869              	f_rename:
 7870              	.LFB186:
4710:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7871              		.loc 1 4710 0
 7872              		.cfi_startproc
 7873              		@ args = 0, pretend = 0, frame = 136
 7874              		@ frame_needed = 0, uses_anonymous_args = 0
 7875              	.LVL1191:
 7876 0000 30B5     		push	{r4, r5, lr}
 7877              	.LCFI116:
 7878              		.cfi_def_cfa_offset 12
 7879              		.cfi_offset 4, -12
 7880              		.cfi_offset 5, -8
 7881              		.cfi_offset 14, -4
 7882 0002 A3B0     		sub	sp, sp, #140
 7883              	.LCFI117:
 7884              		.cfi_def_cfa_offset 152
 7885 0004 0190     		str	r0, [sp, #4]
 7886 0006 22A8     		add	r0, sp, #136
 7887              	.LVL1192:
 7888 0008 40F8881D 		str	r1, [r0, #-136]!
4719:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
 7889              		.loc 1 4719 0
 7890 000c FFF7FEFF 		bl	get_ldnumber
 7891              	.LVL1193:
4720:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7892              		.loc 1 4720 0
 7893 0010 0222     		movs	r2, #2
 7894 0012 09A9     		add	r1, sp, #36
 7895 0014 01A8     		add	r0, sp, #4
 7896 0016 FFF7FEFF 		bl	find_volume
 7897              	.LVL1194:
4721:Middlewares/Third_Party/FatFs/src/ff.c **** 		djo.obj.fs = fs;
 7898              		.loc 1 4721 0
 7899 001a 0446     		mov	r4, r0
 7900 001c 30B1     		cbz	r0, .L745
 7901              	.LVL1195:
 7902              	.L735:
4799:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7903              		.loc 1 4799 0
 7904 001e 2146     		mov	r1, r4
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 263


 7905 0020 0998     		ldr	r0, [sp, #36]
 7906 0022 FFF7FEFF 		bl	unlock_fs
 7907              	.LVL1196:
4800:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7908              		.loc 1 4800 0
 7909 0026 2046     		mov	r0, r4
 7910 0028 23B0     		add	sp, sp, #140
 7911              	.LCFI118:
 7912              		.cfi_remember_state
 7913              		.cfi_def_cfa_offset 12
 7914              		@ sp needed
 7915 002a 30BD     		pop	{r4, r5, pc}
 7916              	.LVL1197:
 7917              	.L745:
 7918              	.LCFI119:
 7919              		.cfi_restore_state
4722:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 7920              		.loc 1 4722 0
 7921 002c 099B     		ldr	r3, [sp, #36]
 7922 002e 1693     		str	r3, [sp, #88]
4724:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
 7923              		.loc 1 4724 0
 7924 0030 0199     		ldr	r1, [sp, #4]
 7925 0032 16A8     		add	r0, sp, #88
 7926              	.LVL1198:
 7927 0034 FFF7FEFF 		bl	follow_path
 7928              	.LVL1199:
4725:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7929              		.loc 1 4725 0
 7930 0038 0446     		mov	r4, r0
 7931 003a 20B9     		cbnz	r0, .L736
4725:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7932              		.loc 1 4725 0 is_stmt 0 discriminator 1
 7933 003c 9DF88730 		ldrb	r3, [sp, #135]	@ zero_extendqisi2
 7934 0040 13F0A00F 		tst	r3, #160
 7935 0044 1ED1     		bne	.L741
 7936              	.L736:
 7937              	.LVL1200:
4727:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = chk_lock(&djo, 2);
 7938              		.loc 1 4727 0 is_stmt 1
 7939 0046 24B9     		cbnz	r4, .L737
4728:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 7940              		.loc 1 4728 0
 7941 0048 0221     		movs	r1, #2
 7942 004a 16A8     		add	r0, sp, #88
 7943 004c FFF7FEFF 		bl	chk_lock
 7944              	.LVL1201:
 7945 0050 0446     		mov	r4, r0
 7946              	.LVL1202:
 7947              	.L737:
4731:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7948              		.loc 1 4731 0
 7949 0052 002C     		cmp	r4, #0
 7950 0054 E3D1     		bne	.L735
4758:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
 7951              		.loc 1 4758 0
 7952 0056 1522     		movs	r2, #21
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 264


 7953 0058 1E99     		ldr	r1, [sp, #120]
 7954 005a 0B31     		adds	r1, r1, #11
 7955 005c 03A8     		add	r0, sp, #12
 7956 005e FFF7FEFF 		bl	mem_cpy
 7957              	.LVL1203:
4759:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
 7958              		.loc 1 4759 0
 7959 0062 3022     		movs	r2, #48
 7960 0064 16A9     		add	r1, sp, #88
 7961 0066 0AA8     		add	r0, sp, #40
 7962 0068 FFF7FEFF 		bl	mem_cpy
 7963              	.LVL1204:
4760:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
 7964              		.loc 1 4760 0
 7965 006c 0099     		ldr	r1, [sp]
 7966 006e 0AA8     		add	r0, sp, #40
 7967 0070 FFF7FEFF 		bl	follow_path
 7968              	.LVL1205:
4761:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
 7969              		.loc 1 4761 0
 7970 0074 0446     		mov	r4, r0
 7971 0076 68B9     		cbnz	r0, .L738
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7972              		.loc 1 4762 0
 7973 0078 0C9A     		ldr	r2, [sp, #48]
 7974 007a 189B     		ldr	r3, [sp, #96]
 7975 007c 9A42     		cmp	r2, r3
 7976 007e 03D0     		beq	.L746
 7977 0080 0824     		movs	r4, #8
 7978 0082 09E0     		b	.L739
 7979              	.L741:
4725:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7980              		.loc 1 4725 0
 7981 0084 0624     		movs	r4, #6
 7982 0086 E4E7     		b	.L737
 7983              	.L746:
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7984              		.loc 1 4762 0 discriminator 1
 7985 0088 0F9A     		ldr	r2, [sp, #60]
 7986 008a 1B9B     		ldr	r3, [sp, #108]
 7987 008c 9A42     		cmp	r2, r3
 7988 008e 10D0     		beq	.L740
 7989 0090 0824     		movs	r4, #8
 7990 0092 01E0     		b	.L739
 7991              	.L738:
4764:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
 7992              		.loc 1 4764 0
 7993 0094 0428     		cmp	r0, #4
 7994 0096 0CD0     		beq	.L740
 7995              	.LVL1206:
 7996              	.L739:
4788:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&djo);		/* Remove old entry */
 7997              		.loc 1 4788 0
 7998 0098 002C     		cmp	r4, #0
 7999 009a C0D1     		bne	.L735
4789:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
 8000              		.loc 1 4789 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 265


 8001 009c 16A8     		add	r0, sp, #88
 8002 009e FFF7FEFF 		bl	dir_remove
 8003              	.LVL1207:
4790:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
 8004              		.loc 1 4790 0
 8005 00a2 0446     		mov	r4, r0
 8006 00a4 0028     		cmp	r0, #0
 8007 00a6 BAD1     		bne	.L735
4791:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8008              		.loc 1 4791 0
 8009 00a8 0998     		ldr	r0, [sp, #36]
 8010              	.LVL1208:
 8011 00aa FFF7FEFF 		bl	sync_fs
 8012              	.LVL1209:
 8013 00ae 0446     		mov	r4, r0
 8014              	.LVL1210:
 8015 00b0 B5E7     		b	.L735
 8016              	.LVL1211:
 8017              	.L740:
4765:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
 8018              		.loc 1 4765 0
 8019 00b2 0AA8     		add	r0, sp, #40
 8020              	.LVL1212:
 8021 00b4 FFF7FEFF 		bl	dir_register
 8022              	.LVL1213:
4766:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
 8023              		.loc 1 4766 0
 8024 00b8 0446     		mov	r4, r0
 8025 00ba 0028     		cmp	r0, #0
 8026 00bc ECD1     		bne	.L739
4767:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
 8027              		.loc 1 4767 0
 8028 00be 129D     		ldr	r5, [sp, #72]
 8029              	.LVL1214:
4768:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
 8030              		.loc 1 4768 0
 8031 00c0 1322     		movs	r2, #19
 8032 00c2 0DF10E01 		add	r1, sp, #14
 8033 00c6 05F10D00 		add	r0, r5, #13
 8034              	.LVL1215:
 8035 00ca FFF7FEFF 		bl	mem_cpy
 8036              	.LVL1216:
4769:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 8037              		.loc 1 4769 0
 8038 00ce 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 8039 00d2 43F02003 		orr	r3, r3, #32
 8040 00d6 EB72     		strb	r3, [r5, #11]
4770:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
 8041              		.loc 1 4770 0
 8042 00d8 099B     		ldr	r3, [sp, #36]
 8043 00da 0122     		movs	r2, #1
 8044 00dc DA70     		strb	r2, [r3, #3]
4771:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
 8045              		.loc 1 4771 0
 8046 00de EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 8047 00e0 13F0100F 		tst	r3, #16
 8048 00e4 D8D0     		beq	.L739
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 266


4771:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
 8049              		.loc 1 4771 0 is_stmt 0 discriminator 1
 8050 00e6 189A     		ldr	r2, [sp, #96]
 8051 00e8 0C9B     		ldr	r3, [sp, #48]
 8052 00ea 9A42     		cmp	r2, r3
 8053 00ec D4D0     		beq	.L739
4772:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
 8054              		.loc 1 4772 0 is_stmt 1
 8055 00ee 099C     		ldr	r4, [sp, #36]
 8056 00f0 2946     		mov	r1, r5
 8057 00f2 2046     		mov	r0, r4
 8058 00f4 FFF7FEFF 		bl	ld_clust
 8059              	.LVL1217:
 8060 00f8 0146     		mov	r1, r0
 8061 00fa 2046     		mov	r0, r4
 8062 00fc FFF7FEFF 		bl	clust2sect
 8063              	.LVL1218:
4773:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
 8064              		.loc 1 4773 0
 8065 0100 0146     		mov	r1, r0
 8066 0102 A0B1     		cbz	r0, .L743
4777:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
 8067              		.loc 1 4777 0
 8068 0104 2046     		mov	r0, r4
 8069              	.LVL1219:
 8070 0106 FFF7FEFF 		bl	move_window
 8071              	.LVL1220:
4778:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
 8072              		.loc 1 4778 0
 8073 010a 099B     		ldr	r3, [sp, #36]
 8074 010c 03F15401 		add	r1, r3, #84
 8075              	.LVL1221:
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 8076              		.loc 1 4779 0
 8077 0110 0446     		mov	r4, r0
 8078 0112 0028     		cmp	r0, #0
 8079 0114 C0D1     		bne	.L739
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 8080              		.loc 1 4779 0 is_stmt 0 discriminator 1
 8081 0116 93F85520 		ldrb	r2, [r3, #85]	@ zero_extendqisi2
 8082 011a 2E2A     		cmp	r2, #46
 8083 011c BCD1     		bne	.L739
4780:Middlewares/Third_Party/FatFs/src/ff.c **** 									fs->wflag = 1;
 8084              		.loc 1 4780 0 is_stmt 1
 8085 011e 0C9A     		ldr	r2, [sp, #48]
 8086 0120 1846     		mov	r0, r3
 8087              	.LVL1222:
 8088 0122 FFF7FEFF 		bl	st_clust
 8089              	.LVL1223:
4781:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
 8090              		.loc 1 4781 0
 8091 0126 099B     		ldr	r3, [sp, #36]
 8092 0128 0122     		movs	r2, #1
 8093 012a DA70     		strb	r2, [r3, #3]
 8094 012c B4E7     		b	.L739
 8095              	.LVL1224:
 8096              	.L743:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 267


4774:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
 8097              		.loc 1 4774 0
 8098 012e 0224     		movs	r4, #2
 8099 0130 75E7     		b	.L735
 8100              		.cfi_endproc
 8101              	.LFE186:
 8103              		.section	.text.f_mkfs,"ax",%progbits
 8104              		.align	1
 8105              		.global	f_mkfs
 8106              		.syntax unified
 8107              		.thumb
 8108              		.thumb_func
 8109              		.fpu fpv4-sp-d16
 8111              	f_mkfs:
 8112              	.LFB187:
5297:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
 8113              		.loc 1 5297 0
 8114              		.cfi_startproc
 8115              		@ args = 4, pretend = 0, frame = 40
 8116              		@ frame_needed = 0, uses_anonymous_args = 0
 8117              	.LVL1225:
 8118 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8119              	.LCFI120:
 8120              		.cfi_def_cfa_offset 36
 8121              		.cfi_offset 4, -36
 8122              		.cfi_offset 5, -32
 8123              		.cfi_offset 6, -28
 8124              		.cfi_offset 7, -24
 8125              		.cfi_offset 8, -20
 8126              		.cfi_offset 9, -16
 8127              		.cfi_offset 10, -12
 8128              		.cfi_offset 11, -8
 8129              		.cfi_offset 14, -4
 8130 0004 8BB0     		sub	sp, sp, #44
 8131              	.LCFI121:
 8132              		.cfi_def_cfa_offset 80
 8133 0006 0AAC     		add	r4, sp, #40
 8134 0008 44F80C0D 		str	r0, [r4, #-12]!
 8135 000c 8846     		mov	r8, r1
 8136 000e 1546     		mov	r5, r2
 8137 0010 1F46     		mov	r7, r3
 8138              	.LVL1226:
5316:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 8139              		.loc 1 5316 0
 8140 0012 2046     		mov	r0, r4
 8141              	.LVL1227:
 8142 0014 FFF7FEFF 		bl	get_ldnumber
 8143              	.LVL1228:
5317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 8144              		.loc 1 5317 0
 8145 0018 0028     		cmp	r0, #0
 8146 001a C0F2D982 		blt	.L792
5318:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 8147              		.loc 1 5318 0
 8148 001e 944B     		ldr	r3, .L840
 8149 0020 53F82030 		ldr	r3, [r3, r0, lsl #2]
 8150 0024 0BB1     		cbz	r3, .L749
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 268


5318:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 8151              		.loc 1 5318 0 is_stmt 0 discriminator 1
 8152 0026 0022     		movs	r2, #0
 8153 0028 1A70     		strb	r2, [r3]
 8154              	.L749:
5319:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:create as new, 1-4:get from partition table) */
 8155              		.loc 1 5319 0 is_stmt 1
 8156 002a C4B2     		uxtb	r4, r0
 8157              	.LVL1229:
5323:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
 8158              		.loc 1 5323 0
 8159 002c 2046     		mov	r0, r4
 8160              	.LVL1230:
 8161 002e FFF7FEFF 		bl	disk_initialize
 8162              	.LVL1231:
5324:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 8163              		.loc 1 5324 0
 8164 0032 10F0010F 		tst	r0, #1
 8165 0036 40F0CD82 		bne	.L793
5325:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
 8166              		.loc 1 5325 0
 8167 003a 10F0040F 		tst	r0, #4
 8168 003e 40F0CB82 		bne	.L794
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 8169              		.loc 1 5326 0
 8170 0042 09AA     		add	r2, sp, #36
 8171 0044 0321     		movs	r1, #3
 8172 0046 2046     		mov	r0, r4
 8173              	.LVL1232:
 8174 0048 FFF7FEFF 		bl	disk_ioctl
 8175              	.LVL1233:
 8176 004c 38B9     		cbnz	r0, .L750
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 8177              		.loc 1 5326 0 is_stmt 0 discriminator 2
 8178 004e 099B     		ldr	r3, [sp, #36]
 8179 0050 2BB1     		cbz	r3, .L750
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 8180              		.loc 1 5326 0 discriminator 4
 8181 0052 B3F5004F 		cmp	r3, #32768
 8182 0056 02D8     		bhi	.L750
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 8183              		.loc 1 5326 0 discriminator 6
 8184 0058 5A1E     		subs	r2, r3, #1
 8185 005a 1342     		tst	r3, r2
 8186 005c 01D0     		beq	.L751
 8187              	.L750:
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 8188              		.loc 1 5326 0 discriminator 7
 8189 005e 0123     		movs	r3, #1
 8190 0060 0993     		str	r3, [sp, #36]
 8191              	.L751:
 8192              	.LVL1234:
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8193              		.loc 1 5333 0 is_stmt 1
 8194 0062 1DB1     		cbz	r5, .L752
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8195              		.loc 1 5333 0 is_stmt 0 discriminator 1
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 269


 8196 0064 B5F5007F 		cmp	r5, #512
 8197 0068 C0F0BA82 		bcc	.L795
 8198              	.L752:
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8199              		.loc 1 5333 0 discriminator 4
 8200 006c B5F1807F 		cmp	r5, #16777216
 8201 0070 00F2B882 		bhi	.L796
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8202              		.loc 1 5333 0 discriminator 6
 8203 0074 6B1E     		subs	r3, r5, #1
 8204 0076 2B42     		tst	r3, r5
 8205 0078 40F0B682 		bne	.L797
5334:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8206              		.loc 1 5334 0 is_stmt 1
 8207 007c 6D0A     		lsrs	r5, r5, #9
 8208              	.LVL1235:
5338:Middlewares/Third_Party/FatFs/src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
 8209              		.loc 1 5338 0
 8210 007e 149B     		ldr	r3, [sp, #80]
 8211 0080 4FEA532A 		lsr	r10, r3, #9
 8212              	.LVL1236:
5339:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!szb_buf) return FR_MKFS_ABORTED;
 8213              		.loc 1 5339 0
 8214 0084 23F4FF76 		bic	r6, r3, #510
 8215 0088 26F00106 		bic	r6, r6, #1
 8216              	.LVL1237:
5340:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8217              		.loc 1 5340 0
 8218 008c 002E     		cmp	r6, #0
 8219 008e 00F0AD82 		beq	.L798
5353:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 8220              		.loc 1 5353 0
 8221 0092 08AA     		add	r2, sp, #32
 8222 0094 0121     		movs	r1, #1
 8223 0096 2046     		mov	r0, r4
 8224 0098 FFF7FEFF 		bl	disk_ioctl
 8225              	.LVL1238:
 8226 009c 0028     		cmp	r0, #0
 8227 009e 40F0A782 		bne	.L799
5354:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 8228              		.loc 1 5354 0
 8229 00a2 18F00803 		ands	r3, r8, #8
 8230 00a6 0093     		str	r3, [sp]
 8231 00a8 70D0     		beq	.L800
 8232 00aa 4FF00009 		mov	r9, #0
 8233              	.L753:
 8234              	.LVL1239:
5355:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 8235              		.loc 1 5355 0 discriminator 4
 8236 00ae 089B     		ldr	r3, [sp, #32]
 8237 00b0 4B45     		cmp	r3, r9
 8238 00b2 C0F09F82 		bcc	.L801
5356:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8239              		.loc 1 5356 0
 8240 00b6 A3EB0903 		sub	r3, r3, r9
 8241 00ba 0893     		str	r3, [sp, #32]
5358:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 270


 8242              		.loc 1 5358 0
 8243 00bc 7F2B     		cmp	r3, #127
 8244 00be 40F29B82 		bls	.L802
5367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
 8245              		.loc 1 5367 0
 8246 00c2 802D     		cmp	r5, #128
 8247 00c4 00F29A82 		bhi	.L803
5368:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
 8248              		.loc 1 5368 0
 8249 00c8 18F00200 		ands	r0, r8, #2
 8250 00cc 06D0     		beq	.L754
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
 8251              		.loc 1 5369 0
 8252 00ce 08F00702 		and	r2, r8, #7
 8253 00d2 022A     		cmp	r2, #2
 8254 00d4 5DD0     		beq	.L804
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
 8255              		.loc 1 5369 0 is_stmt 0 discriminator 1
 8256 00d6 18F0010F 		tst	r8, #1
 8257 00da 61D0     		beq	.L805
 8258              	.L754:
5373:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
 8259              		.loc 1 5373 0 is_stmt 1
 8260 00dc 18F0010F 		tst	r8, #1
 8261 00e0 00F08E82 		beq	.L806
5374:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (0);
 8262              		.loc 1 5374 0
 8263 00e4 4FF0020B 		mov	fp, #2
 8264 00e8 0194     		str	r4, [sp, #4]
 8265 00ea CDF808A0 		str	r10, [sp, #8]
 8266 00ee 0396     		str	r6, [sp, #12]
 8267              	.LVL1240:
 8268              	.L756:
5544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
 8269              		.loc 1 5544 0
 8270 00f0 BBF1030F 		cmp	fp, #3
 8271 00f4 5FD0     		beq	.L774
5555:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
 8272              		.loc 1 5555 0
 8273 00f6 002D     		cmp	r5, #0
 8274 00f8 00F08280 		beq	.L831
 8275 00fc A846     		mov	r8, r5
 8276              	.LVL1241:
 8277              	.L762:
5559:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT12) {
 8278              		.loc 1 5559 0
 8279 00fe B3FBF8F2 		udiv	r2, r3, r8
 8280              	.LVL1242:
5560:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
 8281              		.loc 1 5560 0
 8282 0102 40F6F571 		movw	r1, #4085
 8283 0106 8A42     		cmp	r2, r1
 8284 0108 40F28B80 		bls	.L765
5561:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 8285              		.loc 1 5561 0
 8286 010c 0232     		adds	r2, r2, #2
 8287              	.LVL1243:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 271


 8288 010e 5200     		lsls	r2, r2, #1
 8289              	.LVL1244:
 8290              	.L766:
5566:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 1;						/* Number of reserved sectors */
 8291              		.loc 1 5566 0
 8292 0110 02F2FF12 		addw	r2, r2, #511
 8293              	.LVL1245:
 8294 0114 520A     		lsrs	r2, r2, #9
 8295              	.LVL1246:
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8296              		.loc 1 5568 0
 8297 0116 4FF0200E 		mov	lr, #32
5567:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = (DWORD)n_rootdir * SZDIRE / ss;	/* Rootdir size [sector] */
 8298              		.loc 1 5567 0
 8299 011a 4FF0010C 		mov	ip, #1
 8300              	.LVL1247:
 8301              	.L761:
5570:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
 8302              		.loc 1 5570 0
 8303 011e 0CEB090A 		add	r10, ip, r9
 8304              	.LVL1248:
5571:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8305              		.loc 1 5571 0
 8306 0122 02EB0A01 		add	r1, r2, r10
 8307 0126 7144     		add	r1, r1, lr
 8308              	.LVL1249:
5574:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 8309              		.loc 1 5574 0
 8310 0128 099E     		ldr	r6, [sp, #36]
 8311 012a 7418     		adds	r4, r6, r1
 8312 012c 013C     		subs	r4, r4, #1
 8313 012e 7642     		negs	r6, r6
 8314 0130 3440     		ands	r4, r4, r6
 8315 0132 641A     		subs	r4, r4, r1
 8316              	.LVL1250:
5575:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv += n; b_fat += n;
 8317              		.loc 1 5575 0
 8318 0134 BBF1030F 		cmp	fp, #3
 8319 0138 7BD0     		beq	.L832
5578:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8320              		.loc 1 5578 0
 8321 013a 2244     		add	r2, r2, r4
 8322              	.LVL1251:
 8323              	.L768:
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 8324              		.loc 1 5582 0
 8325 013c 01EB0811 		add	r1, r1, r8, lsl #4
 8326              	.LVL1252:
 8327 0140 A1EB0901 		sub	r1, r1, r9
 8328 0144 8B42     		cmp	r3, r1
 8329 0146 C0F05F82 		bcc	.L810
5583:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8330              		.loc 1 5583 0
 8331 014a A3EB0C01 		sub	r1, r3, ip
 8332 014e 891A     		subs	r1, r1, r2
 8333 0150 A1EB0E01 		sub	r1, r1, lr
 8334 0154 B1FBF8F1 		udiv	r1, r1, r8
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 272


 8335              	.LVL1253:
5584:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
 8336              		.loc 1 5584 0
 8337 0158 BBF1030F 		cmp	fp, #3
 8338 015c 6CD0     		beq	.L833
 8339              	.LVL1254:
 8340              	.L769:
5590:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
 8341              		.loc 1 5590 0
 8342 015e BBF1020F 		cmp	fp, #2
 8343 0162 40F08D80 		bne	.L771
5591:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (pau * 2) <= 64) {
 8344              		.loc 1 5591 0
 8345 0166 4FF6F574 		movw	r4, #65525
 8346 016a A142     		cmp	r1, r4
 8347 016c 71D9     		bls	.L772
5592:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 8348              		.loc 1 5592 0
 8349 016e 1DB9     		cbnz	r5, .L773
5592:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 8350              		.loc 1 5592 0 is_stmt 0 discriminator 1
 8351 0170 4FEA4802 		lsl	r2, r8, #1
 8352              	.LVL1255:
 8353 0174 402A     		cmp	r2, #64
 8354 0176 1AD9     		bls	.L812
 8355              	.L773:
5595:Middlewares/Third_Party/FatFs/src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
 8356              		.loc 1 5595 0 is_stmt 1
 8357 0178 D8B9     		cbnz	r0, .L813
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8358              		.loc 1 5598 0
 8359 017a 002D     		cmp	r5, #0
 8360 017c 40F04882 		bne	.L814
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8361              		.loc 1 5598 0 is_stmt 0 discriminator 1
 8362 0180 4FEA4805 		lsl	r5, r8, #1
 8363              	.LVL1256:
 8364 0184 802D     		cmp	r5, #128
 8365 0186 B3D9     		bls	.L756
5599:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8366              		.loc 1 5599 0 is_stmt 1
 8367 0188 0E20     		movs	r0, #14
 8368 018a 26E2     		b	.L748
 8369              	.LVL1257:
 8370              	.L800:
5354:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 8371              		.loc 1 5354 0
 8372 018c 4FF03F09 		mov	r9, #63
 8373 0190 8DE7     		b	.L753
 8374              	.LVL1258:
 8375              	.L804:
5370:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8376              		.loc 1 5370 0
 8377 0192 4FF0030B 		mov	fp, #3
 8378 0196 0194     		str	r4, [sp, #4]
 8379 0198 CDF808A0 		str	r10, [sp, #8]
 8380 019c 0396     		str	r6, [sp, #12]
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 273


 8381 019e A7E7     		b	.L756
 8382              	.L805:
 8383 01a0 4FF0030B 		mov	fp, #3
 8384 01a4 0194     		str	r4, [sp, #4]
 8385 01a6 CDF808A0 		str	r10, [sp, #8]
 8386 01aa 0396     		str	r6, [sp, #12]
 8387 01ac A0E7     		b	.L756
 8388              	.LVL1259:
 8389              	.L812:
5593:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8390              		.loc 1 5593 0
 8391 01ae 1546     		mov	r5, r2
 8392              	.LVL1260:
 8393 01b0 9EE7     		b	.L756
 8394              	.LVL1261:
 8395              	.L813:
5596:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8396              		.loc 1 5596 0
 8397 01b2 4FF0030B 		mov	fp, #3
 8398              	.LVL1262:
 8399              	.L774:
5545:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
 8400              		.loc 1 5545 0
 8401 01b6 9DB1     		cbz	r5, .L834
 8402 01b8 A846     		mov	r8, r5
 8403              	.L758:
 8404              	.LVL1263:
5549:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
 8405              		.loc 1 5549 0
 8406 01ba B3FBF8F1 		udiv	r1, r3, r8
 8407              	.LVL1264:
5550:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
 8408              		.loc 1 5550 0
 8409 01be 8A1C     		adds	r2, r1, #2
 8410 01c0 9200     		lsls	r2, r2, #2
 8411 01c2 02F2FF12 		addw	r2, r2, #511
 8412 01c6 520A     		lsrs	r2, r2, #9
 8413              	.LVL1265:
5553:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
 8414              		.loc 1 5553 0
 8415 01c8 A1F57F41 		sub	r1, r1, #65280
 8416              	.LVL1266:
 8417 01cc F639     		subs	r1, r1, #246
 8418              	.LVL1267:
 8419 01ce 294C     		ldr	r4, .L840+4
 8420 01d0 A142     		cmp	r1, r4
 8421 01d2 00F21782 		bhi	.L808
5552:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
 8422              		.loc 1 5552 0
 8423 01d6 4FF0000E 		mov	lr, #0
5551:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = 0;		/* No static directory */
 8424              		.loc 1 5551 0
 8425 01da 4FF0200C 		mov	ip, #32
 8426 01de 9EE7     		b	.L761
 8427              	.LVL1268:
 8428              	.L834:
5546:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 274


 8429              		.loc 1 5546 0
 8430 01e0 5C0C     		lsrs	r4, r3, #17
 8431              	.LVL1269:
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8432              		.loc 1 5547 0
 8433 01e2 0021     		movs	r1, #0
 8434 01e4 4FF00108 		mov	r8, #1
 8435 01e8 02E0     		b	.L759
 8436              	.LVL1270:
 8437              	.L760:
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8438              		.loc 1 5547 0 is_stmt 0 discriminator 4
 8439 01ea 0131     		adds	r1, r1, #1
 8440              	.LVL1271:
 8441 01ec 4FEA4808 		lsl	r8, r8, #1
 8442              	.LVL1272:
 8443              	.L759:
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8444              		.loc 1 5547 0 discriminator 1
 8445 01f0 214A     		ldr	r2, .L840+8
 8446 01f2 32F81120 		ldrh	r2, [r2, r1, lsl #1]
 8447 01f6 002A     		cmp	r2, #0
 8448 01f8 DFD0     		beq	.L758
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8449              		.loc 1 5547 0 discriminator 3
 8450 01fa A242     		cmp	r2, r4
 8451 01fc F5D9     		bls	.L760
 8452 01fe DCE7     		b	.L758
 8453              	.LVL1273:
 8454              	.L831:
5556:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 8455              		.loc 1 5556 0 is_stmt 1
 8456 0200 1C0B     		lsrs	r4, r3, #12
 8457              	.LVL1274:
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8458              		.loc 1 5557 0
 8459 0202 0021     		movs	r1, #0
 8460 0204 4FF00108 		mov	r8, #1
 8461 0208 02E0     		b	.L763
 8462              	.LVL1275:
 8463              	.L764:
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8464              		.loc 1 5557 0 is_stmt 0 discriminator 4
 8465 020a 0131     		adds	r1, r1, #1
 8466              	.LVL1276:
 8467 020c 4FEA4808 		lsl	r8, r8, #1
 8468              	.LVL1277:
 8469              	.L763:
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8470              		.loc 1 5557 0 discriminator 1
 8471 0210 1A4A     		ldr	r2, .L840+12
 8472 0212 32F81120 		ldrh	r2, [r2, r1, lsl #1]
 8473 0216 002A     		cmp	r2, #0
 8474 0218 3FF471AF 		beq	.L762
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8475              		.loc 1 5557 0 discriminator 3
 8476 021c A242     		cmp	r2, r4
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 275


 8477 021e F4D9     		bls	.L764
 8478 0220 6DE7     		b	.L762
 8479              	.LVL1278:
 8480              	.L765:
5564:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8481              		.loc 1 5564 0 is_stmt 1
 8482 0222 02EB4202 		add	r2, r2, r2, lsl #1
 8483              	.LVL1279:
 8484 0226 0132     		adds	r2, r2, #1
 8485 0228 5208     		lsrs	r2, r2, #1
 8486 022a 0332     		adds	r2, r2, #3
 8487              	.LVL1280:
5563:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
 8488              		.loc 1 5563 0
 8489 022c 4FF0010B 		mov	fp, #1
 8490 0230 6EE7     		b	.L766
 8491              	.LVL1281:
 8492              	.L832:
5576:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
 8493              		.loc 1 5576 0
 8494 0232 A444     		add	ip, ip, r4
 8495              	.LVL1282:
 8496 0234 A244     		add	r10, r10, r4
 8497              	.LVL1283:
 8498 0236 81E7     		b	.L768
 8499              	.LVL1284:
 8500              	.L833:
5585:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
 8501              		.loc 1 5585 0
 8502 0238 4FF6F574 		movw	r4, #65525
 8503              	.LVL1285:
 8504 023c A142     		cmp	r1, r4
 8505 023e 8ED8     		bhi	.L769
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8506              		.loc 1 5586 0
 8507 0240 002D     		cmp	r5, #0
 8508 0242 40F0E381 		bne	.L811
 8509              	.LVL1286:
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8510              		.loc 1 5586 0 is_stmt 0 discriminator 1
 8511 0246 5FEA5805 		lsrs	r5, r8, #1
 8512              	.LVL1287:
 8513 024a 7FF451AF 		bne	.L756
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8514              		.loc 1 5587 0 is_stmt 1
 8515 024e 0E20     		movs	r0, #14
 8516 0250 C3E1     		b	.L748
 8517              	.L772:
5601:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
 8518              		.loc 1 5601 0
 8519 0252 40F6F574 		movw	r4, #4085
 8520 0256 A142     		cmp	r1, r4
 8521 0258 12D8     		bhi	.L771
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8522              		.loc 1 5602 0
 8523 025a 002D     		cmp	r5, #0
 8524 025c 40F0DA81 		bne	.L815
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 276


5602:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8525              		.loc 1 5602 0 is_stmt 0 discriminator 1
 8526 0260 4FEA4805 		lsl	r5, r8, #1
 8527              	.LVL1288:
 8528 0264 802D     		cmp	r5, #128
 8529 0266 7FF643AF 		bls	.L756
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8530              		.loc 1 5603 0 is_stmt 1
 8531 026a 0E20     		movs	r0, #14
 8532 026c B5E1     		b	.L748
 8533              	.L841:
 8534 026e 00BF     		.align	2
 8535              	.L840:
 8536 0270 00000000 		.word	.LANCHOR2
 8537 0274 FFFFFE0F 		.word	268369919
 8538 0278 00000000 		.word	.LANCHOR4
 8539 027c 00000000 		.word	.LANCHOR5
 8540              	.L771:
 8541 0280 CDF818E0 		str	lr, [sp, #24]
 8542 0284 6546     		mov	r5, ip
 8543              	.LVL1289:
 8544 0286 0592     		str	r2, [sp, #20]
 8545 0288 CDF810A0 		str	r10, [sp, #16]
 8546 028c 019C     		ldr	r4, [sp, #4]
 8547 028e DDF808A0 		ldr	r10, [sp, #8]
 8548              	.LVL1290:
 8549 0292 039E     		ldr	r6, [sp, #12]
 8550 0294 0291     		str	r1, [sp, #8]
 8551              	.LVL1291:
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8552              		.loc 1 5606 0
 8553 0296 BBF1010F 		cmp	fp, #1
 8554 029a 04D1     		bne	.L775
 8555              	.LVL1292:
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8556              		.loc 1 5606 0 is_stmt 0 discriminator 1
 8557 029c 40F6F573 		movw	r3, #4085
 8558 02a0 9942     		cmp	r1, r3
 8559 02a2 00F2B981 		bhi	.L816
 8560              	.L775:
5617:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(buf + BS_JmpBoot, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code (x86), OEM name */
 8561              		.loc 1 5617 0 is_stmt 1
 8562 02a6 4FF40072 		mov	r2, #512
 8563              	.LVL1293:
 8564 02aa 0021     		movs	r1, #0
 8565              	.LVL1294:
 8566 02ac 3846     		mov	r0, r7
 8567 02ae FFF7FEFF 		bl	mem_set
 8568              	.LVL1295:
5618:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_BytsPerSec, ss);				/* Sector size [byte] */
 8569              		.loc 1 5618 0
 8570 02b2 0B22     		movs	r2, #11
 8571 02b4 DA49     		ldr	r1, .L842
 8572 02b6 3846     		mov	r0, r7
 8573 02b8 FFF7FEFF 		bl	mem_cpy
 8574              	.LVL1296:
5619:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_SecPerClus] = (BYTE)pau;				/* Cluster size [sector] */
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 277


 8575              		.loc 1 5619 0
 8576 02bc 4FF40071 		mov	r1, #512
 8577 02c0 07F10B00 		add	r0, r7, #11
 8578 02c4 FFF7FEFF 		bl	st_word
 8579              	.LVL1297:
5620:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RsvdSecCnt, (WORD)sz_rsv);	/* Size of reserved area */
 8580              		.loc 1 5620 0
 8581 02c8 87F80D80 		strb	r8, [r7, #13]
5621:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
 8582              		.loc 1 5621 0
 8583 02cc A9B2     		uxth	r1, r5
 8584 02ce 07F10E00 		add	r0, r7, #14
 8585 02d2 FFF7FEFF 		bl	st_word
 8586              	.LVL1298:
5622:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
 8587              		.loc 1 5622 0
 8588 02d6 0123     		movs	r3, #1
 8589 02d8 3B74     		strb	r3, [r7, #16]
5623:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 8590              		.loc 1 5623 0
 8591 02da 07F11100 		add	r0, r7, #17
 8592 02de BBF1030F 		cmp	fp, #3
 8593 02e2 00F0CA80 		beq	.L817
 8594 02e6 4FF40071 		mov	r1, #512
 8595              	.L776:
5623:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 8596              		.loc 1 5623 0 is_stmt 0 discriminator 4
 8597 02ea FFF7FEFF 		bl	st_word
 8598              	.LVL1299:
5624:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
 8599              		.loc 1 5624 0 is_stmt 1 discriminator 4
 8600 02ee 0899     		ldr	r1, [sp, #32]
 8601 02f0 B1F5803F 		cmp	r1, #65536
 8602 02f4 80F0C380 		bcs	.L777
5625:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8603              		.loc 1 5625 0
 8604 02f8 89B2     		uxth	r1, r1
 8605 02fa 07F11300 		add	r0, r7, #19
 8606 02fe FFF7FEFF 		bl	st_word
 8607              	.LVL1300:
 8608              	.L778:
5629:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
 8609              		.loc 1 5629 0
 8610 0302 F823     		movs	r3, #248
 8611 0304 7B75     		strb	r3, [r7, #21]
5630:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_NumHeads, 255);				/* Number of heads (for int13) */
 8612              		.loc 1 5630 0
 8613 0306 3F21     		movs	r1, #63
 8614 0308 07F11800 		add	r0, r7, #24
 8615 030c FFF7FEFF 		bl	st_word
 8616              	.LVL1301:
5631:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + BPB_HiddSec, b_vol);				/* Volume offset in the physical drive [sector] */
 8617              		.loc 1 5631 0
 8618 0310 FF21     		movs	r1, #255
 8619 0312 07F11A00 		add	r0, r7, #26
 8620 0316 FFF7FEFF 		bl	st_word
 8621              	.LVL1302:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 278


5632:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
 8622              		.loc 1 5632 0
 8623 031a 4946     		mov	r1, r9
 8624 031c 07F11C00 		add	r0, r7, #28
 8625 0320 FFF7FEFF 		bl	st_dword
 8626              	.LVL1303:
5633:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
 8627              		.loc 1 5633 0
 8628 0324 BBF1030F 		cmp	fp, #3
 8629 0328 00F0AE80 		beq	.L835
5643:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FATSz16, (WORD)sz_fat);	/* FAT size [sector] */
 8630              		.loc 1 5643 0
 8631 032c FFF7FEFF 		bl	get_fattime
 8632              	.LVL1304:
 8633 0330 0146     		mov	r1, r0
 8634 0332 07F12700 		add	r0, r7, #39
 8635 0336 FFF7FEFF 		bl	st_dword
 8636              	.LVL1305:
5644:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
 8637              		.loc 1 5644 0
 8638 033a BDF81410 		ldrh	r1, [sp, #20]
 8639 033e 07F11600 		add	r0, r7, #22
 8640 0342 FFF7FEFF 		bl	st_word
 8641              	.LVL1306:
5645:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
 8642              		.loc 1 5645 0
 8643 0346 8023     		movs	r3, #128
 8644 0348 87F82430 		strb	r3, [r7, #36]
5646:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
 8645              		.loc 1 5646 0
 8646 034c 2923     		movs	r3, #41
 8647 034e 87F82630 		strb	r3, [r7, #38]
5647:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8648              		.loc 1 5647 0
 8649 0352 1322     		movs	r2, #19
 8650 0354 B349     		ldr	r1, .L842+4
 8651 0356 07F12B00 		add	r0, r7, #43
 8652 035a FFF7FEFF 		bl	mem_cpy
 8653              	.LVL1307:
 8654              	.L780:
5649:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector 
 8655              		.loc 1 5649 0
 8656 035e 07F5FF73 		add	r3, r7, #510
 8657 0362 0193     		str	r3, [sp, #4]
 8658              	.LVL1308:
 8659 0364 4AF65521 		movw	r1, #43605
 8660 0368 1846     		mov	r0, r3
 8661 036a FFF7FEFF 		bl	st_word
 8662              	.LVL1309:
5650:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8663              		.loc 1 5650 0
 8664 036e 0123     		movs	r3, #1
 8665 0370 4A46     		mov	r2, r9
 8666 0372 3946     		mov	r1, r7
 8667 0374 2046     		mov	r0, r4
 8668 0376 FFF7FEFF 		bl	disk_write
 8669              	.LVL1310:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 279


 8670 037a 0028     		cmp	r0, #0
 8671 037c 40F04E81 		bne	.L818
5653:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
 8672              		.loc 1 5653 0
 8673 0380 BBF1030F 		cmp	fp, #3
 8674 0384 00F0A880 		beq	.L836
 8675              	.L781:
5666:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat;		/* FAT start sector */
 8676              		.loc 1 5666 0
 8677 0388 3246     		mov	r2, r6
 8678 038a 0021     		movs	r1, #0
 8679 038c 3846     		mov	r0, r7
 8680 038e FFF7FEFF 		bl	mem_set
 8681              	.LVL1311:
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8682              		.loc 1 5668 0
 8683 0392 0025     		movs	r5, #0
 8684              	.LVL1312:
 8685 0394 CDF80880 		str	r8, [sp, #8]
 8686              	.LVL1313:
 8687              	.L782:
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8688              		.loc 1 5668 0 is_stmt 0 discriminator 1
 8689 0398 002D     		cmp	r5, #0
 8690 039a 00F0D280 		beq	.L787
 8691 039e DDF80880 		ldr	r8, [sp, #8]
5686:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 8692              		.loc 1 5686 0 is_stmt 1
 8693 03a2 BBF1030F 		cmp	fp, #3
 8694 03a6 00F00681 		beq	.L837
 8695 03aa 069E     		ldr	r6, [sp, #24]
 8696 03ac DDF81080 		ldr	r8, [sp, #16]
 8697              	.LVL1314:
 8698              	.L789:
5688:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 8699              		.loc 1 5688 0
 8700 03b0 3546     		mov	r5, r6
 8701 03b2 5645     		cmp	r6, r10
 8702 03b4 28BF     		it	cs
 8703 03b6 5546     		movcs	r5, r10
 8704              	.LVL1315:
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
 8705              		.loc 1 5689 0
 8706 03b8 2B46     		mov	r3, r5
 8707 03ba 4246     		mov	r2, r8
 8708 03bc 3946     		mov	r1, r7
 8709 03be 2046     		mov	r0, r4
 8710 03c0 FFF7FEFF 		bl	disk_write
 8711              	.LVL1316:
 8712 03c4 0028     		cmp	r0, #0
 8713 03c6 40F03981 		bne	.L821
5690:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
 8714              		.loc 1 5690 0
 8715 03ca A844     		add	r8, r8, r5
 8716              	.LVL1317:
5691:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8717              		.loc 1 5691 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 280


 8718 03cc 761B     		subs	r6, r6, r5
 8719              	.LVL1318:
 8720 03ce EFD1     		bne	.L789
5698:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x0C;		/* FAT32X */
 8721              		.loc 1 5698 0
 8722 03d0 BBF1030F 		cmp	fp, #3
 8723 03d4 00F0F380 		beq	.L822
5701:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = 0x06;	/* FAT12/16 (>=64KS) */
 8724              		.loc 1 5701 0
 8725 03d8 089B     		ldr	r3, [sp, #32]
 8726 03da B3F5803F 		cmp	r3, #65536
 8727 03de 80F0F180 		bcs	.L823
5704:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8728              		.loc 1 5704 0
 8729 03e2 BBF1020F 		cmp	fp, #2
 8730 03e6 40F0F080 		bne	.L824
 8731 03ea 4FF00408 		mov	r8, #4
 8732              	.LVL1319:
 8733              	.L790:
5716:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
 8734              		.loc 1 5716 0
 8735 03ee 009B     		ldr	r3, [sp]
 8736 03f0 CBBB     		cbnz	r3, .L791
5717:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);		/* MBR signature */
 8737              		.loc 1 5717 0
 8738 03f2 4FF40072 		mov	r2, #512
 8739 03f6 0021     		movs	r1, #0
 8740 03f8 3846     		mov	r0, r7
 8741 03fa FFF7FEFF 		bl	mem_set
 8742              	.LVL1320:
5718:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte = buf + MBR_Table;				/* Create partition table for single partition in the drive */
 8743              		.loc 1 5718 0
 8744 03fe 4AF65521 		movw	r1, #43605
 8745 0402 0198     		ldr	r0, [sp, #4]
 8746 0404 FFF7FEFF 		bl	st_word
 8747              	.LVL1321:
5720:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StHead] = 1;				/* Start head */
 8748              		.loc 1 5720 0
 8749 0408 0025     		movs	r5, #0
 8750              	.LVL1322:
 8751 040a 87F8BE51 		strb	r5, [r7, #446]
5721:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
 8752              		.loc 1 5721 0
 8753 040e 0126     		movs	r6, #1
 8754              	.LVL1323:
 8755 0410 87F8BF61 		strb	r6, [r7, #447]
5722:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StCyl] = 0;					/* Start cylinder */
 8756              		.loc 1 5722 0
 8757 0414 87F8C061 		strb	r6, [r7, #448]
5723:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_System] = sys;				/* System type */
 8758              		.loc 1 5723 0
 8759 0418 87F8C151 		strb	r5, [r7, #449]
5724:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
 8760              		.loc 1 5724 0
 8761 041c 87F8C281 		strb	r8, [r7, #450]
5725:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
 8762              		.loc 1 5725 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 281


 8763 0420 089B     		ldr	r3, [sp, #32]
 8764 0422 4B44     		add	r3, r3, r9
 8765 0424 43F6C162 		movw	r2, #16065
 8766 0428 B3FBF2F3 		udiv	r3, r3, r2
 8767              	.LVL1324:
5726:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
 8768              		.loc 1 5726 0
 8769 042c FE22     		movs	r2, #254
 8770 042e 87F8C321 		strb	r2, [r7, #451]
5727:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
 8771              		.loc 1 5727 0
 8772 0432 9A08     		lsrs	r2, r3, #2
 8773 0434 42F03F02 		orr	r2, r2, #63
 8774 0438 87F8C421 		strb	r2, [r7, #452]
5728:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_StLba, b_vol);	/* Start offset in LBA */
 8775              		.loc 1 5728 0
 8776 043c 87F8C531 		strb	r3, [r7, #453]
5729:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_SizLba, sz_vol);	/* Size in sectors */
 8777              		.loc 1 5729 0
 8778 0440 4946     		mov	r1, r9
 8779 0442 07F5E370 		add	r0, r7, #454
 8780 0446 FFF7FEFF 		bl	st_dword
 8781              	.LVL1325:
5730:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the MBR */
 8782              		.loc 1 5730 0
 8783 044a 0899     		ldr	r1, [sp, #32]
 8784 044c 07F5E570 		add	r0, r7, #458
 8785 0450 FFF7FEFF 		bl	st_dword
 8786              	.LVL1326:
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8787              		.loc 1 5731 0
 8788 0454 3346     		mov	r3, r6
 8789 0456 2A46     		mov	r2, r5
 8790 0458 3946     		mov	r1, r7
 8791 045a 2046     		mov	r0, r4
 8792 045c FFF7FEFF 		bl	disk_write
 8793              	.LVL1327:
 8794 0460 0028     		cmp	r0, #0
 8795 0462 40F0ED80 		bne	.L825
 8796              	.LVL1328:
 8797              	.L791:
5735:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8798              		.loc 1 5735 0
 8799 0466 0022     		movs	r2, #0
 8800 0468 1146     		mov	r1, r2
 8801 046a 2046     		mov	r0, r4
 8802 046c FFF7FEFF 		bl	disk_ioctl
 8803              	.LVL1329:
 8804 0470 0028     		cmp	r0, #0
 8805 0472 00F0E780 		beq	.L826
 8806 0476 0120     		movs	r0, #1
 8807 0478 AFE0     		b	.L748
 8808              	.LVL1330:
 8809              	.L817:
5623:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 8810              		.loc 1 5623 0
 8811 047a 0021     		movs	r1, #0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 282


 8812 047c 35E7     		b	.L776
 8813              	.L777:
5627:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8814              		.loc 1 5627 0
 8815 047e 07F12000 		add	r0, r7, #32
 8816 0482 FFF7FEFF 		bl	st_dword
 8817              	.LVL1331:
 8818 0486 3CE7     		b	.L778
 8819              	.L835:
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FATSz32, sz_fat);		/* FAT size [sector] */
 8820              		.loc 1 5634 0
 8821 0488 FFF7FEFF 		bl	get_fattime
 8822              	.LVL1332:
 8823 048c 0146     		mov	r1, r0
 8824 048e 07F14300 		add	r0, r7, #67
 8825 0492 FFF7FEFF 		bl	st_dword
 8826              	.LVL1333:
5635:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClus32, 2);			/* Root directory cluster # (2) */
 8827              		.loc 1 5635 0
 8828 0496 0599     		ldr	r1, [sp, #20]
 8829 0498 07F12400 		add	r0, r7, #36
 8830 049c FFF7FEFF 		bl	st_dword
 8831              	.LVL1334:
5636:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSInfo32, 1);				/* Offset of FSINFO sector (VBR + 1) */
 8832              		.loc 1 5636 0
 8833 04a0 0221     		movs	r1, #2
 8834 04a2 07F12C00 		add	r0, r7, #44
 8835 04a6 FFF7FEFF 		bl	st_dword
 8836              	.LVL1335:
5637:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_BkBootSec32, 6);			/* Offset of backup VBR (VBR + 6) */
 8837              		.loc 1 5637 0
 8838 04aa 0121     		movs	r1, #1
 8839 04ac 07F13000 		add	r0, r7, #48
 8840 04b0 FFF7FEFF 		bl	st_word
 8841              	.LVL1336:
5638:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
 8842              		.loc 1 5638 0
 8843 04b4 0621     		movs	r1, #6
 8844 04b6 07F13200 		add	r0, r7, #50
 8845 04ba FFF7FEFF 		bl	st_word
 8846              	.LVL1337:
5639:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
 8847              		.loc 1 5639 0
 8848 04be 8023     		movs	r3, #128
 8849 04c0 87F84030 		strb	r3, [r7, #64]
5640:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
 8850              		.loc 1 5640 0
 8851 04c4 2923     		movs	r3, #41
 8852 04c6 87F84230 		strb	r3, [r7, #66]
5641:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8853              		.loc 1 5641 0
 8854 04ca 1322     		movs	r2, #19
 8855 04cc 5649     		ldr	r1, .L842+8
 8856 04ce 07F14700 		add	r0, r7, #71
 8857 04d2 FFF7FEFF 		bl	mem_cpy
 8858              	.LVL1338:
 8859 04d6 42E7     		b	.L780
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 283


 8860              	.LVL1339:
 8861              	.L836:
5654:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
 8862              		.loc 1 5654 0
 8863 04d8 0123     		movs	r3, #1
 8864 04da 09F10602 		add	r2, r9, #6
 8865 04de 3946     		mov	r1, r7
 8866 04e0 2046     		mov	r0, r4
 8867 04e2 FFF7FEFF 		bl	disk_write
 8868              	.LVL1340:
5655:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_LeadSig, 0x41615252);
 8869              		.loc 1 5655 0
 8870 04e6 4FF40072 		mov	r2, #512
 8871 04ea 0021     		movs	r1, #0
 8872 04ec 3846     		mov	r0, r7
 8873 04ee FFF7FEFF 		bl	mem_set
 8874              	.LVL1341:
5656:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_StrucSig, 0x61417272);
 8875              		.loc 1 5656 0
 8876 04f2 4E49     		ldr	r1, .L842+12
 8877 04f4 3846     		mov	r0, r7
 8878 04f6 FFF7FEFF 		bl	st_dword
 8879              	.LVL1342:
5657:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
 8880              		.loc 1 5657 0
 8881 04fa 4D49     		ldr	r1, .L842+16
 8882 04fc 07F5F270 		add	r0, r7, #484
 8883 0500 FFF7FEFF 		bl	st_dword
 8884              	.LVL1343:
5658:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
 8885              		.loc 1 5658 0
 8886 0504 029B     		ldr	r3, [sp, #8]
 8887 0506 591E     		subs	r1, r3, #1
 8888 0508 07F5F470 		add	r0, r7, #488
 8889 050c FFF7FEFF 		bl	st_dword
 8890              	.LVL1344:
5659:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);
 8891              		.loc 1 5659 0
 8892 0510 0221     		movs	r1, #2
 8893 0512 07F5F670 		add	r0, r7, #492
 8894 0516 FFF7FEFF 		bl	st_dword
 8895              	.LVL1345:
5660:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
 8896              		.loc 1 5660 0
 8897 051a 4AF65521 		movw	r1, #43605
 8898 051e 0198     		ldr	r0, [sp, #4]
 8899 0520 FFF7FEFF 		bl	st_word
 8900              	.LVL1346:
5661:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
 8901              		.loc 1 5661 0
 8902 0524 0123     		movs	r3, #1
 8903 0526 09F10702 		add	r2, r9, #7
 8904 052a 3946     		mov	r1, r7
 8905 052c 2046     		mov	r0, r4
 8906 052e FFF7FEFF 		bl	disk_write
 8907              	.LVL1347:
5662:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 284


 8908              		.loc 1 5662 0
 8909 0532 0123     		movs	r3, #1
 8910 0534 09EB0302 		add	r2, r9, r3
 8911 0538 3946     		mov	r1, r7
 8912 053a 2046     		mov	r0, r4
 8913 053c FFF7FEFF 		bl	disk_write
 8914              	.LVL1348:
 8915 0540 22E7     		b	.L781
 8916              	.LVL1349:
 8917              	.L787:
5669:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, 0xFFFFFFF8);	/* Entry 0 */
 8918              		.loc 1 5669 0
 8919 0542 BBF1030F 		cmp	fp, #3
 8920 0546 23D0     		beq	.L838
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8921              		.loc 1 5674 0
 8922 0548 BBF1010F 		cmp	fp, #1
 8923 054c 31D0     		beq	.L839
 8924 054e 6FF00701 		mvn	r1, #7
 8925              	.L785:
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8926              		.loc 1 5674 0 is_stmt 0 discriminator 4
 8927 0552 3846     		mov	r0, r7
 8928 0554 FFF7FEFF 		bl	st_dword
 8929              	.LVL1350:
 8930              	.L784:
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8931              		.loc 1 5674 0
 8932 0558 DDF81480 		ldr	r8, [sp, #20]
 8933              	.L786:
 8934              	.LVL1351:
5678:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 8935              		.loc 1 5678 0 is_stmt 1
 8936 055c 4646     		mov	r6, r8
 8937 055e D045     		cmp	r8, r10
 8938 0560 28BF     		it	cs
 8939 0562 5646     		movcs	r6, r10
 8940              	.LVL1352:
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
 8941              		.loc 1 5679 0
 8942 0564 3346     		mov	r3, r6
 8943 0566 049A     		ldr	r2, [sp, #16]
 8944 0568 3946     		mov	r1, r7
 8945 056a 2046     		mov	r0, r4
 8946 056c FFF7FEFF 		bl	disk_write
 8947              	.LVL1353:
 8948 0570 0028     		cmp	r0, #0
 8949 0572 61D1     		bne	.L820
5680:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; nsect -= n;
 8950              		.loc 1 5680 0
 8951 0574 4FF40072 		mov	r2, #512
 8952 0578 0021     		movs	r1, #0
 8953 057a 3846     		mov	r0, r7
 8954 057c FFF7FEFF 		bl	mem_set
 8955              	.LVL1354:
5681:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nsect);
 8956              		.loc 1 5681 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 285


 8957 0580 049B     		ldr	r3, [sp, #16]
 8958 0582 3344     		add	r3, r3, r6
 8959 0584 0493     		str	r3, [sp, #16]
 8960              	.LVL1355:
5682:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8961              		.loc 1 5682 0
 8962 0586 B8EB0608 		subs	r8, r8, r6
 8963              	.LVL1356:
 8964 058a E7D1     		bne	.L786
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8965              		.loc 1 5668 0 discriminator 2
 8966 058c 0135     		adds	r5, r5, #1
 8967              	.LVL1357:
 8968 058e 03E7     		b	.L782
 8969              	.LVL1358:
 8970              	.L838:
5670:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 4, 0xFFFFFFFF);	/* Entry 1 */
 8971              		.loc 1 5670 0
 8972 0590 6FF00701 		mvn	r1, #7
 8973 0594 3846     		mov	r0, r7
 8974 0596 FFF7FEFF 		bl	st_dword
 8975              	.LVL1359:
5671:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 8, 0x0FFFFFFF);	/* Entry 2 (root directory) */
 8976              		.loc 1 5671 0
 8977 059a 4FF0FF31 		mov	r1, #-1
 8978 059e 381D     		adds	r0, r7, #4
 8979 05a0 FFF7FEFF 		bl	st_dword
 8980              	.LVL1360:
5672:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 8981              		.loc 1 5672 0
 8982 05a4 6FF07041 		mvn	r1, #-268435456
 8983 05a8 07F10800 		add	r0, r7, #8
 8984 05ac FFF7FEFF 		bl	st_dword
 8985              	.LVL1361:
 8986 05b0 D2E7     		b	.L784
 8987              	.L839:
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8988              		.loc 1 5674 0
 8989 05b2 2049     		ldr	r1, .L842+20
 8990 05b4 CDE7     		b	.L785
 8991              	.L837:
5686:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 8992              		.loc 1 5686 0
 8993 05b6 4646     		mov	r6, r8
 8994 05b8 DDF81080 		ldr	r8, [sp, #16]
 8995 05bc F8E6     		b	.L789
 8996              	.LVL1362:
 8997              	.L822:
5699:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8998              		.loc 1 5699 0
 8999 05be 4FF00C08 		mov	r8, #12
 9000              	.LVL1363:
 9001 05c2 14E7     		b	.L790
 9002              	.LVL1364:
 9003              	.L823:
5702:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 9004              		.loc 1 5702 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 286


 9005 05c4 4FF00608 		mov	r8, #6
 9006              	.LVL1365:
 9007 05c8 11E7     		b	.L790
 9008              	.LVL1366:
 9009              	.L824:
5704:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9010              		.loc 1 5704 0
 9011 05ca 4FF00108 		mov	r8, #1
 9012              	.LVL1367:
 9013 05ce 0EE7     		b	.L790
 9014              	.LVL1368:
 9015              	.L792:
5317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 9016              		.loc 1 5317 0
 9017 05d0 0B20     		movs	r0, #11
 9018              	.LVL1369:
 9019 05d2 02E0     		b	.L748
 9020              	.LVL1370:
 9021              	.L793:
5324:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 9022              		.loc 1 5324 0
 9023 05d4 0320     		movs	r0, #3
 9024              	.LVL1371:
 9025 05d6 00E0     		b	.L748
 9026              	.LVL1372:
 9027              	.L794:
5325:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
 9028              		.loc 1 5325 0
 9029 05d8 0A20     		movs	r0, #10
 9030              	.LVL1373:
 9031              	.L748:
5738:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9032              		.loc 1 5738 0
 9033 05da 0BB0     		add	sp, sp, #44
 9034              	.LCFI122:
 9035              		.cfi_remember_state
 9036              		.cfi_def_cfa_offset 36
 9037              		@ sp needed
 9038 05dc BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 9039              	.LVL1374:
 9040              	.L795:
 9041              	.LCFI123:
 9042              		.cfi_restore_state
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 9043              		.loc 1 5333 0
 9044 05e0 1320     		movs	r0, #19
 9045 05e2 FAE7     		b	.L748
 9046              	.L796:
 9047 05e4 1320     		movs	r0, #19
 9048 05e6 F8E7     		b	.L748
 9049              	.L797:
 9050 05e8 1320     		movs	r0, #19
 9051 05ea F6E7     		b	.L748
 9052              	.LVL1375:
 9053              	.L798:
5340:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9054              		.loc 1 5340 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 287


 9055 05ec 0E20     		movs	r0, #14
 9056 05ee F4E7     		b	.L748
 9057              	.L799:
5353:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 9058              		.loc 1 5353 0
 9059 05f0 0120     		movs	r0, #1
 9060 05f2 F2E7     		b	.L748
 9061              	.LVL1376:
 9062              	.L801:
5355:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 9063              		.loc 1 5355 0
 9064 05f4 0E20     		movs	r0, #14
 9065 05f6 F0E7     		b	.L748
 9066              	.L802:
5358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9067              		.loc 1 5358 0
 9068 05f8 0E20     		movs	r0, #14
 9069 05fa EEE7     		b	.L748
 9070              	.L803:
5367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
 9071              		.loc 1 5367 0
 9072 05fc 1320     		movs	r0, #19
 9073 05fe ECE7     		b	.L748
 9074              	.L806:
5373:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
 9075              		.loc 1 5373 0
 9076 0600 1320     		movs	r0, #19
 9077 0602 EAE7     		b	.L748
 9078              	.LVL1377:
 9079              	.L808:
5553:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
 9080              		.loc 1 5553 0
 9081 0604 0E20     		movs	r0, #14
 9082 0606 E8E7     		b	.L748
 9083              	.LVL1378:
 9084              	.L810:
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 9085              		.loc 1 5582 0
 9086 0608 0E20     		movs	r0, #14
 9087 060a E6E7     		b	.L748
 9088              	.LVL1379:
 9089              	.L811:
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9090              		.loc 1 5587 0
 9091 060c 0E20     		movs	r0, #14
 9092 060e E4E7     		b	.L748
 9093              	.LVL1380:
 9094              	.L814:
5599:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9095              		.loc 1 5599 0
 9096 0610 0E20     		movs	r0, #14
 9097 0612 E2E7     		b	.L748
 9098              	.LVL1381:
 9099              	.L815:
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9100              		.loc 1 5603 0
 9101 0614 0E20     		movs	r0, #14
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 288


 9102 0616 E0E7     		b	.L748
 9103              	.LVL1382:
 9104              	.L816:
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9105              		.loc 1 5606 0
 9106 0618 0E20     		movs	r0, #14
 9107 061a DEE7     		b	.L748
 9108              	.LVL1383:
 9109              	.L818:
5650:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9110              		.loc 1 5650 0
 9111 061c 0120     		movs	r0, #1
 9112 061e DCE7     		b	.L748
 9113              	.L843:
 9114              		.align	2
 9115              	.L842:
 9116 0620 00000000 		.word	.LC1
 9117 0624 20000000 		.word	.LC3
 9118 0628 0C000000 		.word	.LC2
 9119 062c 52526141 		.word	1096897106
 9120 0630 72724161 		.word	1631679090
 9121 0634 F8FFFF00 		.word	16777208
 9122              	.LVL1384:
 9123              	.L820:
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
 9124              		.loc 1 5679 0
 9125 0638 0120     		movs	r0, #1
 9126 063a CEE7     		b	.L748
 9127              	.LVL1385:
 9128              	.L821:
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
 9129              		.loc 1 5689 0
 9130 063c 0120     		movs	r0, #1
 9131 063e CCE7     		b	.L748
 9132              	.LVL1386:
 9133              	.L825:
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 9134              		.loc 1 5731 0
 9135 0640 0120     		movs	r0, #1
 9136 0642 CAE7     		b	.L748
 9137              	.LVL1387:
 9138              	.L826:
5737:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9139              		.loc 1 5737 0
 9140 0644 0020     		movs	r0, #0
 9141 0646 C8E7     		b	.L748
 9142              		.cfi_endproc
 9143              	.LFE187:
 9145              		.section	.text.f_gets,"ax",%progbits
 9146              		.align	1
 9147              		.global	f_gets
 9148              		.syntax unified
 9149              		.thumb
 9150              		.thumb_func
 9151              		.fpu fpv4-sp-d16
 9153              	f_gets:
 9154              	.LFB188:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 289


5824:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
 9155              		.loc 1 5824 0
 9156              		.cfi_startproc
 9157              		@ args = 0, pretend = 0, frame = 8
 9158              		@ frame_needed = 0, uses_anonymous_args = 0
 9159              	.LVL1388:
 9160 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 9161              	.LCFI124:
 9162              		.cfi_def_cfa_offset 24
 9163              		.cfi_offset 4, -24
 9164              		.cfi_offset 5, -20
 9165              		.cfi_offset 6, -16
 9166              		.cfi_offset 7, -12
 9167              		.cfi_offset 8, -8
 9168              		.cfi_offset 14, -4
 9169 0004 82B0     		sub	sp, sp, #8
 9170              	.LCFI125:
 9171              		.cfi_def_cfa_offset 32
 9172 0006 8046     		mov	r8, r0
 9173 0008 0E46     		mov	r6, r1
 9174 000a 1746     		mov	r7, r2
 9175              	.LVL1389:
5826:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
 9176              		.loc 1 5826 0
 9177 000c 0446     		mov	r4, r0
5825:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
 9178              		.loc 1 5825 0
 9179 000e 0025     		movs	r5, #0
5831:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
 9180              		.loc 1 5831 0
 9181 0010 01E0     		b	.L845
 9182              	.LVL1390:
 9183              	.L850:
 9184 0012 2246     		mov	r2, r4
 9185              	.LVL1391:
 9186              	.L847:
 9187 0014 1446     		mov	r4, r2
 9188              	.LVL1392:
 9189              	.L845:
 9190 0016 731E     		subs	r3, r6, #1
 9191 0018 AB42     		cmp	r3, r5
 9192 001a 12DD     		ble	.L846
5876:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
 9193              		.loc 1 5876 0
 9194 001c 6B46     		mov	r3, sp
 9195 001e 0122     		movs	r2, #1
 9196 0020 01A9     		add	r1, sp, #4
 9197 0022 3846     		mov	r0, r7
 9198 0024 FFF7FEFF 		bl	f_read
 9199              	.LVL1393:
5877:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
 9200              		.loc 1 5877 0
 9201 0028 009B     		ldr	r3, [sp]
 9202 002a 012B     		cmp	r3, #1
 9203 002c 09D1     		bne	.L846
5878:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 9204              		.loc 1 5878 0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 290


 9205 002e 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 9206              	.LVL1394:
5880:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
 9207              		.loc 1 5880 0
 9208 0032 0D2B     		cmp	r3, #13
 9209 0034 EDD0     		beq	.L850
5881:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 9210              		.loc 1 5881 0
 9211 0036 621C     		adds	r2, r4, #1
 9212              	.LVL1395:
 9213 0038 2370     		strb	r3, [r4]
5882:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
 9214              		.loc 1 5882 0
 9215 003a 0135     		adds	r5, r5, #1
 9216              	.LVL1396:
5883:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 9217              		.loc 1 5883 0
 9218 003c 0A2B     		cmp	r3, #10
 9219 003e E9D1     		bne	.L847
5881:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 9220              		.loc 1 5881 0
 9221 0040 1446     		mov	r4, r2
 9222              	.LVL1397:
 9223              	.L846:
5885:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
 9224              		.loc 1 5885 0
 9225 0042 0023     		movs	r3, #0
 9226 0044 2370     		strb	r3, [r4]
5886:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9227              		.loc 1 5886 0
 9228 0046 1DB1     		cbz	r5, .L852
 9229 0048 4046     		mov	r0, r8
 9230              	.L844:
5887:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9231              		.loc 1 5887 0
 9232 004a 02B0     		add	sp, sp, #8
 9233              	.LCFI126:
 9234              		.cfi_remember_state
 9235              		.cfi_def_cfa_offset 24
 9236              		@ sp needed
 9237 004c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 9238              	.LVL1398:
 9239              	.L852:
 9240              	.LCFI127:
 9241              		.cfi_restore_state
5886:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9242              		.loc 1 5886 0
 9243 0050 0020     		movs	r0, #0
 9244 0052 FAE7     		b	.L844
 9245              		.cfi_endproc
 9246              	.LFE188:
 9248              		.section	.text.f_putc,"ax",%progbits
 9249              		.align	1
 9250              		.global	f_putc
 9251              		.syntax unified
 9252              		.thumb
 9253              		.thumb_func
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 291


 9254              		.fpu fpv4-sp-d16
 9256              	f_putc:
 9257              	.LFB192:
5984:Middlewares/Third_Party/FatFs/src/ff.c **** 
5985:Middlewares/Third_Party/FatFs/src/ff.c **** 
5986:Middlewares/Third_Party/FatFs/src/ff.c **** 
5987:Middlewares/Third_Party/FatFs/src/ff.c **** int f_putc (
5988:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c,	/* A character to be output */
5989:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
5990:Middlewares/Third_Party/FatFs/src/ff.c **** )
5991:Middlewares/Third_Party/FatFs/src/ff.c **** {
 9258              		.loc 1 5991 0
 9259              		.cfi_startproc
 9260              		@ args = 0, pretend = 0, frame = 80
 9261              		@ frame_needed = 0, uses_anonymous_args = 0
 9262              	.LVL1399:
 9263 0000 10B5     		push	{r4, lr}
 9264              	.LCFI128:
 9265              		.cfi_def_cfa_offset 8
 9266              		.cfi_offset 4, -8
 9267              		.cfi_offset 14, -4
 9268 0002 94B0     		sub	sp, sp, #80
 9269              	.LCFI129:
 9270              		.cfi_def_cfa_offset 88
 9271 0004 0446     		mov	r4, r0
5992:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
5993:Middlewares/Third_Party/FatFs/src/ff.c **** 
5994:Middlewares/Third_Party/FatFs/src/ff.c **** 
5995:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 9272              		.loc 1 5995 0
 9273 0006 01A8     		add	r0, sp, #4
 9274              	.LVL1400:
 9275 0008 FFF7FEFF 		bl	putc_init
 9276              	.LVL1401:
5996:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_bfd(&pb, c);	/* Put the character */
 9277              		.loc 1 5996 0
 9278 000c 2146     		mov	r1, r4
 9279 000e 01A8     		add	r0, sp, #4
 9280 0010 FFF7FEFF 		bl	putc_bfd
 9281              	.LVL1402:
5997:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 9282              		.loc 1 5997 0
 9283 0014 01A8     		add	r0, sp, #4
 9284 0016 FFF7FEFF 		bl	putc_flush
 9285              	.LVL1403:
5998:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9286              		.loc 1 5998 0
 9287 001a 14B0     		add	sp, sp, #80
 9288              	.LCFI130:
 9289              		.cfi_def_cfa_offset 8
 9290              		@ sp needed
 9291 001c 10BD     		pop	{r4, pc}
 9292              		.cfi_endproc
 9293              	.LFE192:
 9295              		.section	.text.f_puts,"ax",%progbits
 9296              		.align	1
 9297              		.global	f_puts
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 292


 9298              		.syntax unified
 9299              		.thumb
 9300              		.thumb_func
 9301              		.fpu fpv4-sp-d16
 9303              	f_puts:
 9304              	.LFB193:
5999:Middlewares/Third_Party/FatFs/src/ff.c **** 
6000:Middlewares/Third_Party/FatFs/src/ff.c **** 
6001:Middlewares/Third_Party/FatFs/src/ff.c **** 
6002:Middlewares/Third_Party/FatFs/src/ff.c **** 
6003:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6004:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a string to the file                                              */
6005:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6006:Middlewares/Third_Party/FatFs/src/ff.c **** 
6007:Middlewares/Third_Party/FatFs/src/ff.c **** int f_puts (
6008:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* str,	/* Pointer to the string to be output */
6009:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp				/* Pointer to the file object */
6010:Middlewares/Third_Party/FatFs/src/ff.c **** )
6011:Middlewares/Third_Party/FatFs/src/ff.c **** {
 9305              		.loc 1 6011 0
 9306              		.cfi_startproc
 9307              		@ args = 0, pretend = 0, frame = 80
 9308              		@ frame_needed = 0, uses_anonymous_args = 0
 9309              	.LVL1404:
 9310 0000 10B5     		push	{r4, lr}
 9311              	.LCFI131:
 9312              		.cfi_def_cfa_offset 8
 9313              		.cfi_offset 4, -8
 9314              		.cfi_offset 14, -4
 9315 0002 94B0     		sub	sp, sp, #80
 9316              	.LCFI132:
 9317              		.cfi_def_cfa_offset 88
 9318 0004 0446     		mov	r4, r0
6012:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
6013:Middlewares/Third_Party/FatFs/src/ff.c **** 
6014:Middlewares/Third_Party/FatFs/src/ff.c **** 
6015:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 9319              		.loc 1 6015 0
 9320 0006 01A8     		add	r0, sp, #4
 9321              	.LVL1405:
 9322 0008 FFF7FEFF 		bl	putc_init
 9323              	.LVL1406:
6016:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str) putc_bfd(&pb, *str++);		/* Put the string */
 9324              		.loc 1 6016 0
 9325 000c 03E0     		b	.L857
 9326              	.L858:
 9327              		.loc 1 6016 0 is_stmt 0 discriminator 2
 9328 000e 0134     		adds	r4, r4, #1
 9329              	.LVL1407:
 9330 0010 01A8     		add	r0, sp, #4
 9331 0012 FFF7FEFF 		bl	putc_bfd
 9332              	.LVL1408:
 9333              	.L857:
 9334              		.loc 1 6016 0 discriminator 1
 9335 0016 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 9336 0018 0029     		cmp	r1, #0
 9337 001a F8D1     		bne	.L858
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 293


6017:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 9338              		.loc 1 6017 0 is_stmt 1
 9339 001c 01A8     		add	r0, sp, #4
 9340 001e FFF7FEFF 		bl	putc_flush
 9341              	.LVL1409:
6018:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9342              		.loc 1 6018 0
 9343 0022 14B0     		add	sp, sp, #80
 9344              	.LCFI133:
 9345              		.cfi_def_cfa_offset 8
 9346              		@ sp needed
 9347 0024 10BD     		pop	{r4, pc}
 9348              		.cfi_endproc
 9349              	.LFE193:
 9351              		.section	.text.f_printf,"ax",%progbits
 9352              		.align	1
 9353              		.global	f_printf
 9354              		.syntax unified
 9355              		.thumb
 9356              		.thumb_func
 9357              		.fpu fpv4-sp-d16
 9359              	f_printf:
 9360              	.LFB194:
6019:Middlewares/Third_Party/FatFs/src/ff.c **** 
6020:Middlewares/Third_Party/FatFs/src/ff.c **** 
6021:Middlewares/Third_Party/FatFs/src/ff.c **** 
6022:Middlewares/Third_Party/FatFs/src/ff.c **** 
6023:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6024:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a formatted string to the file                                    */
6025:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6026:Middlewares/Third_Party/FatFs/src/ff.c **** 
6027:Middlewares/Third_Party/FatFs/src/ff.c **** int f_printf (
6028:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
6029:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* fmt,	/* Pointer to the format string */
6030:Middlewares/Third_Party/FatFs/src/ff.c **** 	...					/* Optional arguments... */
6031:Middlewares/Third_Party/FatFs/src/ff.c **** )
6032:Middlewares/Third_Party/FatFs/src/ff.c **** {
 9361              		.loc 1 6032 0
 9362              		.cfi_startproc
 9363              		@ args = 4, pretend = 12, frame = 112
 9364              		@ frame_needed = 0, uses_anonymous_args = 1
 9365              	.LVL1410:
 9366 0000 0EB4     		push	{r1, r2, r3}
 9367              	.LCFI134:
 9368              		.cfi_def_cfa_offset 12
 9369              		.cfi_offset 1, -12
 9370              		.cfi_offset 2, -8
 9371              		.cfi_offset 3, -4
 9372 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 9373              	.LCFI135:
 9374              		.cfi_def_cfa_offset 44
 9375              		.cfi_offset 4, -44
 9376              		.cfi_offset 5, -40
 9377              		.cfi_offset 6, -36
 9378              		.cfi_offset 7, -32
 9379              		.cfi_offset 8, -28
 9380              		.cfi_offset 9, -24
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 294


 9381              		.cfi_offset 10, -20
 9382              		.cfi_offset 14, -16
 9383 0006 9DB0     		sub	sp, sp, #116
 9384              	.LCFI136:
 9385              		.cfi_def_cfa_offset 160
 9386 0008 25AC     		add	r4, sp, #148
 9387 000a 54F8046B 		ldr	r6, [r4], #4
6033:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_list arp;
6034:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
6035:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE f, r;
6036:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, w;
6037:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD v;
6038:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, d, str[32], *p;
6039:Middlewares/Third_Party/FatFs/src/ff.c **** 
6040:Middlewares/Third_Party/FatFs/src/ff.c **** 
6041:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 9388              		.loc 1 6041 0
 9389 000e 0146     		mov	r1, r0
 9390 0010 08A8     		add	r0, sp, #32
 9391              	.LVL1411:
 9392 0012 FFF7FEFF 		bl	putc_init
 9393              	.LVL1412:
6042:Middlewares/Third_Party/FatFs/src/ff.c **** 
6043:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_start(arp, fmt);
 9394              		.loc 1 6043 0
 9395 0016 1B94     		str	r4, [sp, #108]
 9396 0018 03E0     		b	.L861
 9397              	.LVL1413:
 9398              	.L913:
6044:Middlewares/Third_Party/FatFs/src/ff.c **** 
6045:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
6046:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
6047:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
6048:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
6049:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
 9399              		.loc 1 6049 0
 9400 001a 08A8     		add	r0, sp, #32
 9401 001c FFF7FEFF 		bl	putc_bfd
 9402              	.LVL1414:
6046:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
 9403              		.loc 1 6046 0
 9404 0020 2646     		mov	r6, r4
 9405              	.LVL1415:
 9406              	.L861:
 9407 0022 741C     		adds	r4, r6, #1
 9408              	.LVL1416:
 9409 0024 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 9410              	.LVL1417:
6047:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
 9411              		.loc 1 6047 0
 9412 0026 0029     		cmp	r1, #0
 9413 0028 00F0FE80 		beq	.L862
6048:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
 9414              		.loc 1 6048 0
 9415 002c 2529     		cmp	r1, #37
 9416 002e F4D1     		bne	.L913
 9417              	.LVL1418:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 295


6050:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
6051:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6052:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = f = 0;
6053:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 9418              		.loc 1 6053 0
 9419 0030 B21C     		adds	r2, r6, #2
 9420              	.LVL1419:
 9421 0032 7178     		ldrb	r1, [r6, #1]	@ zero_extendqisi2
 9422              	.LVL1420:
6054:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '0') {				/* Flag: '0' padding */
 9423              		.loc 1 6054 0
 9424 0034 3029     		cmp	r1, #48
 9425 0036 04D0     		beq	.L914
6055:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
6056:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
6057:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == '-') {			/* Flag: left justified */
 9426              		.loc 1 6057 0
 9427 0038 2D29     		cmp	r1, #45
 9428 003a 06D0     		beq	.L915
6052:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 9429              		.loc 1 6052 0
 9430 003c 0027     		movs	r7, #0
 9431              	.LVL1421:
 9432              	.L866:
6055:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
 9433              		.loc 1 6055 0
 9434 003e 0024     		movs	r4, #0
 9435 0040 0FE0     		b	.L867
 9436              	.LVL1422:
 9437              	.L914:
 9438 0042 F21C     		adds	r2, r6, #3
 9439              	.LVL1423:
 9440 0044 B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 9441              	.LVL1424:
 9442 0046 0127     		movs	r7, #1
 9443 0048 F9E7     		b	.L866
 9444              	.LVL1425:
 9445              	.L915:
6058:Middlewares/Third_Party/FatFs/src/ff.c **** 				f = 2; c = *fmt++;
 9446              		.loc 1 6058 0
 9447 004a F21C     		adds	r2, r6, #3
 9448              	.LVL1426:
 9449 004c B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 9450              	.LVL1427:
 9451 004e 0227     		movs	r7, #2
 9452 0050 F5E7     		b	.L866
 9453              	.LVL1428:
 9454              	.L868:
6059:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
6060:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6061:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (IsDigit(c)) {		/* Precision */
6062:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 9455              		.loc 1 6062 0
 9456 0052 04EB8404 		add	r4, r4, r4, lsl #2
 9457              	.LVL1429:
 9458 0056 6300     		lsls	r3, r4, #1
 9459 0058 1944     		add	r1, r1, r3
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 296


 9460              	.LVL1430:
 9461 005a A1F13004 		sub	r4, r1, #48
 9462              	.LVL1431:
6063:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = *fmt++;
 9463              		.loc 1 6063 0
 9464 005e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 9465              	.LVL1432:
 9466 0060 0132     		adds	r2, r2, #1
 9467              	.LVL1433:
 9468              	.L867:
6061:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 9469              		.loc 1 6061 0
 9470 0062 A1F13003 		sub	r3, r1, #48
 9471 0066 DBB2     		uxtb	r3, r3
 9472 0068 092B     		cmp	r3, #9
 9473 006a F2D9     		bls	.L868
6064:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6065:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 'l' || c == 'L') {	/* Prefix: Size is long int */
 9474              		.loc 1 6065 0
 9475 006c 6C29     		cmp	r1, #108
 9476 006e 03D0     		beq	.L869
 9477              		.loc 1 6065 0 is_stmt 0 discriminator 1
 9478 0070 4C29     		cmp	r1, #76
 9479 0072 01D0     		beq	.L869
 9480 0074 1646     		mov	r6, r2
 9481 0076 03E0     		b	.L870
 9482              	.L869:
6066:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 4; c = *fmt++;
 9483              		.loc 1 6066 0 is_stmt 1
 9484 0078 47F00407 		orr	r7, r7, #4
 9485              	.LVL1434:
 9486 007c 561C     		adds	r6, r2, #1
 9487              	.LVL1435:
 9488 007e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 9489              	.LVL1436:
 9490              	.L870:
6067:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6068:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) break;
 9491              		.loc 1 6068 0
 9492 0080 0029     		cmp	r1, #0
 9493 0082 00F0D180 		beq	.L862
 9494              	.LVL1437:
6069:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
6070:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsLower(d)) d -= 0x20;
 9495              		.loc 1 6070 0
 9496 0086 A1F16103 		sub	r3, r1, #97
 9497 008a DBB2     		uxtb	r3, r3
 9498 008c 192B     		cmp	r3, #25
 9499 008e 14D8     		bhi	.L907
 9500              		.loc 1 6070 0 is_stmt 0 discriminator 1
 9501 0090 A1F12003 		sub	r3, r1, #32
 9502 0094 DBB2     		uxtb	r3, r3
 9503              	.LVL1438:
 9504              	.L871:
6071:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (d) {				/* Type is... */
 9505              		.loc 1 6071 0 is_stmt 1
 9506 0096 A3F14202 		sub	r2, r3, #66
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 297


 9507 009a 162A     		cmp	r2, #22
 9508 009c 4CD8     		bhi	.L872
 9509 009e DFE802F0 		tbb	[pc, r2]
 9510              	.L874:
 9511 00a2 4F       		.byte	(.L873-.L874)/2
 9512 00a3 3D       		.byte	(.L875-.L874)/2
 9513 00a4 45       		.byte	(.L876-.L874)/2
 9514 00a5 4B       		.byte	(.L872-.L874)/2
 9515 00a6 4B       		.byte	(.L872-.L874)/2
 9516 00a7 4B       		.byte	(.L872-.L874)/2
 9517 00a8 4B       		.byte	(.L872-.L874)/2
 9518 00a9 4B       		.byte	(.L872-.L874)/2
 9519 00aa 4B       		.byte	(.L872-.L874)/2
 9520 00ab 4B       		.byte	(.L872-.L874)/2
 9521 00ac 4B       		.byte	(.L872-.L874)/2
 9522 00ad 4B       		.byte	(.L872-.L874)/2
 9523 00ae 4B       		.byte	(.L872-.L874)/2
 9524 00af 52       		.byte	(.L908-.L874)/2
 9525 00b0 4B       		.byte	(.L872-.L874)/2
 9526 00b1 4B       		.byte	(.L872-.L874)/2
 9527 00b2 4B       		.byte	(.L872-.L874)/2
 9528 00b3 0E       		.byte	(.L878-.L874)/2
 9529 00b4 4B       		.byte	(.L872-.L874)/2
 9530 00b5 45       		.byte	(.L876-.L874)/2
 9531 00b6 4B       		.byte	(.L872-.L874)/2
 9532 00b7 4B       		.byte	(.L872-.L874)/2
 9533 00b8 48       		.byte	(.L879-.L874)/2
 9534              	.LVL1439:
 9535 00b9 00       		.p2align 1
 9536              	.L907:
6069:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
 9537              		.loc 1 6069 0
 9538 00ba 0B46     		mov	r3, r1
 9539 00bc EBE7     		b	.L871
 9540              	.LVL1440:
 9541              	.L878:
6072:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'S' :					/* String */
6073:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = va_arg(arp, TCHAR*);
 9542              		.loc 1 6073 0
 9543 00be 1B9B     		ldr	r3, [sp, #108]
 9544              	.LVL1441:
 9545 00c0 1A1D     		adds	r2, r3, #4
 9546 00c2 1B92     		str	r2, [sp, #108]
 9547 00c4 D3F80080 		ldr	r8, [r3]
 9548              	.LVL1442:
6074:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 0; p[j]; j++) ;
 9549              		.loc 1 6074 0
 9550 00c8 0025     		movs	r5, #0
 9551 00ca 00E0     		b	.L880
 9552              	.LVL1443:
 9553              	.L881:
 9554              		.loc 1 6074 0 is_stmt 0 discriminator 3
 9555 00cc 0135     		adds	r5, r5, #1
 9556              	.LVL1444:
 9557              	.L880:
 9558              		.loc 1 6074 0 discriminator 1
 9559 00ce 18F80530 		ldrb	r3, [r8, r5]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 298


 9560 00d2 002B     		cmp	r3, #0
 9561 00d4 FAD1     		bne	.L881
6075:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(f & 2)) {
 9562              		.loc 1 6075 0 is_stmt 1
 9563 00d6 17F0020F 		tst	r7, #2
 9564 00da 10D1     		bne	.L885
 9565 00dc 05E0     		b	.L882
 9566              	.LVL1445:
 9567              	.L884:
6076:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (j++ < w) putc_bfd(&pb, ' ');
 9568              		.loc 1 6076 0 discriminator 2
 9569 00de 2021     		movs	r1, #32
 9570 00e0 0DEB0100 		add	r0, sp, r1
 9571 00e4 FFF7FEFF 		bl	putc_bfd
 9572              	.LVL1446:
 9573 00e8 3D46     		mov	r5, r7
 9574              	.LVL1447:
 9575              	.L882:
 9576              		.loc 1 6076 0 is_stmt 0 discriminator 1
 9577 00ea 6F1C     		adds	r7, r5, #1
 9578              	.LVL1448:
 9579 00ec A542     		cmp	r5, r4
 9580 00ee F6D3     		bcc	.L884
 9581              		.loc 1 6076 0
 9582 00f0 3D46     		mov	r5, r7
 9583 00f2 04E0     		b	.L885
 9584              	.LVL1449:
 9585              	.L886:
6077:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
6078:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (*p) putc_bfd(&pb, *p++);
 9586              		.loc 1 6078 0 is_stmt 1 discriminator 2
 9587 00f4 08F10108 		add	r8, r8, #1
 9588              	.LVL1450:
 9589 00f8 08A8     		add	r0, sp, #32
 9590 00fa FFF7FEFF 		bl	putc_bfd
 9591              	.LVL1451:
 9592              	.L885:
 9593              		.loc 1 6078 0 is_stmt 0 discriminator 1
 9594 00fe 98F80010 		ldrb	r1, [r8]	@ zero_extendqisi2
 9595 0102 0029     		cmp	r1, #0
 9596 0104 F6D1     		bne	.L886
 9597 0106 05E0     		b	.L887
 9598              	.LVL1452:
 9599              	.L888:
6079:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 9600              		.loc 1 6079 0 is_stmt 1 discriminator 2
 9601 0108 2021     		movs	r1, #32
 9602 010a 0DEB0100 		add	r0, sp, r1
 9603 010e FFF7FEFF 		bl	putc_bfd
 9604              	.LVL1453:
 9605 0112 3D46     		mov	r5, r7
 9606              	.LVL1454:
 9607              	.L887:
 9608              		.loc 1 6079 0 is_stmt 0 discriminator 1
 9609 0114 6F1C     		adds	r7, r5, #1
 9610              	.LVL1455:
 9611 0116 A542     		cmp	r5, r4
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 299


 9612 0118 F6D3     		bcc	.L888
 9613 011a 82E7     		b	.L861
 9614              	.LVL1456:
 9615              	.L875:
6080:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
6081:Middlewares/Third_Party/FatFs/src/ff.c **** 
6082:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'C' :					/* Character */
6083:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
 9616              		.loc 1 6083 0 is_stmt 1
 9617 011c 1B9B     		ldr	r3, [sp, #108]
 9618              	.LVL1457:
 9619 011e 1A1D     		adds	r2, r3, #4
 9620 0120 1B92     		str	r2, [sp, #108]
 9621 0122 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 9622              	.LVL1458:
 9623 0124 08A8     		add	r0, sp, #32
 9624 0126 FFF7FEFF 		bl	putc_bfd
 9625              	.LVL1459:
 9626 012a 7AE7     		b	.L861
 9627              	.LVL1460:
 9628              	.L876:
6084:Middlewares/Third_Party/FatFs/src/ff.c **** 
6085:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'B' :					/* Binary */
6086:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 2; break;
6087:Middlewares/Third_Party/FatFs/src/ff.c **** 
6088:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'O' :					/* Octal */
6089:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 8; break;
6090:Middlewares/Third_Party/FatFs/src/ff.c **** 
6091:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'D' :					/* Signed decimal */
6092:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'U' :					/* Unsigned decimal */
6093:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 10; break;
 9629              		.loc 1 6093 0
 9630 012c 4FF00A0E 		mov	lr, #10
 9631 0130 0BE0     		b	.L877
 9632              	.LVL1461:
 9633              	.L879:
6094:Middlewares/Third_Party/FatFs/src/ff.c **** 
6095:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'X' :					/* Hexdecimal */
6096:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 16; break;
 9634              		.loc 1 6096 0
 9635 0132 4FF0100E 		mov	lr, #16
 9636 0136 08E0     		b	.L877
 9637              	.LVL1462:
 9638              	.L872:
6097:Middlewares/Third_Party/FatFs/src/ff.c **** 
6098:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:					/* Unknown type (pass-through) */
6099:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c); continue;
 9639              		.loc 1 6099 0
 9640 0138 08A8     		add	r0, sp, #32
 9641 013a FFF7FEFF 		bl	putc_bfd
 9642              	.LVL1463:
 9643 013e 70E7     		b	.L861
 9644              	.LVL1464:
 9645              	.L873:
6086:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9646              		.loc 1 6086 0
 9647 0140 4FF0020E 		mov	lr, #2
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 300


 9648 0144 01E0     		b	.L877
 9649              	.L908:
6089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9650              		.loc 1 6089 0
 9651 0146 4FF0080E 		mov	lr, #8
 9652              	.L877:
 9653              	.LVL1465:
6100:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6101:Middlewares/Third_Party/FatFs/src/ff.c **** 
6102:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get an argument and put it in numeral */
6103:Middlewares/Third_Party/FatFs/src/ff.c **** 		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_
 9654              		.loc 1 6103 0
 9655 014a 17F0040F 		tst	r7, #4
 9656 014e 08D0     		beq	.L889
 9657 0150 1B9A     		ldr	r2, [sp, #108]
 9658 0152 101D     		adds	r0, r2, #4
 9659 0154 1B90     		str	r0, [sp, #108]
 9660 0156 1068     		ldr	r0, [r2]
 9661              	.L890:
 9662              	.LVL1466:
6104:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9663              		.loc 1 6104 0 discriminator 8
 9664 0158 442B     		cmp	r3, #68
 9665 015a 0ED0     		beq	.L916
 9666              	.L892:
 9667              	.LVL1467:
6105:Middlewares/Third_Party/FatFs/src/ff.c **** 			v = 0 - v;
6106:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 8;
6107:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6108:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
 9668              		.loc 1 6108 0
 9669 015c 4FF0000C 		mov	ip, #0
 9670 0160 20E0     		b	.L896
 9671              	.LVL1468:
 9672              	.L889:
6103:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9673              		.loc 1 6103 0 discriminator 2
 9674 0162 442B     		cmp	r3, #68
 9675 0164 04D0     		beq	.L917
6103:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9676              		.loc 1 6103 0 is_stmt 0
 9677 0166 1B9A     		ldr	r2, [sp, #108]
 9678 0168 101D     		adds	r0, r2, #4
 9679 016a 1B90     		str	r0, [sp, #108]
 9680 016c 1068     		ldr	r0, [r2]
 9681 016e F3E7     		b	.L890
 9682              	.L917:
 9683 0170 1B9A     		ldr	r2, [sp, #108]
 9684 0172 101D     		adds	r0, r2, #4
 9685 0174 1B90     		str	r0, [sp, #108]
 9686 0176 1068     		ldr	r0, [r2]
 9687 0178 EEE7     		b	.L890
 9688              	.LVL1469:
 9689              	.L916:
6104:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9690              		.loc 1 6104 0 is_stmt 1 discriminator 1
 9691 017a 0028     		cmp	r0, #0
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 301


 9692 017c EEDA     		bge	.L892
6105:Middlewares/Third_Party/FatFs/src/ff.c **** 			v = 0 - v;
 9693              		.loc 1 6105 0
 9694 017e 4042     		negs	r0, r0
 9695              	.LVL1470:
6106:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 9696              		.loc 1 6106 0
 9697 0180 47F00807 		orr	r7, r7, #8
 9698              	.LVL1471:
 9699 0184 EAE7     		b	.L892
 9700              	.LVL1472:
 9701              	.L918:
6109:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
6110:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (TCHAR)(v % r); v /= r;
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 9702              		.loc 1 6111 0
 9703 0186 2725     		movs	r5, #39
 9704              	.L894:
 9705              		.loc 1 6111 0 is_stmt 0 discriminator 5
 9706 0188 2B44     		add	r3, r3, r5
 9707              	.LVL1473:
 9708 018a DBB2     		uxtb	r3, r3
 9709              	.LVL1474:
 9710              	.L893:
6112:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9711              		.loc 1 6112 0 is_stmt 1
 9712 018c 0CF10105 		add	r5, ip, #1
 9713              	.LVL1475:
 9714 0190 3033     		adds	r3, r3, #48
 9715              	.LVL1476:
 9716 0192 0DF17008 		add	r8, sp, #112
 9717 0196 E044     		add	r8, r8, ip
 9718 0198 08F8703C 		strb	r3, [r8, #-112]
6113:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (v && i < sizeof str / sizeof str[0]);
 9719              		.loc 1 6113 0
 9720 019c 72B1     		cbz	r2, .L895
 9721              		.loc 1 6113 0 is_stmt 0 discriminator 1
 9722 019e 1F2D     		cmp	r5, #31
 9723 01a0 0CD8     		bhi	.L895
6112:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9724              		.loc 1 6112 0 is_stmt 1
 9725 01a2 AC46     		mov	ip, r5
 9726              	.LVL1477:
 9727              	.L896:
6110:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 9728              		.loc 1 6110 0
 9729 01a4 B0FBFEF2 		udiv	r2, r0, lr
 9730 01a8 0EFB1203 		mls	r3, lr, r2, r0
 9731 01ac DBB2     		uxtb	r3, r3
 9732              	.LVL1478:
 9733 01ae 1046     		mov	r0, r2
 9734              	.LVL1479:
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9735              		.loc 1 6111 0
 9736 01b0 092B     		cmp	r3, #9
 9737 01b2 EBD9     		bls	.L893
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 302


 9738              		.loc 1 6111 0 is_stmt 0 discriminator 1
 9739 01b4 7829     		cmp	r1, #120
 9740 01b6 E6D0     		beq	.L918
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9741              		.loc 1 6111 0
 9742 01b8 0725     		movs	r5, #7
 9743 01ba E5E7     		b	.L894
 9744              	.LVL1480:
 9745              	.L895:
6114:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (f & 8) str[i++] = '-';
 9746              		.loc 1 6114 0 is_stmt 1
 9747 01bc 17F0080F 		tst	r7, #8
 9748 01c0 06D0     		beq	.L897
 9749              	.LVL1481:
 9750              		.loc 1 6114 0 is_stmt 0 discriminator 1
 9751 01c2 1CAB     		add	r3, sp, #112
 9752 01c4 1D44     		add	r5, r5, r3
 9753 01c6 2D23     		movs	r3, #45
 9754 01c8 05F8703C 		strb	r3, [r5, #-112]
 9755 01cc 0CF10205 		add	r5, ip, #2
 9756              	.LVL1482:
 9757              	.L897:
6115:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 9758              		.loc 1 6115 0 is_stmt 1
 9759 01d0 17F0010F 		tst	r7, #1
 9760 01d4 03D0     		beq	.L911
 9761 01d6 4FF0300A 		mov	r10, #48
 9762              	.L898:
 9763              	.LVL1483:
 9764              		.loc 1 6115 0 is_stmt 0 discriminator 4
 9765 01da A846     		mov	r8, r5
6116:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
 9766              		.loc 1 6116 0 is_stmt 1 discriminator 4
 9767 01dc 07E0     		b	.L899
 9768              	.LVL1484:
 9769              	.L911:
6115:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 9770              		.loc 1 6115 0
 9771 01de 4FF0200A 		mov	r10, #32
 9772 01e2 FAE7     		b	.L898
 9773              	.LVL1485:
 9774              	.L901:
 9775              		.loc 1 6116 0 discriminator 3
 9776 01e4 5146     		mov	r1, r10
 9777 01e6 08A8     		add	r0, sp, #32
 9778 01e8 FFF7FEFF 		bl	putc_bfd
 9779              	.LVL1486:
 9780 01ec C846     		mov	r8, r9
 9781              	.LVL1487:
 9782              	.L899:
 9783              		.loc 1 6116 0 is_stmt 0 discriminator 1
 9784 01ee 17F0020F 		tst	r7, #2
 9785 01f2 04D1     		bne	.L902
 9786              		.loc 1 6116 0 discriminator 2
 9787 01f4 08F10109 		add	r9, r8, #1
 9788              	.LVL1488:
 9789 01f8 A045     		cmp	r8, r4
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 303


 9790 01fa F3D3     		bcc	.L901
 9791              		.loc 1 6116 0
 9792 01fc C846     		mov	r8, r9
 9793              	.LVL1489:
 9794              	.L902:
6117:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
6118:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, str[--i]);
 9795              		.loc 1 6118 0 is_stmt 1 discriminator 1
 9796 01fe 013D     		subs	r5, r5, #1
 9797              	.LVL1490:
 9798 0200 1CAB     		add	r3, sp, #112
 9799 0202 2B44     		add	r3, r3, r5
 9800 0204 13F8701C 		ldrb	r1, [r3, #-112]	@ zero_extendqisi2
 9801 0208 08A8     		add	r0, sp, #32
 9802 020a FFF7FEFF 		bl	putc_bfd
 9803              	.LVL1491:
6119:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (i);
 9804              		.loc 1 6119 0 discriminator 1
 9805 020e 002D     		cmp	r5, #0
 9806 0210 F5D1     		bne	.L902
 9807 0212 04E0     		b	.L903
 9808              	.LVL1492:
 9809              	.L904:
6120:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (j++ < w) putc_bfd(&pb, d);
 9810              		.loc 1 6120 0 discriminator 2
 9811 0214 5146     		mov	r1, r10
 9812 0216 08A8     		add	r0, sp, #32
 9813 0218 FFF7FEFF 		bl	putc_bfd
 9814              	.LVL1493:
 9815 021c A846     		mov	r8, r5
 9816              	.LVL1494:
 9817              	.L903:
 9818              		.loc 1 6120 0 is_stmt 0 discriminator 1
 9819 021e 08F10105 		add	r5, r8, #1
 9820              	.LVL1495:
 9821 0222 A045     		cmp	r8, r4
 9822 0224 F6D3     		bcc	.L904
 9823 0226 FCE6     		b	.L861
 9824              	.LVL1496:
 9825              	.L862:
6121:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
6122:Middlewares/Third_Party/FatFs/src/ff.c **** 
6123:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_end(arp);
6124:Middlewares/Third_Party/FatFs/src/ff.c **** 
6125:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 9826              		.loc 1 6125 0 is_stmt 1
 9827 0228 08A8     		add	r0, sp, #32
 9828 022a FFF7FEFF 		bl	putc_flush
 9829              	.LVL1497:
6126:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9830              		.loc 1 6126 0
 9831 022e 1DB0     		add	sp, sp, #116
 9832              	.LCFI137:
 9833              		.cfi_def_cfa_offset 44
 9834              		@ sp needed
 9835 0230 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 9836              	.LCFI138:
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 304


 9837              		.cfi_restore 14
 9838              		.cfi_restore 10
 9839              		.cfi_restore 9
 9840              		.cfi_restore 8
 9841              		.cfi_restore 7
 9842              		.cfi_restore 6
 9843              		.cfi_restore 5
 9844              		.cfi_restore 4
 9845              		.cfi_def_cfa_offset 12
 9846 0234 03B0     		add	sp, sp, #12
 9847              	.LCFI139:
 9848              		.cfi_restore 3
 9849              		.cfi_restore 2
 9850              		.cfi_restore 1
 9851              		.cfi_def_cfa_offset 0
 9852 0236 7047     		bx	lr
 9853              		.cfi_endproc
 9854              	.LFE194:
 9856              		.section	.bss.FatFs,"aw",%nobits
 9857              		.align	2
 9858              		.set	.LANCHOR2,. + 0
 9861              	FatFs:
 9862 0000 00000000 		.space	4
 9863              		.section	.bss.Files,"aw",%nobits
 9864              		.align	2
 9865              		.set	.LANCHOR0,. + 0
 9868              	Files:
 9869 0000 00000000 		.space	32
 9869      00000000 
 9869      00000000 
 9869      00000000 
 9869      00000000 
 9870              		.section	.bss.Fsid,"aw",%nobits
 9871              		.align	1
 9872              		.set	.LANCHOR3,. + 0
 9875              	Fsid:
 9876 0000 0000     		.space	2
 9877              		.section	.rodata.ExCvt,"a",%progbits
 9878              		.align	2
 9879              		.set	.LANCHOR1,. + 0
 9882              	ExCvt:
 9883 0000 43       		.byte	67
 9884 0001 55       		.byte	85
 9885 0002 45       		.byte	69
 9886 0003 41       		.byte	65
 9887 0004 41       		.byte	65
 9888 0005 41       		.byte	65
 9889 0006 41       		.byte	65
 9890 0007 43       		.byte	67
 9891 0008 45       		.byte	69
 9892 0009 45       		.byte	69
 9893 000a 45       		.byte	69
 9894 000b 49       		.byte	73
 9895 000c 49       		.byte	73
 9896 000d 49       		.byte	73
 9897 000e 41       		.byte	65
 9898 000f 41       		.byte	65
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 305


 9899 0010 45       		.byte	69
 9900 0011 92       		.byte	-110
 9901 0012 92       		.byte	-110
 9902 0013 4F       		.byte	79
 9903 0014 4F       		.byte	79
 9904 0015 4F       		.byte	79
 9905 0016 55       		.byte	85
 9906 0017 55       		.byte	85
 9907 0018 59       		.byte	89
 9908 0019 4F       		.byte	79
 9909 001a 55       		.byte	85
 9910 001b 4F       		.byte	79
 9911 001c 9C       		.byte	-100
 9912 001d 4F       		.byte	79
 9913 001e 9E       		.byte	-98
 9914 001f 9F       		.byte	-97
 9915 0020 41       		.byte	65
 9916 0021 49       		.byte	73
 9917 0022 4F       		.byte	79
 9918 0023 55       		.byte	85
 9919 0024 A5       		.byte	-91
 9920 0025 A5       		.byte	-91
 9921 0026 A6       		.byte	-90
 9922 0027 A7       		.byte	-89
 9923 0028 A8       		.byte	-88
 9924 0029 A9       		.byte	-87
 9925 002a AA       		.byte	-86
 9926 002b AB       		.byte	-85
 9927 002c AC       		.byte	-84
 9928 002d AD       		.byte	-83
 9929 002e AE       		.byte	-82
 9930 002f AF       		.byte	-81
 9931 0030 B0       		.byte	-80
 9932 0031 B1       		.byte	-79
 9933 0032 B2       		.byte	-78
 9934 0033 B3       		.byte	-77
 9935 0034 B4       		.byte	-76
 9936 0035 41       		.byte	65
 9937 0036 41       		.byte	65
 9938 0037 41       		.byte	65
 9939 0038 B8       		.byte	-72
 9940 0039 B9       		.byte	-71
 9941 003a BA       		.byte	-70
 9942 003b BB       		.byte	-69
 9943 003c BC       		.byte	-68
 9944 003d BD       		.byte	-67
 9945 003e BE       		.byte	-66
 9946 003f BF       		.byte	-65
 9947 0040 C0       		.byte	-64
 9948 0041 C1       		.byte	-63
 9949 0042 C2       		.byte	-62
 9950 0043 C3       		.byte	-61
 9951 0044 C4       		.byte	-60
 9952 0045 C5       		.byte	-59
 9953 0046 41       		.byte	65
 9954 0047 41       		.byte	65
 9955 0048 C8       		.byte	-56
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 306


 9956 0049 C9       		.byte	-55
 9957 004a CA       		.byte	-54
 9958 004b CB       		.byte	-53
 9959 004c CC       		.byte	-52
 9960 004d CD       		.byte	-51
 9961 004e CE       		.byte	-50
 9962 004f CF       		.byte	-49
 9963 0050 D1       		.byte	-47
 9964 0051 D1       		.byte	-47
 9965 0052 45       		.byte	69
 9966 0053 45       		.byte	69
 9967 0054 45       		.byte	69
 9968 0055 49       		.byte	73
 9969 0056 49       		.byte	73
 9970 0057 49       		.byte	73
 9971 0058 49       		.byte	73
 9972 0059 D9       		.byte	-39
 9973 005a DA       		.byte	-38
 9974 005b DB       		.byte	-37
 9975 005c DC       		.byte	-36
 9976 005d DD       		.byte	-35
 9977 005e 49       		.byte	73
 9978 005f DF       		.byte	-33
 9979 0060 4F       		.byte	79
 9980 0061 E1       		.byte	-31
 9981 0062 4F       		.byte	79
 9982 0063 4F       		.byte	79
 9983 0064 4F       		.byte	79
 9984 0065 4F       		.byte	79
 9985 0066 E6       		.byte	-26
 9986 0067 E8       		.byte	-24
 9987 0068 E8       		.byte	-24
 9988 0069 55       		.byte	85
 9989 006a 55       		.byte	85
 9990 006b 55       		.byte	85
 9991 006c 59       		.byte	89
 9992 006d 59       		.byte	89
 9993 006e EE       		.byte	-18
 9994 006f EF       		.byte	-17
 9995 0070 F0       		.byte	-16
 9996 0071 F1       		.byte	-15
 9997 0072 F2       		.byte	-14
 9998 0073 F3       		.byte	-13
 9999 0074 F4       		.byte	-12
 10000 0075 F5       		.byte	-11
 10001 0076 F6       		.byte	-10
 10002 0077 F7       		.byte	-9
 10003 0078 F8       		.byte	-8
 10004 0079 F9       		.byte	-7
 10005 007a FA       		.byte	-6
 10006 007b FB       		.byte	-5
 10007 007c FC       		.byte	-4
 10008 007d FD       		.byte	-3
 10009 007e FE       		.byte	-2
 10010 007f FF       		.byte	-1
 10011              		.section	.rodata.create_name.str1.4,"aMS",%progbits,1
 10012              		.align	2
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 307


 10013              	.LC0:
 10014 0000 222A2B2C 		.ascii	"\"*+,:;<=>?[]|\177\000"
 10014      3A3B3C3D 
 10014      3E3F5B5D 
 10014      7C7F00
 10015              		.section	.rodata.cst.12173,"a",%progbits
 10016              		.align	2
 10017              		.set	.LANCHOR5,. + 0
 10020              	cst.12173:
 10021 0000 0100     		.short	1
 10022 0002 0400     		.short	4
 10023 0004 1000     		.short	16
 10024 0006 4000     		.short	64
 10025 0008 0001     		.short	256
 10026 000a 0002     		.short	512
 10027 000c 0000     		.short	0
 10028              		.section	.rodata.cst32.12174,"a",%progbits
 10029              		.align	2
 10030              		.set	.LANCHOR4,. + 0
 10033              	cst32.12174:
 10034 0000 0100     		.short	1
 10035 0002 0200     		.short	2
 10036 0004 0400     		.short	4
 10037 0006 0800     		.short	8
 10038 0008 1000     		.short	16
 10039 000a 2000     		.short	32
 10040 000c 0000     		.short	0
 10041              		.section	.rodata.f_mkfs.str1.4,"aMS",%progbits,1
 10042              		.align	2
 10043              	.LC1:
 10044 0000 EBFE904D 		.ascii	"\353\376\220MSDOS5.0\000"
 10044      53444F53 
 10044      352E3000 
 10045              	.LC2:
 10046 000c 4E4F204E 		.ascii	"NO NAME    FAT32   \000"
 10046      414D4520 
 10046      20202046 
 10046      41543332 
 10046      20202000 
 10047              	.LC3:
 10048 0020 4E4F204E 		.ascii	"NO NAME    FAT     \000"
 10048      414D4520 
 10048      20202046 
 10048      41542020 
 10048      20202000 
 10049              		.text
 10050              	.Letext0:
 10051              		.file 2 "Middlewares/Third_Party/FatFs/src/integer.h"
 10052              		.file 3 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_defau
 10053              		.file 4 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 10054              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 10055              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 10056              		.file 7 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/
 10057              		.file 8 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/stdio.h"
 10058              		.file 9 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 10059              		.file 10 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 10060              		.file 11 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 308


 10061              		.file 12 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 10062              		.file 13 "<built-in>"
 10063              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 10064              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 10065              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 10066              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 10067              		.file 18 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/stdlib.h"
 10068              		.file 19 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 10069              		.file 20 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 10070              		.file 21 "Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc/usbh_msc.h"
 10071              		.file 22 "Middlewares/Third_Party/FatFs/src/ff.h"
 10072              		.file 23 "Middlewares/Third_Party/FatFs/src/diskio.h"
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 309


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ff.c
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:18     .text.ld_word:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:24     .text.ld_word:0000000000000000 ld_word
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:47     .text.ld_dword:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:53     .text.ld_dword:0000000000000000 ld_dword
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:83     .text.st_word:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:89     .text.st_word:0000000000000000 st_word
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:110    .text.st_dword:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:116    .text.st_dword:0000000000000000 st_dword
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:145    .text.mem_cpy:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:151    .text.mem_cpy:0000000000000000 mem_cpy
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:183    .text.mem_set:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:189    .text.mem_set:0000000000000000 mem_set
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:213    .text.mem_cmp:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:219    .text.mem_cmp:0000000000000000 mem_cmp
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:269    .text.chk_chr:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:275    .text.chk_chr:0000000000000000 chk_chr
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:305    .text.chk_lock:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:311    .text.chk_lock:0000000000000000 chk_lock
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:433    .text.chk_lock:0000000000000070 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:438    .text.enq_lock:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:444    .text.enq_lock:0000000000000000 enq_lock
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:481    .text.enq_lock:000000000000001c $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:486    .text.inc_lock:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:492    .text.inc_lock:0000000000000000 inc_lock
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:645    .text.inc_lock:00000000000000a0 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:650    .text.dec_lock:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:656    .text.dec_lock:0000000000000000 dec_lock
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:721    .text.dec_lock:000000000000003c $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:726    .text.clear_lock:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:732    .text.clear_lock:0000000000000000 clear_lock
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:798    .text.clear_lock:0000000000000038 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:803    .text.clust2sect:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:809    .text.clust2sect:0000000000000000 clust2sect
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:842    .text.clmt_clust:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:848    .text.clmt_clust:0000000000000000 clmt_clust
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:899    .text.ld_clust:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:905    .text.ld_clust:0000000000000000 ld_clust
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:950    .text.st_clust:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:956    .text.st_clust:0000000000000000 st_clust
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1000   .text.get_fileinfo:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1006   .text.get_fileinfo:0000000000000000 get_fileinfo
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1120   .text.create_name:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1126   .text.create_name:0000000000000000 create_name
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1310   .text.create_name:00000000000000c4 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1316   .text.get_ldnumber:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1322   .text.get_ldnumber:0000000000000000 get_ldnumber
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1426   .text.putc_init:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1432   .text.putc_init:0000000000000000 putc_init
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1452   .text.lock_fs:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1458   .text.lock_fs:0000000000000000 lock_fs
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1494   .text.validate:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1500   .text.validate:0000000000000000 validate
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1570   .text.sync_window:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1576   .text.sync_window:0000000000000000 sync_window
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1666   .text.move_window:0000000000000000 $t
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 310


/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1672   .text.move_window:0000000000000000 move_window
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1730   .text.check_fs:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1736   .text.check_fs:0000000000000000 check_fs
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1819   .text.check_fs:0000000000000070 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1826   .text.find_volume:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:1832   .text.find_volume:0000000000000000 find_volume
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:2394   .text.find_volume:0000000000000304 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:2402   .text.put_fat:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:2408   .text.put_fat:0000000000000000 put_fat
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:2606   .text.get_fat:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:2612   .text.get_fat:0000000000000000 get_fat
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:2778   .text.dir_sdi:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:2784   .text.dir_sdi:0000000000000000 dir_sdi
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:2941   .text.create_chain:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:2947   .text.create_chain:0000000000000000 create_chain
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:3132   .text.remove_chain:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:3138   .text.remove_chain:0000000000000000 remove_chain
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:3259   .text.dir_remove:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:3265   .text.dir_remove:0000000000000000 dir_remove
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:3308   .text.dir_next:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:3314   .text.dir_next:0000000000000000 dir_next
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:3543   .text.dir_find:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:3549   .text.dir_find:0000000000000000 dir_find
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:3635   .text.follow_path:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:3641   .text.follow_path:0000000000000000 follow_path
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:3768   .text.dir_alloc:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:3774   .text.dir_alloc:0000000000000000 dir_alloc
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:3867   .text.dir_register:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:3873   .text.dir_register:0000000000000000 dir_register
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:3936   .text.dir_read:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:3942   .text.dir_read:0000000000000000 dir_read
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:4040   .text.unlock_fs:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:4046   .text.unlock_fs:0000000000000000 unlock_fs
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:4089   .text.sync_fs:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:4095   .text.sync_fs:0000000000000000 sync_fs
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:4191   .text.sync_fs:0000000000000084 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:4197   .text.f_mount:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:4204   .text.f_mount:0000000000000000 f_mount
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:4334   .text.f_mount:0000000000000084 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:4339   .text.f_open:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:4346   .text.f_open:0000000000000000 f_open
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:4782   .text.f_read:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:4789   .text.f_read:0000000000000000 f_read
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:5148   .text.f_write:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:5155   .text.f_write:0000000000000000 f_write
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:5546   .text.putc_bfd:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:5552   .text.putc_bfd:0000000000000000 putc_bfd
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:5642   .text.putc_flush:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:5648   .text.putc_flush:0000000000000000 putc_flush
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:5718   .text.f_sync:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:5725   .text.f_sync:0000000000000000 f_sync
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:5866   .text.f_close:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:5873   .text.f_close:0000000000000000 f_close
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:5943   .text.f_lseek:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:5950   .text.f_lseek:0000000000000000 f_lseek
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:6546   .text.f_opendir:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:6553   .text.f_opendir:0000000000000000 f_opendir
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 311


/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:6690   .text.f_closedir:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:6697   .text.f_closedir:0000000000000000 f_closedir
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:6761   .text.f_readdir:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:6768   .text.f_readdir:0000000000000000 f_readdir
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:6862   .text.f_stat:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:6869   .text.f_stat:0000000000000000 f_stat
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:6950   .text.f_getfree:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:6957   .text.f_getfree:0000000000000000 f_getfree
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:7176   .text.f_truncate:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:7183   .text.f_truncate:0000000000000000 f_truncate
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:7362   .text.f_unlink:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:7369   .text.f_unlink:0000000000000000 f_unlink
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:7549   .text.f_mkdir:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:7556   .text.f_mkdir:0000000000000000 f_mkdir
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:7862   .text.f_rename:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:7869   .text.f_rename:0000000000000000 f_rename
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:8104   .text.f_mkfs:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:8111   .text.f_mkfs:0000000000000000 f_mkfs
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:8536   .text.f_mkfs:0000000000000270 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:8541   .text.f_mkfs:0000000000000280 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:9116   .text.f_mkfs:0000000000000620 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:9125   .text.f_mkfs:0000000000000638 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:9146   .text.f_gets:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:9153   .text.f_gets:0000000000000000 f_gets
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:9249   .text.f_putc:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:9256   .text.f_putc:0000000000000000 f_putc
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:9296   .text.f_puts:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:9303   .text.f_puts:0000000000000000 f_puts
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:9352   .text.f_printf:0000000000000000 $t
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:9359   .text.f_printf:0000000000000000 f_printf
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:9511   .text.f_printf:00000000000000a2 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:9857   .bss.FatFs:0000000000000000 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:9861   .bss.FatFs:0000000000000000 FatFs
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:9864   .bss.Files:0000000000000000 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:9868   .bss.Files:0000000000000000 Files
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:9871   .bss.Fsid:0000000000000000 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:9875   .bss.Fsid:0000000000000000 Fsid
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:9878   .rodata.ExCvt:0000000000000000 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:9882   .rodata.ExCvt:0000000000000000 ExCvt
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:10012  .rodata.create_name.str1.4:0000000000000000 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:10016  .rodata.cst.12173:0000000000000000 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:10020  .rodata.cst.12173:0000000000000000 cst.12173
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:10029  .rodata.cst32.12174:0000000000000000 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:10033  .rodata.cst32.12174:0000000000000000 cst32.12174
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:10042  .rodata.f_mkfs.str1.4:0000000000000000 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:9535   .text.f_printf:00000000000000b9 $d
/var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s:9535   .text.f_printf:00000000000000ba $t

UNDEFINED SYMBOLS
ff_req_grant
disk_status
disk_write
disk_read
disk_initialize
ff_rel_grant
disk_ioctl
ff_del_syncobj
ARM GAS  /var/folders/0d/93p3r6493yg7p0rvl_4r983m0000gn/T//cclHudTL.s 			page 312


ff_cre_syncobj
get_fattime
